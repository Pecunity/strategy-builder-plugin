{
  "address": "0xD9Cfd5820Db6f733cd0640DC81CB58831164b14F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAction",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "NotContractCaller",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "internalType": "uint8",
          "name": "functionId",
          "type": "uint8"
        }
      ],
      "name": "NotImplemented",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyBuilderPlugin__AutomationAlreadyExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "condition",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "id",
          "type": "uint16"
        }
      ],
      "name": "StrategyBuilderPlugin__AutomationNotExecutable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyBuilderPlugin__AutomationNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyBuilderPlugin__ChangeActionInConditionFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyBuilderPlugin__ChangeStrategyInConditionFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyBuilderPlugin__FeeExceedMaxFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyBuilderPlugin__StrategyAlreadyExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyBuilderPlugin__StrategyDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StrategyBuilderPlugin__StrategyIsInUse",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "condition",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "id",
          "type": "uint16"
        }
      ],
      "name": "StrategyBuilderPlugin__UpdateConditionFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "automationId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "strategyId",
          "type": "uint16"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "conditionAddress",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "id",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "result1",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "result0",
              "type": "uint16"
            }
          ],
          "indexed": false,
          "internalType": "struct IStrategyBuilderPlugin.Condition",
          "name": "condition",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "paymentToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "AutomationActivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "automationId",
          "type": "uint16"
        }
      ],
      "name": "AutomationDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "automationId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "paymentToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "name": "AutomationExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "strategyId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "conditionAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint16",
                      "name": "id",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint16",
                      "name": "result1",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint16",
                      "name": "result0",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct IStrategyBuilderPlugin.Condition",
                  "name": "condition",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes4",
                      "name": "selector",
                      "type": "bytes4"
                    },
                    {
                      "internalType": "bytes",
                      "name": "parameter",
                      "type": "bytes"
                    },
                    {
                      "internalType": "address",
                      "name": "target",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum IStrategyBuilderPlugin.ActionType",
                      "name": "actionType",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct IStrategyBuilderPlugin.Action[]",
                  "name": "actions",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct IStrategyBuilderPlugin.StrategyStep[]",
              "name": "steps",
              "type": "tuple[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IStrategyBuilderPlugin.Strategy",
          "name": "strategy",
          "type": "tuple"
        }
      ],
      "name": "StrategyAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "strategyId",
          "type": "uint16"
        }
      ],
      "name": "StrategyDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "strategyId",
          "type": "uint16"
        }
      ],
      "name": "StrategyExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "strategyId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "stepId",
          "type": "uint16"
        },
        {
          "components": [
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bytes",
              "name": "parameter",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "enum IStrategyBuilderPlugin.ActionType",
              "name": "actionType",
              "type": "uint8"
            }
          ],
          "indexed": false,
          "internalType": "struct IStrategyBuilderPlugin.Action[]",
          "name": "actions",
          "type": "tuple[]"
        }
      ],
      "name": "StrategyStepExecuted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AUTHOR",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_id",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_strategyId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_paymentToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxFeeAmount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "conditionAddress",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "id",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "result1",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "result0",
              "type": "uint16"
            }
          ],
          "internalType": "struct IStrategyBuilderPlugin.Condition",
          "name": "_condition",
          "type": "tuple"
        }
      ],
      "name": "activateAutomation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_id",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "conditionAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "id",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "result1",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "result0",
                  "type": "uint16"
                }
              ],
              "internalType": "struct IStrategyBuilderPlugin.Condition",
              "name": "condition",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                },
                {
                  "internalType": "bytes",
                  "name": "parameter",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "enum IStrategyBuilderPlugin.ActionType",
                  "name": "actionType",
                  "type": "uint8"
                }
              ],
              "internalType": "struct IStrategyBuilderPlugin.Action[]",
              "name": "actions",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IStrategyBuilderPlugin.StrategyStep[]",
          "name": "_steps",
          "type": "tuple[]"
        }
      ],
      "name": "addStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_id",
          "type": "uint16"
        }
      ],
      "name": "automation",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "conditionAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "id",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "result1",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "result0",
                  "type": "uint16"
                }
              ],
              "internalType": "struct IStrategyBuilderPlugin.Condition",
              "name": "condition",
              "type": "tuple"
            },
            {
              "internalType": "uint16",
              "name": "strategyId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "paymentToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxFeeAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IStrategyBuilderPlugin.Automation",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_id",
          "type": "uint16"
        }
      ],
      "name": "deleteAutomation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_id",
          "type": "uint16"
        }
      ],
      "name": "deleteStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_id",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beneficary",
          "type": "address"
        }
      ],
      "name": "executeAutomation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_id",
          "type": "uint16"
        }
      ],
      "name": "executeStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeManager",
      "outputs": [
        {
          "internalType": "contract IFeeManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onInstall",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onUninstall",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pluginManifest",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes4[]",
              "name": "interfaceIds",
              "type": "bytes4[]"
            },
            {
              "internalType": "bytes4[]",
              "name": "dependencyInterfaceIds",
              "type": "bytes4[]"
            },
            {
              "internalType": "bytes4[]",
              "name": "executionFunctions",
              "type": "bytes4[]"
            },
            {
              "internalType": "bytes4[]",
              "name": "permittedExecutionSelectors",
              "type": "bytes4[]"
            },
            {
              "internalType": "bool",
              "name": "permitAnyExternalAddress",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "canSpendNativeToken",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "externalAddress",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "permitAnySelector",
                  "type": "bool"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct ManifestExternalCallPermission[]",
              "name": "permittedExternalCalls",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "bytes4",
                  "name": "executionSelector",
                  "type": "bytes4"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ManifestAssociatedFunctionType",
                      "name": "functionType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "functionId",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "dependencyIndex",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ManifestFunction",
                  "name": "associatedFunction",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ManifestAssociatedFunction[]",
              "name": "userOpValidationFunctions",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "bytes4",
                  "name": "executionSelector",
                  "type": "bytes4"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ManifestAssociatedFunctionType",
                      "name": "functionType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "functionId",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "dependencyIndex",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ManifestFunction",
                  "name": "associatedFunction",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ManifestAssociatedFunction[]",
              "name": "runtimeValidationFunctions",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "bytes4",
                  "name": "executionSelector",
                  "type": "bytes4"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ManifestAssociatedFunctionType",
                      "name": "functionType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "functionId",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "dependencyIndex",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ManifestFunction",
                  "name": "associatedFunction",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ManifestAssociatedFunction[]",
              "name": "preUserOpValidationHooks",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "bytes4",
                  "name": "executionSelector",
                  "type": "bytes4"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ManifestAssociatedFunctionType",
                      "name": "functionType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "functionId",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "dependencyIndex",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ManifestFunction",
                  "name": "associatedFunction",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ManifestAssociatedFunction[]",
              "name": "preRuntimeValidationHooks",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "bytes4",
                  "name": "executionSelector",
                  "type": "bytes4"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ManifestAssociatedFunctionType",
                      "name": "functionType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "functionId",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "dependencyIndex",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ManifestFunction",
                  "name": "preExecHook",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ManifestAssociatedFunctionType",
                      "name": "functionType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "functionId",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "dependencyIndex",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ManifestFunction",
                  "name": "postExecHook",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ManifestExecutionHook[]",
              "name": "executionHooks",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct PluginManifest",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pluginMetadata",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "author",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "bytes4",
                  "name": "functionSelector",
                  "type": "bytes4"
                },
                {
                  "internalType": "string",
                  "name": "permissionDescription",
                  "type": "string"
                }
              ],
              "internalType": "struct SelectorPermission[]",
              "name": "permissionDescriptors",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct PluginMetadata",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "functionId",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "preExecHookData",
          "type": "bytes"
        }
      ],
      "name": "postExecutionHook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "functionId",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "preExecutionHook",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "functionId",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "preRuntimeValidationHook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "functionId",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        }
      ],
      "name": "preUserOpValidationHook",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "functionId",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "runtimeValidationFunction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_id",
          "type": "uint16"
        }
      ],
      "name": "strategy",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "conditionAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint16",
                      "name": "id",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint16",
                      "name": "result1",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint16",
                      "name": "result0",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct IStrategyBuilderPlugin.Condition",
                  "name": "condition",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes4",
                      "name": "selector",
                      "type": "bytes4"
                    },
                    {
                      "internalType": "bytes",
                      "name": "parameter",
                      "type": "bytes"
                    },
                    {
                      "internalType": "address",
                      "name": "target",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum IStrategyBuilderPlugin.ActionType",
                      "name": "actionType",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct IStrategyBuilderPlugin.Action[]",
                  "name": "actions",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct IStrategyBuilderPlugin.StrategyStep[]",
              "name": "steps",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IStrategyBuilderPlugin.Strategy",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "functionId",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        }
      ],
      "name": "userOpValidationFunction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcd6859df8909f2ec0c9105542f58baeee3135b5d8faf942024cd4af39831a38f",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x36375828fd821935cFf3E8AB6322cAb54BBfaDeC",
    "contractAddress": null,
    "transactionIndex": 3,
    "gasUsed": "4243589",
    "logsBloom": "0x
    "blockHash": "0xf4ed70711448ee56d6419de796a1053860eff31acef34a3b78f66084a2470acf",
    "transactionHash": "0xcd6859df8909f2ec0c9105542f58baeee3135b5d8faf942024cd4af39831a38f",
    "logs": [],
    "blockNumber": 116802910,
    "cumulativeGasUsed": "4408815",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB25a5D144626a0D488e52AE717A051a2E9997076"
  ],
  "numDeployments": 1,
  "solcInputHash": "6248e71b78e680f7b703bf92a612ee15",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAction\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"NotContractCaller\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"uint8\",\"name\":\"functionId\",\"type\":\"uint8\"}],\"name\":\"NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyBuilderPlugin__AutomationAlreadyExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"condition\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"}],\"name\":\"StrategyBuilderPlugin__AutomationNotExecutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyBuilderPlugin__AutomationNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyBuilderPlugin__ChangeActionInConditionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyBuilderPlugin__ChangeStrategyInConditionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyBuilderPlugin__FeeExceedMaxFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyBuilderPlugin__StrategyAlreadyExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyBuilderPlugin__StrategyDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyBuilderPlugin__StrategyIsInUse\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"condition\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"}],\"name\":\"StrategyBuilderPlugin__UpdateConditionFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"automationId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"strategyId\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"conditionAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"result1\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"result0\",\"type\":\"uint16\"}],\"indexed\":false,\"internalType\":\"struct IStrategyBuilderPlugin.Condition\",\"name\":\"condition\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxFeeAmount\",\"type\":\"uint256\"}],\"name\":\"AutomationActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"automationId\",\"type\":\"uint16\"}],\"name\":\"AutomationDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"automationId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"AutomationExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"strategyId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"conditionAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"result1\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"result0\",\"type\":\"uint16\"}],\"internalType\":\"struct IStrategyBuilderPlugin.Condition\",\"name\":\"condition\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"parameter\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"enum IStrategyBuilderPlugin.ActionType\",\"name\":\"actionType\",\"type\":\"uint8\"}],\"internalType\":\"struct IStrategyBuilderPlugin.Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IStrategyBuilderPlugin.StrategyStep[]\",\"name\":\"steps\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct IStrategyBuilderPlugin.Strategy\",\"name\":\"strategy\",\"type\":\"tuple\"}],\"name\":\"StrategyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"strategyId\",\"type\":\"uint16\"}],\"name\":\"StrategyDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"strategyId\",\"type\":\"uint16\"}],\"name\":\"StrategyExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"strategyId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"stepId\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"parameter\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"enum IStrategyBuilderPlugin.ActionType\",\"name\":\"actionType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct IStrategyBuilderPlugin.Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"}],\"name\":\"StrategyStepExecuted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AUTHOR\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_id\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_strategyId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxFeeAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"conditionAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"result1\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"result0\",\"type\":\"uint16\"}],\"internalType\":\"struct IStrategyBuilderPlugin.Condition\",\"name\":\"_condition\",\"type\":\"tuple\"}],\"name\":\"activateAutomation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_id\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"conditionAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"result1\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"result0\",\"type\":\"uint16\"}],\"internalType\":\"struct IStrategyBuilderPlugin.Condition\",\"name\":\"condition\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"parameter\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"enum IStrategyBuilderPlugin.ActionType\",\"name\":\"actionType\",\"type\":\"uint8\"}],\"internalType\":\"struct IStrategyBuilderPlugin.Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IStrategyBuilderPlugin.StrategyStep[]\",\"name\":\"_steps\",\"type\":\"tuple[]\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_id\",\"type\":\"uint16\"}],\"name\":\"automation\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"conditionAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"result1\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"result0\",\"type\":\"uint16\"}],\"internalType\":\"struct IStrategyBuilderPlugin.Condition\",\"name\":\"condition\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"strategyId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxFeeAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStrategyBuilderPlugin.Automation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_id\",\"type\":\"uint16\"}],\"name\":\"deleteAutomation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_id\",\"type\":\"uint16\"}],\"name\":\"deleteStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_id\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficary\",\"type\":\"address\"}],\"name\":\"executeAutomation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_id\",\"type\":\"uint16\"}],\"name\":\"executeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeManager\",\"outputs\":[{\"internalType\":\"contract IFeeManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onInstall\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onUninstall\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pluginManifest\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes4[]\",\"name\":\"interfaceIds\",\"type\":\"bytes4[]\"},{\"internalType\":\"bytes4[]\",\"name\":\"dependencyInterfaceIds\",\"type\":\"bytes4[]\"},{\"internalType\":\"bytes4[]\",\"name\":\"executionFunctions\",\"type\":\"bytes4[]\"},{\"internalType\":\"bytes4[]\",\"name\":\"permittedExecutionSelectors\",\"type\":\"bytes4[]\"},{\"internalType\":\"bool\",\"name\":\"permitAnyExternalAddress\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canSpendNativeToken\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"externalAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"permitAnySelector\",\"type\":\"bool\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct ManifestExternalCallPermission[]\",\"name\":\"permittedExternalCalls\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"executionSelector\",\"type\":\"bytes4\"},{\"components\":[{\"internalType\":\"enum ManifestAssociatedFunctionType\",\"name\":\"functionType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"functionId\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"dependencyIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct ManifestFunction\",\"name\":\"associatedFunction\",\"type\":\"tuple\"}],\"internalType\":\"struct ManifestAssociatedFunction[]\",\"name\":\"userOpValidationFunctions\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"executionSelector\",\"type\":\"bytes4\"},{\"components\":[{\"internalType\":\"enum ManifestAssociatedFunctionType\",\"name\":\"functionType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"functionId\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"dependencyIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct ManifestFunction\",\"name\":\"associatedFunction\",\"type\":\"tuple\"}],\"internalType\":\"struct ManifestAssociatedFunction[]\",\"name\":\"runtimeValidationFunctions\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"executionSelector\",\"type\":\"bytes4\"},{\"components\":[{\"internalType\":\"enum ManifestAssociatedFunctionType\",\"name\":\"functionType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"functionId\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"dependencyIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct ManifestFunction\",\"name\":\"associatedFunction\",\"type\":\"tuple\"}],\"internalType\":\"struct ManifestAssociatedFunction[]\",\"name\":\"preUserOpValidationHooks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"executionSelector\",\"type\":\"bytes4\"},{\"components\":[{\"internalType\":\"enum ManifestAssociatedFunctionType\",\"name\":\"functionType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"functionId\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"dependencyIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct ManifestFunction\",\"name\":\"associatedFunction\",\"type\":\"tuple\"}],\"internalType\":\"struct ManifestAssociatedFunction[]\",\"name\":\"preRuntimeValidationHooks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"executionSelector\",\"type\":\"bytes4\"},{\"components\":[{\"internalType\":\"enum ManifestAssociatedFunctionType\",\"name\":\"functionType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"functionId\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"dependencyIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct ManifestFunction\",\"name\":\"preExecHook\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ManifestAssociatedFunctionType\",\"name\":\"functionType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"functionId\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"dependencyIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct ManifestFunction\",\"name\":\"postExecHook\",\"type\":\"tuple\"}],\"internalType\":\"struct ManifestExecutionHook[]\",\"name\":\"executionHooks\",\"type\":\"tuple[]\"}],\"internalType\":\"struct PluginManifest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pluginMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"author\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"},{\"internalType\":\"string\",\"name\":\"permissionDescription\",\"type\":\"string\"}],\"internalType\":\"struct SelectorPermission[]\",\"name\":\"permissionDescriptors\",\"type\":\"tuple[]\"}],\"internalType\":\"struct PluginMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"functionId\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"preExecHookData\",\"type\":\"bytes\"}],\"name\":\"postExecutionHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"functionId\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"preExecutionHook\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"functionId\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"preRuntimeValidationHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"functionId\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"}],\"name\":\"preUserOpValidationHook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"functionId\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"runtimeValidationFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_id\",\"type\":\"uint16\"}],\"name\":\"strategy\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"conditionAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"result1\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"result0\",\"type\":\"uint16\"}],\"internalType\":\"struct IStrategyBuilderPlugin.Condition\",\"name\":\"condition\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"parameter\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"enum IStrategyBuilderPlugin.ActionType\",\"name\":\"actionType\",\"type\":\"uint8\"}],\"internalType\":\"struct IStrategyBuilderPlugin.Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IStrategyBuilderPlugin.StrategyStep[]\",\"name\":\"steps\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IStrategyBuilderPlugin.Strategy\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"functionId\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"}],\"name\":\"userOpValidationFunction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onInstall(bytes)\":{\"details\":\"Called by the modular account during `installPlugin`.\",\"params\":{\"data\":\"Optional bytes array to be decoded and used by the plugin to setup initial plugin data for the modular account.\"}},\"onUninstall(bytes)\":{\"details\":\"Called by the modular account during `uninstallPlugin`.\",\"params\":{\"data\":\"Optional bytes array to be decoded and used by the plugin to clear plugin data for the modular account.\"}},\"pluginManifest()\":{\"details\":\"This manifest MUST stay constant over time.\",\"returns\":{\"_0\":\"A manifest describing the contents and intended configuration of the plugin.\"}},\"pluginMetadata()\":{\"details\":\"This metadata MUST stay constant over time.\",\"returns\":{\"_0\":\"A metadata struct describing the plugin.\"}},\"postExecutionHook(uint8,bytes)\":{\"details\":\"To indicate the entire call should revert, the function MUST revert.\",\"params\":{\"functionId\":\"An identifier that routes the call to different internal implementations, should there be more than one.\",\"preExecHookData\":\"The context returned by its associated pre execution hook.\"}},\"preExecutionHook(uint8,address,uint256,bytes)\":{\"details\":\"To indicate the entire call should revert, the function MUST revert.\",\"params\":{\"data\":\"The calldata sent.\",\"functionId\":\"An identifier that routes the call to different internal implementations, should there be more than one.\",\"sender\":\"The caller address.\",\"value\":\"The call value.\"},\"returns\":{\"_0\":\"Context to pass to a post execution hook, if present. An empty bytes array MAY be returned.\"}},\"preRuntimeValidationHook(uint8,address,uint256,bytes)\":{\"details\":\"To indicate the entire call should revert, the function MUST revert.\",\"params\":{\"data\":\"The calldata sent.\",\"functionId\":\"An identifier that routes the call to different internal implementations, should there be more than one.\",\"sender\":\"The caller address.\",\"value\":\"The call value.\"}},\"preUserOpValidationHook(uint8,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32)\":{\"details\":\"Pre user operation validation hooks MUST NOT return an authorizer value other than 0 or 1.\",\"params\":{\"functionId\":\"An identifier that routes the call to different internal implementations, should there be more than one.\",\"userOp\":\"The user operation.\",\"userOpHash\":\"The user operation hash.\"},\"returns\":{\"_0\":\"Packed validation data for validAfter (6 bytes), validUntil (6 bytes), and authorizer (20 bytes).\"}},\"runtimeValidationFunction(uint8,address,uint256,bytes)\":{\"details\":\"To indicate the entire call should revert, the function MUST revert.\",\"params\":{\"data\":\"The calldata sent.\",\"functionId\":\"An identifier that routes the call to different internal implementations, should there be more than one.\",\"sender\":\"The caller address.\",\"value\":\"The call value.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas. Supporting the IPlugin interface is a requirement for plugin installation. This is also used by the modular account to prevent standard execution functions `execute`, `executeBatch`, and `executeFromPluginExternal` from making calls to plugins.\",\"params\":{\"interfaceId\":\"The interface ID to check for support.\"},\"returns\":{\"_0\":\"True if the contract supports `interfaceId`.\"}},\"userOpValidationFunction(uint8,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32)\":{\"params\":{\"functionId\":\"An identifier that routes the call to different internal implementations, should there be more than one.\",\"userOp\":\"The user operation.\",\"userOpHash\":\"The user operation hash.\"},\"returns\":{\"_0\":\"Packed validation data for validAfter (6 bytes), validUntil (6 bytes), and authorizer (20 bytes).\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onInstall(bytes)\":{\"notice\":\"Initialize plugin data for the modular account.\"},\"onUninstall(bytes)\":{\"notice\":\"Clear plugin data for the modular account.\"},\"pluginManifest()\":{\"notice\":\"Describe the contents and intended configuration of the plugin.\"},\"pluginMetadata()\":{\"notice\":\"Describe the metadata of the plugin.\"},\"postExecutionHook(uint8,bytes)\":{\"notice\":\"Run the post execution hook specified by the `functionId`.\"},\"preExecutionHook(uint8,address,uint256,bytes)\":{\"notice\":\"Run the pre execution hook specified by the `functionId`.\"},\"preRuntimeValidationHook(uint8,address,uint256,bytes)\":{\"notice\":\"Run the pre runtime validation hook specified by the `functionId`.\"},\"preUserOpValidationHook(uint8,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32)\":{\"notice\":\"Run the pre user operation validation hook specified by the `functionId`.\"},\"runtimeValidationFunction(uint8,address,uint256,bytes)\":{\"notice\":\"Run the runtime validationFunction specified by the `functionId`.\"},\"userOpValidationFunction(uint8,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32)\":{\"notice\":\"Run the user operation validationFunction specified by the `functionId`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/StrategyBuilderPlugin.sol\":\"StrategyBuilderPlugin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"modular-account-libs/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n// Ported from @openzeppelin/contracts@v5.0.2\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc94ab7be7d85d340decc4b2b0468f56c5565a74f1eb9ea3b90453a07845cb516\",\"license\":\"MIT\"},\"modular-account-libs/interfaces/IPlugin.sol\":{\"content\":\"// This work is marked with CC0 1.0 Universal.\\n//\\n// SPDX-License-Identifier: CC0-1.0\\n//\\n// To view a copy of this license, visit http://creativecommons.org/publicdomain/zero/1.0\\n\\npragma solidity ^0.8.20;\\n\\nimport {UserOperation} from \\\"./UserOperation.sol\\\";\\n\\nenum ManifestAssociatedFunctionType {\\n    // Function is not defined.\\n    NONE,\\n    // Function belongs to this plugin.\\n    SELF,\\n    // Function belongs to an external plugin provided as a dependency during plugin installation. Plugins MAY depend\\n    // on external validation functions. It MUST NOT depend on external hooks, or installation will fail.\\n    DEPENDENCY,\\n    // Resolves to a magic value to always bypass runtime validation for a given function.\\n    // This is only assignable on runtime validation functions. If it were to be used on a user op validation function,\\n    // it would risk burning gas from the account. When used as a hook in any hook location, it is equivalent to not\\n    // setting a hook and is therefore disallowed.\\n    RUNTIME_VALIDATION_ALWAYS_ALLOW,\\n    // Resolves to a magic value to always fail in a hook for a given function.\\n    // This is only assignable to pre hooks (pre validation and pre execution). It should not be used on\\n    // validation functions themselves, because this is equivalent to leaving the validation functions unset.\\n    // It should not be used in post-exec hooks, because if it is known to always revert, that should happen\\n    // as early as possible to save gas.\\n    PRE_HOOK_ALWAYS_DENY\\n}\\n\\n/// @dev For functions of type `ManifestAssociatedFunctionType.DEPENDENCY`, the MSCA MUST find the plugin address\\n/// of the function at `dependencies[dependencyIndex]` during the call to `installPlugin(config)`.\\nstruct ManifestFunction {\\n    ManifestAssociatedFunctionType functionType;\\n    uint8 functionId;\\n    uint256 dependencyIndex;\\n}\\n\\nstruct ManifestAssociatedFunction {\\n    bytes4 executionSelector;\\n    ManifestFunction associatedFunction;\\n}\\n\\nstruct ManifestExecutionHook {\\n    bytes4 executionSelector;\\n    ManifestFunction preExecHook;\\n    ManifestFunction postExecHook;\\n}\\n\\nstruct ManifestExternalCallPermission {\\n    address externalAddress;\\n    bool permitAnySelector;\\n    bytes4[] selectors;\\n}\\n\\nstruct SelectorPermission {\\n    bytes4 functionSelector;\\n    string permissionDescription;\\n}\\n\\n/// @dev A struct holding fields to describe the plugin in a purely view context. Intended for front end clients.\\nstruct PluginMetadata {\\n    // A human-readable name of the plugin.\\n    string name;\\n    // The version of the plugin, following the semantic versioning scheme.\\n    string version;\\n    // The author field SHOULD be a username representing the identity of the user or organization\\n    // that created this plugin.\\n    string author;\\n    // String descriptions of the relative sensitivity of specific functions. The selectors MUST be selectors for\\n    // functions implemented by this plugin.\\n    SelectorPermission[] permissionDescriptors;\\n}\\n\\n/// @dev A struct describing how the plugin should be installed on a modular account.\\nstruct PluginManifest {\\n    // List of ERC-165 interface IDs to add to account to support introspection checks. This MUST NOT include\\n    // IPlugin's interface ID.\\n    bytes4[] interfaceIds;\\n    // If this plugin depends on other plugins' validation functions, the interface IDs of those plugins MUST be\\n    // provided here, with its position in the array matching the `dependencyIndex` members of `ManifestFunction`\\n    // structs used in the manifest.\\n    bytes4[] dependencyInterfaceIds;\\n    // Execution functions defined in this plugin to be installed on the MSCA.\\n    bytes4[] executionFunctions;\\n    // Plugin execution functions already installed on the MSCA that this plugin will be able to call.\\n    bytes4[] permittedExecutionSelectors;\\n    // Boolean to indicate whether the plugin can call any external address.\\n    bool permitAnyExternalAddress;\\n    // Boolean to indicate whether the plugin needs access to spend native tokens of the account. If false, the\\n    // plugin MUST still be able to spend up to the balance that it sends to the account in the same call.\\n    bool canSpendNativeToken;\\n    ManifestExternalCallPermission[] permittedExternalCalls;\\n    ManifestAssociatedFunction[] userOpValidationFunctions;\\n    ManifestAssociatedFunction[] runtimeValidationFunctions;\\n    ManifestAssociatedFunction[] preUserOpValidationHooks;\\n    ManifestAssociatedFunction[] preRuntimeValidationHooks;\\n    ManifestExecutionHook[] executionHooks;\\n}\\n\\n/// @title Plugin Interface\\ninterface IPlugin {\\n    /// @notice Initialize plugin data for the modular account.\\n    /// @dev Called by the modular account during `installPlugin`.\\n    /// @param data Optional bytes array to be decoded and used by the plugin to setup initial plugin data for the\\n    /// modular account.\\n    function onInstall(bytes calldata data) external;\\n\\n    /// @notice Clear plugin data for the modular account.\\n    /// @dev Called by the modular account during `uninstallPlugin`.\\n    /// @param data Optional bytes array to be decoded and used by the plugin to clear plugin data for the modular\\n    /// account.\\n    function onUninstall(bytes calldata data) external;\\n\\n    /// @notice Run the pre user operation validation hook specified by the `functionId`.\\n    /// @dev Pre user operation validation hooks MUST NOT return an authorizer value other than 0 or 1.\\n    /// @param functionId An identifier that routes the call to different internal implementations, should there be\\n    /// more than one.\\n    /// @param userOp The user operation.\\n    /// @param userOpHash The user operation hash.\\n    /// @return Packed validation data for validAfter (6 bytes), validUntil (6 bytes), and authorizer (20 bytes).\\n    function preUserOpValidationHook(uint8 functionId, UserOperation calldata userOp, bytes32 userOpHash)\\n        external\\n        returns (uint256);\\n\\n    /// @notice Run the user operation validationFunction specified by the `functionId`.\\n    /// @param functionId An identifier that routes the call to different internal implementations, should there be\\n    /// more than one.\\n    /// @param userOp The user operation.\\n    /// @param userOpHash The user operation hash.\\n    /// @return Packed validation data for validAfter (6 bytes), validUntil (6 bytes), and authorizer (20 bytes).\\n    function userOpValidationFunction(uint8 functionId, UserOperation calldata userOp, bytes32 userOpHash)\\n        external\\n        returns (uint256);\\n\\n    /// @notice Run the pre runtime validation hook specified by the `functionId`.\\n    /// @dev To indicate the entire call should revert, the function MUST revert.\\n    /// @param functionId An identifier that routes the call to different internal implementations, should there be\\n    /// more than one.\\n    /// @param sender The caller address.\\n    /// @param value The call value.\\n    /// @param data The calldata sent.\\n    function preRuntimeValidationHook(uint8 functionId, address sender, uint256 value, bytes calldata data) external;\\n\\n    /// @notice Run the runtime validationFunction specified by the `functionId`.\\n    /// @dev To indicate the entire call should revert, the function MUST revert.\\n    /// @param functionId An identifier that routes the call to different internal implementations, should there be\\n    /// more than one.\\n    /// @param sender The caller address.\\n    /// @param value The call value.\\n    /// @param data The calldata sent.\\n    function runtimeValidationFunction(uint8 functionId, address sender, uint256 value, bytes calldata data) external;\\n\\n    /// @notice Run the pre execution hook specified by the `functionId`.\\n    /// @dev To indicate the entire call should revert, the function MUST revert.\\n    /// @param functionId An identifier that routes the call to different internal implementations, should there be\\n    /// more than one.\\n    /// @param sender The caller address.\\n    /// @param value The call value.\\n    /// @param data The calldata sent.\\n    /// @return Context to pass to a post execution hook, if present. An empty bytes array MAY be returned.\\n    function preExecutionHook(uint8 functionId, address sender, uint256 value, bytes calldata data)\\n        external\\n        returns (bytes memory);\\n\\n    /// @notice Run the post execution hook specified by the `functionId`.\\n    /// @dev To indicate the entire call should revert, the function MUST revert.\\n    /// @param functionId An identifier that routes the call to different internal implementations, should there be\\n    /// more than one.\\n    /// @param preExecHookData The context returned by its associated pre execution hook.\\n    function postExecutionHook(uint8 functionId, bytes calldata preExecHookData) external;\\n\\n    /// @notice Describe the contents and intended configuration of the plugin.\\n    /// @dev This manifest MUST stay constant over time.\\n    /// @return A manifest describing the contents and intended configuration of the plugin.\\n    function pluginManifest() external pure returns (PluginManifest memory);\\n\\n    /// @notice Describe the metadata of the plugin.\\n    /// @dev This metadata MUST stay constant over time.\\n    /// @return A metadata struct describing the plugin.\\n    function pluginMetadata() external pure returns (PluginMetadata memory);\\n}\\n\",\"keccak256\":\"0x0cd575082bf955179a100f2679bc2fd561a8cd510a2fdb86d9edd822134787e2\",\"license\":\"CC0-1.0\"},\"modular-account-libs/interfaces/IPluginExecutor.sol\":{\"content\":\"// This work is marked with CC0 1.0 Universal.\\n//\\n// SPDX-License-Identifier: CC0-1.0\\n//\\n// To view a copy of this license, visit http://creativecommons.org/publicdomain/zero/1.0\\n\\npragma solidity ^0.8.20;\\n\\n/// @title Plugin Executor Interface\\ninterface IPluginExecutor {\\n    /// @notice Execute a call from a plugin through the account.\\n    /// @dev Permissions must be granted to the calling plugin for the call to go through.\\n    /// @param data The calldata to send to the account.\\n    /// @return The return data from the call.\\n    function executeFromPlugin(bytes calldata data) external payable returns (bytes memory);\\n\\n    /// @notice Execute a call from a plugin to a non-plugin address.\\n    /// @dev If the target is a plugin, the call SHOULD revert. Permissions must be granted to the calling plugin\\n    /// for the call to go through.\\n    /// @param target The address to be called.\\n    /// @param value The value to send with the call.\\n    /// @param data The calldata to send to the target.\\n    /// @return The return data from the call.\\n    function executeFromPluginExternal(address target, uint256 value, bytes calldata data)\\n        external\\n        payable\\n        returns (bytes memory);\\n}\\n\",\"keccak256\":\"0xbf877cc7a5b91ec14ba13be9284de8473c08d93116b291d521845fa684a9fb42\",\"license\":\"CC0-1.0\"},\"modular-account-libs/interfaces/UserOperation.sol\":{\"content\":\"// This work is marked with CC0 1.0 Universal.\\n//\\n// SPDX-License-Identifier: CC0-1.0\\n//\\n// To view a copy of this license, visit http://creativecommons.org/publicdomain/zero/1.0\\n\\npragma solidity ^0.8.20;\\n\\n/// @notice User Operation struct as defined in ERC-4337 v0.6\\nstruct UserOperation {\\n    address sender;\\n    uint256 nonce;\\n    bytes initCode;\\n    bytes callData;\\n    uint256 callGasLimit;\\n    uint256 verificationGasLimit;\\n    uint256 preVerificationGas;\\n    uint256 maxFeePerGas;\\n    uint256 maxPriorityFeePerGas;\\n    bytes paymasterAndData;\\n    bytes signature;\\n}\\n\",\"keccak256\":\"0x5cf69718643d134b3e02b011de07788a37da9211f2469e332b9f34e5318ec3c3\",\"license\":\"CC0-1.0\"},\"modular-account-libs/plugins/BasePlugin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n//\\n// See LICENSE-MIT file for more information\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC165} from \\\"./ERC165.sol\\\";\\n\\nimport {UserOperation} from \\\"../interfaces/UserOperation.sol\\\";\\nimport {IPlugin, PluginManifest, PluginMetadata} from \\\"../interfaces/IPlugin.sol\\\";\\n\\n/// @title Base contract for plugins\\n/// @dev Implements ERC-165 to support IPlugin's interface, which is a requirement\\n/// for plugin installation. This also ensures that plugin interactions cannot\\n/// happen via the standard execution funtions `execute`, `executeBatch`, and `executeFromPluginExternal`.\\n/// Note that the plugins implementing BasePlugin cannot be installed within the account constructor. unless\\n/// `onInstall` is overriden to not check the codesize of caller. The codesize check is done to prevent an EOA\\n/// from accidentally calling the plugin and initiating state, which will make it unusable in the future when EOAs\\n/// can be upgraded to smart contract accounts.\\nabstract contract BasePlugin is ERC165, IPlugin {\\n    error AlreadyInitialized();\\n    error InvalidAction();\\n    error NotContractCaller(address caller);\\n    error NotImplemented(bytes4 selector, uint8 functionId);\\n    error NotInitialized();\\n\\n    modifier isNotInitialized(address account) {\\n        if (_isInitialized(account)) {\\n            revert AlreadyInitialized();\\n        }\\n        _;\\n    }\\n\\n    modifier isInitialized(address account) {\\n        if (!_isInitialized(account)) {\\n            revert NotInitialized();\\n        }\\n        _;\\n    }\\n\\n    modifier staysInitialized(address account) {\\n        if (!_isInitialized(account)) {\\n            revert NotInitialized();\\n        }\\n        _;\\n        if (!_isInitialized(account)) {\\n            revert InvalidAction();\\n        }\\n    }\\n\\n    /// @notice Initialize plugin data for the modular account.\\n    /// @dev Called by the modular account during `installPlugin`.\\n    /// @param data Optional bytes array to be decoded and used by the plugin to setup initial plugin data for the\\n    /// modular account.\\n    function onInstall(bytes calldata data) external virtual {\\n        if (msg.sender.code.length == 0) {\\n            revert NotContractCaller(msg.sender);\\n        }\\n        _onInstall(data);\\n    }\\n\\n    /// @notice Clear plugin data for the modular account.\\n    /// @dev Called by the modular account during `uninstallPlugin`.\\n    /// @param data Optional bytes array to be decoded and used by the plugin to clear plugin data for the modular\\n    /// account.\\n    function onUninstall(bytes calldata data) external virtual {\\n        (data);\\n        revert NotImplemented(msg.sig, 0);\\n    }\\n\\n    /// @notice Run the pre user operation validation hook specified by the `functionId`.\\n    /// @dev Pre user operation validation hooks MUST NOT return an authorizer value other than 0 or 1.\\n    /// @param functionId An identifier that routes the call to different internal implementations, should there be\\n    /// more than one.\\n    /// @param userOp The user operation.\\n    /// @param userOpHash The user operation hash.\\n    /// @return Packed validation data for validAfter (6 bytes), validUntil (6 bytes), and authorizer (20 bytes).\\n    function preUserOpValidationHook(uint8 functionId, UserOperation calldata userOp, bytes32 userOpHash)\\n        external\\n        virtual\\n        returns (uint256)\\n    {\\n        (functionId, userOp, userOpHash);\\n        revert NotImplemented(msg.sig, functionId);\\n    }\\n\\n    /// @notice Run the user operation validationFunction specified by the `functionId`.\\n    /// @param functionId An identifier that routes the call to different internal implementations, should there be\\n    /// more than one.\\n    /// @param userOp The user operation.\\n    /// @param userOpHash The user operation hash.\\n    /// @return Packed validation data for validAfter (6 bytes), validUntil (6 bytes), and authorizer (20 bytes).\\n    function userOpValidationFunction(uint8 functionId, UserOperation calldata userOp, bytes32 userOpHash)\\n        external\\n        virtual\\n        returns (uint256)\\n    {\\n        (functionId, userOp, userOpHash);\\n        revert NotImplemented(msg.sig, functionId);\\n    }\\n\\n    /// @notice Run the pre runtime validation hook specified by the `functionId`.\\n    /// @dev To indicate the entire call should revert, the function MUST revert.\\n    /// @param functionId An identifier that routes the call to different internal implementations, should there be\\n    /// more than one.\\n    /// @param sender The caller address.\\n    /// @param value The call value.\\n    /// @param data The calldata sent.\\n    function preRuntimeValidationHook(uint8 functionId, address sender, uint256 value, bytes calldata data)\\n        external\\n        virtual\\n    {\\n        (functionId, sender, value, data);\\n        revert NotImplemented(msg.sig, functionId);\\n    }\\n\\n    /// @notice Run the runtime validationFunction specified by the `functionId`.\\n    /// @dev To indicate the entire call should revert, the function MUST revert.\\n    /// @param functionId An identifier that routes the call to different internal implementations, should there be\\n    /// more than one.\\n    /// @param sender The caller address.\\n    /// @param value The call value.\\n    /// @param data The calldata sent.\\n    function runtimeValidationFunction(uint8 functionId, address sender, uint256 value, bytes calldata data)\\n        external\\n        virtual\\n    {\\n        (functionId, sender, value, data);\\n        revert NotImplemented(msg.sig, functionId);\\n    }\\n\\n    /// @notice Run the pre execution hook specified by the `functionId`.\\n    /// @dev To indicate the entire call should revert, the function MUST revert.\\n    /// @param functionId An identifier that routes the call to different internal implementations, should there be\\n    /// more than one.\\n    /// @param sender The caller address.\\n    /// @param value The call value.\\n    /// @param data The calldata sent.\\n    /// @return Context to pass to a post execution hook, if present. An empty bytes array MAY be returned.\\n    function preExecutionHook(uint8 functionId, address sender, uint256 value, bytes calldata data)\\n        external\\n        virtual\\n        returns (bytes memory)\\n    {\\n        (functionId, sender, value, data);\\n        revert NotImplemented(msg.sig, functionId);\\n    }\\n\\n    /// @notice Run the post execution hook specified by the `functionId`.\\n    /// @dev To indicate the entire call should revert, the function MUST revert.\\n    /// @param functionId An identifier that routes the call to different internal implementations, should there be\\n    /// more than one.\\n    /// @param preExecHookData The context returned by its associated pre execution hook.\\n    function postExecutionHook(uint8 functionId, bytes calldata preExecHookData) external virtual {\\n        (functionId, preExecHookData);\\n        revert NotImplemented(msg.sig, functionId);\\n    }\\n\\n    /// @notice Describe the contents and intended configuration of the plugin.\\n    /// @dev This manifest MUST stay constant over time.\\n    /// @return A manifest describing the contents and intended configuration of the plugin.\\n    function pluginManifest() external pure virtual returns (PluginManifest memory) {\\n        revert NotImplemented(msg.sig, 0);\\n    }\\n\\n    /// @notice Describe the metadata of the plugin.\\n    /// @dev This metadata MUST stay constant over time.\\n    /// @return A metadata struct describing the plugin.\\n    function pluginMetadata() external pure virtual returns (PluginMetadata memory) {\\n        revert NotImplemented(msg.sig, 0);\\n    }\\n\\n    /// @dev Returns true if this contract implements the interface defined by\\n    /// `interfaceId`. See the corresponding\\n    /// https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n    /// to learn more about how these ids are created.\\n    ///\\n    /// This function call must use less than 30 000 gas.\\n    ///\\n    /// Supporting the IPlugin interface is a requirement for plugin installation. This is also used\\n    /// by the modular account to prevent standard execution functions `execute`, `executeBatch`, and\\n    /// `executeFromPluginExternal` from making calls to plugins.\\n    /// @param interfaceId The interface ID to check for support.\\n    /// @return True if the contract supports `interfaceId`.\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IPlugin).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /// @notice Initialize plugin data for the modular account.\\n    /// @dev Called by the modular account during `installPlugin`.\\n    /// @param data Optional bytes array to be decoded and used by the plugin to setup initial plugin data for the\\n    /// modular account.\\n    function _onInstall(bytes calldata data) internal virtual {\\n        (data);\\n        revert NotImplemented(msg.sig, 0);\\n    }\\n\\n    /// @notice Check if the account has initialized this plugin yet\\n    /// @dev This function should be overwritten for plugins that have state-changing onInstall's\\n    /// @param account The account to check\\n    /// @return True if the account has initialized this plugin\\n    // solhint-disable-next-line no-empty-blocks\\n    function _isInitialized(address account) internal view virtual returns (bool) {}\\n}\\n\",\"keccak256\":\"0x1aeb1bfa0a9eb67d6031af38677646cef0846c9ea8f350ab2677c7853ceab930\",\"license\":\"MIT\"},\"modular-account-libs/plugins/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n// Ported from @openzeppelin/contracts@v5.0.2\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../interfaces/IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x76dfd6d2511ff7061e381cb99fbd7757feee1af1cf2ebc02991f80c67e5ecec3\",\"license\":\"MIT\"},\"src/StrategyBuilderPlugin.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity ^0.8.19;\\n\\nimport {BasePlugin} from \\\"modular-account-libs/plugins/BasePlugin.sol\\\";\\nimport {IPluginExecutor} from \\\"modular-account-libs/interfaces/IPluginExecutor.sol\\\";\\nimport {\\n    ManifestFunction,\\n    ManifestAssociatedFunctionType,\\n    ManifestAssociatedFunction,\\n    PluginManifest,\\n    PluginMetadata,\\n    IPlugin\\n} from \\\"modular-account-libs/interfaces/IPlugin.sol\\\";\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IStrategyBuilderPlugin} from \\\"./interfaces/IStrategyBuilderPlugin.sol\\\";\\nimport {ICondition} from \\\"./interfaces/ICondition.sol\\\";\\nimport {IFeeManager} from \\\"./interfaces/IFeeManager.sol\\\";\\n\\nerror StrategyBuilderPlugin__StrategyDoesNotExist();\\nerror StrategyBuilderPlugin__StrategyAlreadyExist();\\nerror StrategyBuilderPlugin__AutomationNotExecutable(address condition, uint16 id);\\nerror StrategyBuilderPlugin__FeeExceedMaxFee();\\nerror StrategyBuilderPlugin__AutomationNotExist();\\nerror StrategyBuilderPlugin__AutomationAlreadyExist();\\nerror StrategyBuilderPlugin__StrategyIsInUse();\\nerror StrategyBuilderPlugin__ChangeActionInConditionFailed();\\nerror StrategyBuilderPlugin__ChangeStrategyInConditionFailed();\\nerror StrategyBuilderPlugin__UpdateConditionFailed(address condition, uint16 id);\\n\\ncontract StrategyBuilderPlugin is BasePlugin, IStrategyBuilderPlugin {\\n    // metadata used by the pluginMetadata() method down below\\n    string public constant NAME = \\\"Strategy Builder Plugin\\\";\\n    string public constant VERSION = \\\"0.0.1\\\";\\n    string public constant AUTHOR = \\\"3Blocks\\\";\\n\\n    // this is a constant used in the manifest, to reference our only dependency: the single owner plugin\\n    // since it is the first, and only, plugin the index 0 will reference the single owner plugin\\n    // we can use this to tell the modular account that we should use the single owner plugin to validate our user op\\n    // in other words, we'll say \\\"make sure the person calling increment is an owner of the account using our single plugin\\\"\\n    uint256 internal constant _MANIFEST_DEPENDENCY_INDEX_OWNER_USER_OP_VALIDATION = 0;\\n\\n    IFeeManager public immutable feeManager;\\n\\n    mapping(address => mapping(uint16 => Strategy)) private strategies;\\n    mapping(address => mapping(uint16 => uint16[])) private strategiesUsed; //All automations where the strategy is used\\n    mapping(address => mapping(uint16 => uint16)) private automationsToIndex; //Maps each automation ID to its index in the owner's used strategy array.\\n    mapping(address => mapping(uint16 => Automation)) private automations;\\n\\n    // \\u250f\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2513\\n    // \\u2503       Modifier            \\u2503\\n    // \\u2517\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u251b\\n\\n    modifier strategyExist(uint16 _id) {\\n        if (strategies[msg.sender][_id].steps.length == 0) {\\n            revert StrategyBuilderPlugin__StrategyDoesNotExist();\\n        }\\n        _;\\n    }\\n\\n    modifier strategyDoesNotExist(uint16 _id) {\\n        if (strategies[msg.sender][_id].steps.length > 0) {\\n            revert StrategyBuilderPlugin__StrategyAlreadyExist();\\n        }\\n        _;\\n    }\\n\\n    modifier automationExist(uint16 _id) {\\n        if (automations[msg.sender][_id].condition.conditionAddress == address(0)) {\\n            revert StrategyBuilderPlugin__AutomationNotExist();\\n        }\\n        _;\\n    }\\n\\n    modifier automationDoesNotExist(uint16 _id) {\\n        if (automations[msg.sender][_id].condition.conditionAddress != address(0)) {\\n            revert StrategyBuilderPlugin__AutomationAlreadyExist();\\n        }\\n        _;\\n    }\\n\\n    // \\u250f\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2513\\n    // \\u2503       Constructor         \\u2503\\n    // \\u2517\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u251b\\n\\n    constructor(address _feeManager) {\\n        feeManager = IFeeManager(_feeManager);\\n    }\\n\\n    // \\u250f\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2513\\n    // \\u2503    Execution functions    \\u2503\\n    // \\u2517\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u251b\\n\\n    function addStrategy(uint16 _id, address _creator, StrategyStep[] calldata _steps)\\n        external\\n        strategyDoesNotExist(_id)\\n    {\\n        Strategy storage newStrategy = strategies[msg.sender][_id];\\n\\n        newStrategy.creator = _creator;\\n\\n        for (uint256 i = 0; i < _steps.length; i++) {\\n            StrategyStep memory step = _steps[i];\\n\\n            // Create a new step in storage\\n            StrategyStep storage newStep = newStrategy.steps.push();\\n            newStep.condition = step.condition;\\n\\n            if (step.condition.conditionAddress != address(0)) {\\n                _changeStrategyInCondition(msg.sender, step.condition.conditionAddress, step.condition.id, _id, true);\\n            }\\n\\n            // Loop through the actions and add them to the step\\n            for (uint256 j = 0; j < step.actions.length; j++) {\\n                newStep.actions.push(step.actions[j]);\\n            }\\n        }\\n\\n        emit StrategyAdded(_id, _creator, newStrategy);\\n    }\\n\\n    function deleteStrategy(uint16 _id) external strategyExist(_id) {\\n        if (strategiesUsed[msg.sender][_id].length > 0) {\\n            revert StrategyBuilderPlugin__StrategyIsInUse();\\n        }\\n\\n        Strategy memory _strategy = strategies[msg.sender][_id];\\n\\n        for (uint256 i = 0; i < _strategy.steps.length; i++) {\\n            Condition memory _condition = _strategy.steps[i].condition;\\n            if (_condition.conditionAddress != address(0)) {\\n                _changeStrategyInCondition(msg.sender, _condition.conditionAddress, _condition.id, _id, false);\\n            }\\n        }\\n\\n        delete strategies[msg.sender][_id];\\n\\n        emit StrategyDeleted(_id);\\n    }\\n\\n    function executeStrategy(uint16 _id) external strategyExist(_id) {\\n        _executeStrategy(msg.sender, _id);\\n    }\\n\\n    function activateAutomation(\\n        uint16 _id,\\n        uint16 _strategyId,\\n        address _paymentToken,\\n        uint256 _maxFeeAmount,\\n        Condition calldata _condition\\n    ) external automationDoesNotExist(_id) strategyExist(_strategyId) {\\n        _changeActionInCondition(msg.sender, _condition.conditionAddress, _condition.id, _id, true);\\n\\n        Automation storage _newAutomation = automations[msg.sender][_id];\\n\\n        _newAutomation.condition = _condition;\\n        _newAutomation.strategyId = _strategyId;\\n        _newAutomation.paymentToken = _paymentToken;\\n        _newAutomation.maxFeeAmount = _maxFeeAmount;\\n\\n        strategiesUsed[msg.sender][_strategyId].push(_id);\\n        automationsToIndex[msg.sender][_id] = uint16(strategiesUsed[msg.sender][_strategyId].length - 1);\\n\\n        emit AutomationActivated(_id, _strategyId, _condition, _paymentToken, _maxFeeAmount);\\n    }\\n\\n    function deleteAutomation(uint16 _id) external automationExist(_id) {\\n        Automation memory _automation = automations[msg.sender][_id];\\n\\n        uint16[] storage _usedInAutomations = strategiesUsed[msg.sender][_automation.strategyId];\\n\\n        uint16 _actualAutomationIndex = automationsToIndex[msg.sender][_id];\\n        uint256 _lastAutomationIndex = _usedInAutomations.length - 1;\\n        if (_actualAutomationIndex != _lastAutomationIndex) {\\n            uint16 _lastAutomation = _usedInAutomations[_lastAutomationIndex];\\n            _usedInAutomations[_actualAutomationIndex] = _lastAutomation;\\n            automationsToIndex[msg.sender][_lastAutomation] = _actualAutomationIndex;\\n        }\\n        _usedInAutomations.pop();\\n\\n        _changeActionInCondition(\\n            msg.sender, _automation.condition.conditionAddress, _automation.condition.id, _id, false\\n        );\\n\\n        delete automations[msg.sender][_id];\\n\\n        emit AutomationDeleted(_id);\\n    }\\n\\n    function executeAutomation(uint16 _id, address _wallet, address _beneficary) external {\\n        Automation memory _automation = automations[_wallet][_id];\\n\\n        //Check the condition\\n        (uint8 _conditionResult,) = _checkCondition(_wallet, _automation.condition);\\n\\n        if (_conditionResult == 0) {\\n            revert StrategyBuilderPlugin__AutomationNotExecutable(\\n                _automation.condition.conditionAddress, _automation.condition.id\\n            );\\n        }\\n\\n        uint256 _feeNetto = _executeStrategy(_wallet, _automation.strategyId);\\n\\n        //Calculate the resultant fee\\n        uint256 _resultantFee = feeManager.prepareForPayment(_feeNetto, _automation.paymentToken);\\n\\n        if (_resultantFee > _automation.maxFeeAmount) {\\n            revert StrategyBuilderPlugin__FeeExceedMaxFee();\\n        }\\n\\n        address _strategyCreator = strategies[_wallet][_automation.strategyId].creator;\\n        _payAutomation(_wallet, _automation.paymentToken, _resultantFee, _beneficary, _strategyCreator);\\n\\n        _updateCondition(_wallet, _automation.condition, _id);\\n\\n        emit AutomationExecuted(_id, _automation.paymentToken, _resultantFee);\\n    }\\n\\n    // \\u250f\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2513\\n    // \\u2503       Internal functions         \\u2503\\n    // \\u2517\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u251b\\n\\n    function _executeStrategy(address _wallet, uint16 _id) internal returns (uint256 fee) {\\n        fee = _executeStep(_wallet, _id, 0);\\n\\n        emit StrategyExecuted(_id);\\n    }\\n\\n    function _executeStep(address _wallet, uint16 _id, uint16 _index) internal returns (uint256 fee) {\\n        StrategyStep memory _step = strategies[_wallet][_id].steps[_index];\\n\\n        //Check Condition\\n        (uint8 _conditionResult, uint16 _nextIndex) = _checkCondition(_wallet, _step.condition);\\n\\n        if (_conditionResult == 1) {\\n            //Execute all actions from the step\\n            for (uint256 i = 0; i < _step.actions.length; i++) {\\n                uint256 _actionFee = _executeAction(_wallet, _step.actions[i]);\\n                fee += _actionFee;\\n            }\\n\\n            emit StrategyStepExecuted(_id, _index, _step.actions);\\n        }\\n\\n        if (_nextIndex != 0) {\\n            //if there is a next step go to it\\n            uint256 _feeNextStep = _executeStep(_wallet, _id, _nextIndex);\\n            fee += _feeNextStep;\\n        }\\n    }\\n\\n    function _executeAction(address _wallet, Action memory _action) internal returns (uint256) {\\n        IFeeManager.FeeType _feeType = feeManager.getFeeType(_action.selector);\\n\\n        if (_feeType == IFeeManager.FeeType.PostCallFee) {\\n            address _basisFeeToken = feeManager.getBasisFeeToken(_action.selector, _action.parameter);\\n            uint256 _tokenBalance = IERC20(_basisFeeToken).balanceOf(_wallet);\\n            _execute(_wallet, _action);\\n            return feeManager.calculateFeeForPostCallAction(\\n                _action.selector, _basisFeeToken, IERC20(_basisFeeToken).balanceOf(_wallet) - _tokenBalance\\n            );\\n        } else if (_feeType == IFeeManager.FeeType.FixedFee) {\\n            _execute(_wallet, _action);\\n            return feeManager.getFixedFee(_action.selector);\\n        } else {\\n            _execute(_wallet, _action);\\n            return feeManager.calculateFeeForPreCallAction(_action.selector, _action.parameter);\\n        }\\n    }\\n\\n    function _execute(address _wallet, Action memory _action) internal {\\n        bytes memory data = abi.encodePacked(_action.selector, _action.parameter);\\n        if (_action.actionType == ActionType.EXTERNAL) {\\n            IPluginExecutor(_wallet).executeFromPluginExternal(_action.target, _action.value, data);\\n        } else {\\n            IPluginExecutor(_wallet).executeFromPlugin(data);\\n        }\\n    }\\n\\n    function _checkCondition(address _wallet, Condition memory _condition)\\n        internal\\n        view\\n        returns (uint8 conditionResult, uint16 nextStep)\\n    {\\n        if (_condition.conditionAddress == address(0)) {\\n            nextStep = _condition.result1;\\n            conditionResult = 1;\\n        } else {\\n            conditionResult = ICondition(_condition.conditionAddress).checkCondition(_wallet, _condition.id);\\n            if (conditionResult == 1) {\\n                nextStep = _condition.result1;\\n            } else {\\n                nextStep = _condition.result0;\\n            }\\n        }\\n    }\\n\\n    function _changeActionInCondition(\\n        address _wallet,\\n        address _condition,\\n        uint16 _conditionId,\\n        uint16 _action,\\n        bool _add\\n    ) internal {\\n        bytes memory data = _add\\n            ? abi.encodeCall(ICondition.addAutomationToCondition, (_conditionId, _action))\\n            : abi.encodeCall(ICondition.removeAutomationFromCondition, (_conditionId, _action));\\n\\n        bytes memory result = IPluginExecutor(_wallet).executeFromPluginExternal(_condition, 0, data);\\n        bool _success = abi.decode(result, (bool));\\n        if (!_success) {\\n            revert StrategyBuilderPlugin__ChangeActionInConditionFailed();\\n        }\\n    }\\n\\n    function _changeStrategyInCondition(\\n        address _wallet,\\n        address _condition,\\n        uint16 _conditionId,\\n        uint16 _strategy,\\n        bool _add\\n    ) internal {\\n        bytes memory data = _add\\n            ? abi.encodeCall(ICondition.addStrategyToCondition, (_conditionId, _strategy))\\n            : abi.encodeCall(ICondition.removeStrategyFromCondition, (_conditionId, _strategy));\\n\\n        bytes memory result = IPluginExecutor(_wallet).executeFromPluginExternal(_condition, 0, data);\\n        bool _success = abi.decode(result, (bool));\\n        if (!_success) {\\n            revert StrategyBuilderPlugin__ChangeStrategyInConditionFailed();\\n        }\\n    }\\n\\n    function _payAutomation(address _wallet, address _paymentToken, uint256 _fee, address _beneficary, address _creator)\\n        internal\\n    {\\n        bytes memory _approveData = abi.encodeCall(IERC20.approve, (address(feeManager), _fee));\\n        IPluginExecutor(_wallet).executeFromPluginExternal(\\n            _paymentToken == address(0) ? feeManager.octoInk() : _paymentToken, 0, _approveData\\n        );\\n\\n        bytes memory _handleFeeData =\\n            abi.encodeCall(IFeeManager.handleFee, (_fee, _beneficary, _creator, _paymentToken));\\n        IPluginExecutor(_wallet).executeFromPluginExternal(address(feeManager), 0, _handleFeeData);\\n    }\\n\\n    function _updateCondition(address _wallet, Condition memory _condition, uint16 _actionId) internal {\\n        if (ICondition(_condition.conditionAddress).isUpdateable(_wallet, _condition.id)) {\\n            bytes memory _data = abi.encodeCall(ICondition.updateCondition, (_condition.id));\\n            bytes memory _result =\\n                IPluginExecutor(_wallet).executeFromPluginExternal(_condition.conditionAddress, 0, _data);\\n            bool _success = abi.decode(_result, (bool));\\n            if (!_success) {\\n                revert StrategyBuilderPlugin__UpdateConditionFailed(_condition.conditionAddress, _condition.id);\\n            }\\n        } else {\\n            _changeActionInCondition(_wallet, _condition.conditionAddress, _condition.id, _actionId, false);\\n        }\\n    }\\n\\n    // \\u250f\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2513\\n    // \\u2503    Plugin interface functions    \\u2503\\n    // \\u2517\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u251b\\n\\n    /// @inheritdoc BasePlugin\\n    function onInstall(bytes calldata) external pure override {}\\n\\n    /// @inheritdoc BasePlugin\\n    function onUninstall(bytes calldata) external pure override {}\\n\\n    /// @inheritdoc BasePlugin\\n    function pluginManifest() external pure override returns (PluginManifest memory) {\\n        PluginManifest memory manifest;\\n\\n        // since we are using the modular account, we will specify one depedency\\n        // which will handle the user op validation for ownership\\n        // you can find this depedency specified in the installPlugin call in the tests\\n        manifest.dependencyInterfaceIds = new bytes4[](1);\\n        manifest.dependencyInterfaceIds[0] = type(IPlugin).interfaceId;\\n\\n        manifest.executionFunctions = new bytes4[](5);\\n        manifest.executionFunctions[0] = this.addStrategy.selector;\\n        manifest.executionFunctions[1] = this.executeStrategy.selector;\\n        manifest.executionFunctions[2] = this.activateAutomation.selector;\\n        manifest.executionFunctions[3] = this.deleteStrategy.selector;\\n        manifest.executionFunctions[4] = this.deleteAutomation.selector;\\n\\n        // you can think of ManifestFunction as a reference to a function somewhere,\\n        // we want to say \\\"use this function\\\" for some purpose - in this case,\\n        // we'll be using the user op validation function from the single owner dependency\\n        // and this is specified by the depdendency index\\n        ManifestFunction memory ownerUserOpValidationFunction = ManifestFunction({\\n            functionType: ManifestAssociatedFunctionType.DEPENDENCY,\\n            functionId: 0, // unused since it's a dependency\\n            dependencyIndex: _MANIFEST_DEPENDENCY_INDEX_OWNER_USER_OP_VALIDATION\\n        });\\n\\n        // here we will link together the increment function with the single owner user op validation\\n        // this basically says \\\"use this user op validation function and make sure everythings okay before calling increment\\\"\\n        // this will ensure that only an owner of the account can call increment\\n        manifest.userOpValidationFunctions = new ManifestAssociatedFunction[](5);\\n        manifest.userOpValidationFunctions[0] = ManifestAssociatedFunction({\\n            executionSelector: this.addStrategy.selector,\\n            associatedFunction: ownerUserOpValidationFunction\\n        });\\n\\n        manifest.userOpValidationFunctions[1] = ManifestAssociatedFunction({\\n            executionSelector: this.executeStrategy.selector,\\n            associatedFunction: ownerUserOpValidationFunction\\n        });\\n\\n        manifest.userOpValidationFunctions[2] = ManifestAssociatedFunction({\\n            executionSelector: this.activateAutomation.selector,\\n            associatedFunction: ownerUserOpValidationFunction\\n        });\\n\\n        manifest.userOpValidationFunctions[3] = ManifestAssociatedFunction({\\n            executionSelector: this.deleteStrategy.selector,\\n            associatedFunction: ownerUserOpValidationFunction\\n        });\\n\\n        manifest.userOpValidationFunctions[4] = ManifestAssociatedFunction({\\n            executionSelector: this.deleteAutomation.selector,\\n            associatedFunction: ownerUserOpValidationFunction\\n        });\\n\\n        // finally here we will always deny runtime calls to the increment function as we will only call it through user ops\\n        // this avoids a potential issue where a future plugin may define\\n        // a runtime validation function for it and unauthorized calls may occur due to that\\n        manifest.preRuntimeValidationHooks = new ManifestAssociatedFunction[](5);\\n        manifest.preRuntimeValidationHooks[0] = ManifestAssociatedFunction({\\n            executionSelector: this.addStrategy.selector,\\n            associatedFunction: ManifestFunction({\\n                functionType: ManifestAssociatedFunctionType.PRE_HOOK_ALWAYS_DENY,\\n                functionId: 0,\\n                dependencyIndex: 0\\n            })\\n        });\\n\\n        manifest.preRuntimeValidationHooks[1] = ManifestAssociatedFunction({\\n            executionSelector: this.executeStrategy.selector,\\n            associatedFunction: ManifestFunction({\\n                functionType: ManifestAssociatedFunctionType.PRE_HOOK_ALWAYS_DENY,\\n                functionId: 0,\\n                dependencyIndex: 0\\n            })\\n        });\\n\\n        manifest.preRuntimeValidationHooks[2] = ManifestAssociatedFunction({\\n            executionSelector: this.activateAutomation.selector,\\n            associatedFunction: ManifestFunction({\\n                functionType: ManifestAssociatedFunctionType.PRE_HOOK_ALWAYS_DENY,\\n                functionId: 0,\\n                dependencyIndex: 0\\n            })\\n        });\\n\\n        manifest.preRuntimeValidationHooks[3] = ManifestAssociatedFunction({\\n            executionSelector: this.deleteAutomation.selector,\\n            associatedFunction: ManifestFunction({\\n                functionType: ManifestAssociatedFunctionType.PRE_HOOK_ALWAYS_DENY,\\n                functionId: 0,\\n                dependencyIndex: 0\\n            })\\n        });\\n\\n        manifest.preRuntimeValidationHooks[4] = ManifestAssociatedFunction({\\n            executionSelector: this.deleteStrategy.selector,\\n            associatedFunction: ManifestFunction({\\n                functionType: ManifestAssociatedFunctionType.PRE_HOOK_ALWAYS_DENY,\\n                functionId: 0,\\n                dependencyIndex: 0\\n            })\\n        });\\n\\n        manifest.permitAnyExternalAddress = true;\\n        manifest.canSpendNativeToken = true;\\n\\n        return manifest;\\n    }\\n\\n    /// @inheritdoc BasePlugin\\n    function pluginMetadata() external pure virtual override returns (PluginMetadata memory) {\\n        PluginMetadata memory metadata;\\n        metadata.name = NAME;\\n        metadata.version = VERSION;\\n        metadata.author = AUTHOR;\\n        return metadata;\\n    }\\n\\n    // \\u250f\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2513\\n    // \\u2503    External View Functions       \\u2503\\n    // \\u2517\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u2501\\u251b\\n\\n    function strategy(address _wallet, uint16 _id) external view returns (Strategy memory) {\\n        return strategies[_wallet][_id];\\n    }\\n\\n    function automation(address _wallet, uint16 _id) external view returns (Automation memory) {\\n        return automations[_wallet][_id];\\n    }\\n}\\n\",\"keccak256\":\"0x8a1294a7f2318b2a53b17e93e58bd5d799d078df6b1412d27e4747d6735e44c1\",\"license\":\"MIT\"},\"src/interfaces/ICondition.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ninterface ICondition {\\n    function checkCondition(address wallet, uint16 id) external view returns (uint8);\\n\\n    function isUpdateable(address wallet, uint16 id) external view returns (bool);\\n\\n    function actionValid(address wallet, uint16 id, uint16 action) external view returns (bool);\\n\\n    function strategyValid(address wallet, uint16 id, uint16 strategy) external view returns (bool);\\n\\n    function updateCondition(uint16 id) external returns (bool);\\n\\n    function deleteCondition(uint16 id) external;\\n\\n    function addAutomationToCondition(uint16 id, uint16 action) external returns (bool);\\n\\n    function addStrategyToCondition(uint16 id, uint16 action) external returns (bool);\\n\\n    function removeAutomationFromCondition(uint16 id, uint16 automation) external returns (bool);\\n\\n    function removeStrategyFromCondition(uint16 id, uint16 strategy) external returns (bool);\\n\\n    function conditionActive(address wallet, uint16 id) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x216a79364b1dd4f7f4ef1c1ea82ebec8d112f79e9028b16df209f332f266e762\",\"license\":\"MIT\"},\"src/interfaces/IFeeManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ninterface IFeeManager {\\n    enum FeeType {\\n        FixedFee,\\n        PostCallFee,\\n        PreCallFee\\n    }\\n\\n    struct FeeInfo {\\n        uint256 value; // Fee in basis points (1% = 100 basis points) or fixed amount when feeType is fixed\\n        FeeType feeType;\\n        address calculator;\\n    }\\n\\n    function calculateFeeForPreCallAction(bytes4 functionSelector, bytes calldata parameter)\\n        external\\n        view\\n        returns (uint256);\\n    function calculateFeeForPostCallAction(bytes4 functionSelector, address basisFeeToken, uint256 basisTokenAmount)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function getFixedFee(bytes4 functionSelector) external view returns (uint256);\\n\\n    function calculateFee(address basisToken, uint256 amount) external view returns (uint256);\\n\\n    function prepareForPayment(uint256 feeAmount, address paymentToken) external returns (uint256);\\n\\n    function calculateFeeInPaymentTokens(address paymentToken, uint256 fee) external view returns (uint256);\\n\\n    function octoInk() external view returns (address);\\n    function inkwell() external view returns (address);\\n\\n    function handleFee(uint256 feeAmount, address executor, address creator, address paymentToken)\\n        external\\n        returns (bool);\\n\\n    function tokenDistributor() external view returns (address);\\n    function getFeeType(bytes4 functionSelector) external view returns (FeeType);\\n\\n    function feeSettings(bytes4 functionSelector) external view returns (FeeInfo memory);\\n\\n    function getBasisFeeToken(bytes4 functionSelector, bytes calldata parameter) external view returns (address);\\n}\\n\",\"keccak256\":\"0xa69d9a47f8a851b3caaa8c0ced61f94846907872543e130edeffb86c473b0ff2\",\"license\":\"MIT\"},\"src/interfaces/IStrategyBuilderPlugin.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity ^0.8.19;\\n\\ninterface IStrategyBuilderPlugin {\\n    enum FunctionId {USER_OP_VALIDATION_SESSION_KEY}\\n\\n    enum ActionType {\\n        EXTERNAL,\\n        INTERNAL\\n    }\\n\\n    /* ====== Structs ====== */\\n\\n    struct Action {\\n        bytes4 selector;\\n        bytes parameter;\\n        address target;\\n        uint256 value;\\n        ActionType actionType;\\n    }\\n\\n    struct Condition {\\n        address conditionAddress;\\n        uint16 id;\\n        uint16 result1; // If the condition returns 1 got to index result1. If index result1 is 0 then no next step\\n        uint16 result0; // If the condtions returns 0 go to index result0. If index result0 is 0 then no next step\\n    }\\n\\n    struct StrategyStep {\\n        Condition condition;\\n        Action[] actions;\\n    }\\n\\n    struct Strategy {\\n        address creator;\\n        StrategyStep[] steps;\\n    }\\n\\n    struct Automation {\\n        Condition condition; // If the condition returns 1, the automation can be executed\\n        uint16 strategyId;\\n        address paymentToken;\\n        uint256 maxFeeAmount;\\n    }\\n\\n    /* ====== Events ====== */\\n\\n    event StrategyAdded(uint16 strategyId, address creator, Strategy strategy);\\n    event StrategyExecuted(uint16 strategyId);\\n    event StrategyDeleted(uint16 strategyId);\\n\\n    event AutomationActivated(\\n        uint16 automationId, uint16 strategyId, Condition condition, address paymentToken, uint256 maxFeeAmount\\n    );\\n    event AutomationDeleted(uint16 automationId);\\n    event AutomationExecuted(uint16 automationId, address paymentToken, uint256 feeAmount);\\n\\n    event StrategyStepExecuted(uint16 strategyId, uint16 stepId, Action[] actions);\\n\\n    function addStrategy(uint16 id, address creator, StrategyStep[] calldata steps) external;\\n\\n    // function executeStrategy(uint16 id) external;\\n\\n    // function deleteStrategy(uint16 id) external;\\n\\n    // function activateAutomation(\\n    //     uint16 id,\\n    //     uint16 strategyId,\\n    //     Condition calldata condition,\\n    //     address paymentToken,\\n    //     uint256 maxFeeAmount\\n    // ) external;\\n\\n    // function executeAutomation(uint16 id, address beneficary) external;\\n\\n    // function strategy(uint16 strategyId) external view returns (Strategy memory);\\n\\n    // function automation(uint16 automationId) external view returns (Automation memory);\\n}\\n\",\"keccak256\":\"0x7588756d74500f77cb6135904e4a22ea040cc516729ac4c505b76a9d96412447\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014c5760003560e01c8063582a221c116100c3578063af8734831161007c578063af87348314610358578063bca9388e146103d5578063bfd151c11461018e578063c7763130146103e8578063d0fb0203146103fd578063ffa1ad741461043c57600080fd5b8063582a221c146102555780636d61fe701461034657806388e18ce4146103585780638a91b0e314610346578063a3f4df7e14610379578063a7be85c6146103af57600080fd5b8063182abd6611610115578063182abd66146101c95780631b187a1b146101dc57806320b1bf4c146101ef5780633df796e31461020257806342aa447f1461021557806346d60eb21461023557600080fd5b806220d3731461015157806301ffc9a7146101665780630c7ecd841461018e5780631128186d146101a1578063118a5389146101b4575b600080fd5b61016461015f366004612ce4565b610460565b005b610179610174366004612d25565b6104af565b60405190151581526020015b60405180910390f35b61016461019c366004612db0565b6104e6565b6101646101af366004612e22565b610518565b6101bc610541565b6040516101859190612ec6565b6101646101d7366004612f9f565b61060d565b6101646101ea366004612fea565b610885565b6101646101fd366004612ce4565b610aef565b61016461021036600461305b565b610d91565b6102286102233660046130ef565b611008565b6040516101859190613237565b610248610243366004612db0565b61124f565b60405161018591906132d0565b6103396102633660046130ef565b604080516101008101825260006080820181815260a0830182905260c0830182905260e083018290528252602082018190529181018290526060810191909152506001600160a01b03918216600090815260036020908152604080832061ffff9485168452825291829020825161010081018452815480871660808301908152600160a01b8204871660a0840152600160b01b8204871660c0840152600160c01b909104861660e08301528152600182015494851692810192909252620100009093049093169083015260020154606082015290565b60405161018591906132e3565b610164610354366004613326565b5050565b61036b610366366004613367565b61127a565b604051908152602001610185565b6102486040518060400160405280601781526020017629ba3930ba32b3bc90213ab4b63232b91028363ab3b4b760491b81525081565b6102486040518060400160405280600781526020016633426c6f636b7360c81b81525081565b6101646103e3366004612ce4565b6112a4565b6103f061162b565b6040516101859190613561565b6104247f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610185565b61024860405180604001604052806005815260200164302e302e3160d81b81525081565b3360009081526020818152604080832061ffff851684529091528120600101548291036104a057604051638af6772760e01b815260040160405180910390fd5b6104aa3383611b87565b505050565b60006001600160e01b0319821663f23b1ed760e01b14806104e057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000356001600160e01b031916856040516384b9b37960e01b815260040161050f9291906136bb565b60405180910390fd5b6000356001600160e01b031916836040516384b9b37960e01b815260040161050f9291906136bb565b61056c6040518060800160405280606081526020016060815260200160608152602001606081525090565b6105976040518060800160405280606081526020016060815260200160608152602001606081525090565b604080518082018252601781527629ba3930ba32b3bc90213ab4b63232b91028363ab3b4b760491b602080830191909152908352815180830183526005815264302e302e3160d81b818301528382015281518083018352600781526633426c6f636b7360c81b9181019190915290820152919050565b6001600160a01b03808316600090815260036020908152604080832061ffff8089168552908352818420825161010081018452815480881660808301908152600160a01b8204851660a0840152600160b01b8204851660c0840152600160c01b909104841660e0830152808252600183015493841695820195909552620100009092049095169181019190915260029093015460608401526106b0908590611bd5565b5090508060ff166000036106f65781518051602090910151604051631b228b9560e11b81526001600160a01b03909216600483015261ffff16602482015260440161050f565b6000610706858460200151611b87565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637585b6248386604001516040518363ffffffff1660e01b815260040161076e9291909182526001600160a01b0316602082015260400190565b6020604051808303816000875af115801561078d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b191906136d8565b905083606001518111156107d8576040516310292f4760e31b815260040160405180910390fd5b6001600160a01b038087166000908152602081815260408083208883015161ffff168452909152908190205490860151911690610819908890848985611c9a565b6108288786600001518a611f0b565b604080860151815161ffff8b1681526001600160a01b0390911660208201529081018390527fd0af64bad331b6b509b6a11c9d83eff016ef574285193ff12d9d2669382ae9a8906060015b60405180910390a15050505050505050565b33600090815260036020908152604080832061ffff8916845290915290205485906001600160a01b0316156108cd57604051635eab875960e01b815260040160405180910390fd5b3360009081526020818152604080832061ffff8916845290915281206001015486910361090d57604051638af6772760e01b815260040160405180910390fd5b6109363361091e60208601866136f1565b61092e6040870160208801612ce4565b8a60016120ba565b33600090815260036020908152604080832061ffff8b16845290915290208381610960828261370e565b905050868160010160006101000a81548161ffff021916908361ffff160217905550858160010160026101000a8154816001600160a01b0302191690836001600160a01b0316021790555084816002018190555060016000336001600160a01b03166001600160a01b0316815260200190815260200160002060008861ffff1661ffff1681526020019081526020016000208890806001815401808255809150506001900390600052602060002090601091828204019190066002029091909190916101000a81548161ffff021916908361ffff1602179055506001806000336001600160a01b03166001600160a01b0316815260200190815260200160002060008961ffff1661ffff16815260200190815260200160002080549050610a8791906137dd565b33600090815260026020908152604080832061ffff8d81168552925291829020805461ffff19169390911692909217909155517ff04460bffdd1c30ef8ed57eac0ddc77fe5ac88b3673b99a4c7eb28b82f84ba6a90610873908a908a9088908b908b906137f0565b33600090815260036020908152604080832061ffff8516845290915290205481906001600160a01b0316610b3657604051630f31c74760e41b815260040160405180910390fd5b33600081815260036020908152604080832061ffff80881680865291845282852083516101008101855281546001600160a01b0381811660808401908152600160a01b8304861660a0850152600160b01b8304861660c0850152600160c01b909204851660e0840152908252600180840154808616848a019081526201000090910490921683880152600293840154606084015289895280885286892091518516895290875285882098885291865284872093875292909452918420548554919594921692610c04916137dd565b9050808261ffff1614610cbd576000838281548110610c2557610c25613879565b90600052602060002090601091828204019190066002029054906101000a900461ffff16905080848461ffff1681548110610c6257610c62613879565b600091825260208083206010830401805461ffff9586166002600f90951685026101000a908102908702199091161790553383529081526040808320948416835293905291909120805491841661ffff199092169190911790555b82805480610ccd57610ccd61388f565b60008281526020808220601060001990940193840401805461ffff6002600f8716026101000a02191690559190925585518051910151610d1292339291908a906120ba565b33600090815260036020908152604080832061ffff8a1680855290835281842080546001600160d01b03191681556001810180546001600160b01b031916905560020193909355519182527fe3888c7316b9530980cafcbad5184100046c1b5013f32704b76decca43b3642091015b60405180910390a1505050505050565b3360009081526020818152604080832061ffff88168452909152902060010154849015610dd1576040516340a946f760e01b815260040160405180910390fd5b3360009081526020818152604080832061ffff89168452909152812080546001600160a01b0319166001600160a01b038716178155905b83811015610fd4576000858583818110610e2457610e24613879565b9050602002810190610e3691906138a5565b610e3f90613b00565b6001808501805491820181556000908152602090819020835180516002909402909101805492820151604083015160609093015161ffff908116600160c01b0261ffff60c01b19948216600160b01b029490941663ffffffff60b01b1991909216600160a01b026001600160b01b03199095166001600160a01b0390961695861794909417939093169290921717815591925015610eef5781518051602090910151610eef9133918c60016121ff565b60005b826020015151811015610fc9578160010183602001518281518110610f1957610f19613879565b6020908102919091018101518254600180820185556000948552938390208251600590920201805463ffffffff191660e09290921c919091178155918101519092820190610f679082613c30565b5060408201516002820180546001600160a01b0319166001600160a01b0390921691909117905560608201516003820155608082015160048201805460ff191660018381811115610fba57610fba613160565b02179055505050600101610ef2565b505050600101610e08565b507fa5ff3fa8774fd099ea6604694387034550240c461d86ea896acf6df2395406e5868683604051610d8193929190613cef565b6040805180820190915260008152606060208201526001600160a01b0380841660009081526020818152604080832061ffff871684528252808320815180830183528154909516855260018101805483518186028101860190945280845291948685019491929184015b8282101561124057600084815260208082206040805160c0810182526002870290920180546001600160a01b03811684840190815261ffff600160a01b830481166060870152600160b01b830481166080870152600160c01b90920490911660a08501528352600181018054835181870281018701909452808452939591948681019491929084015b828210156112295760008481526020908190206040805160a0810190915260058502909101805460e01b6001600160e01b0319168252600181018054929391929184019161114890613bae565b80601f016020809104026020016040519081016040528092919081815260200182805461117490613bae565b80156111c15780601f10611196576101008083540402835291602001916111c1565b820191906000526020600020905b8154815290600101906020018083116111a457829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff16600181111561120557611205613160565b600181111561121657611216613160565b81525050815260200190600101906110fb565b505050508152505081526020019060010190611072565b50505091525090949350505050565b60606000356001600160e01b031916866040516384b9b37960e01b815260040161050f9291906136bb565b600080356001600160e01b031916846040516384b9b37960e01b815260040161050f9291906136bb565b3360009081526020818152604080832061ffff851684529091528120600101548291036112e457604051638af6772760e01b815260040160405180910390fd5b33600090815260016020908152604080832061ffff861684529091529020541561132157604051636ea1bb1d60e01b815260040160405180910390fd5b3360009081526020818152604080832061ffff8616845282528083208151808301835281546001600160a01b031681526001820180548451818702810187019095528085529194929385840193909290879084015b8282101561154457600084815260208082206040805160c0810182526002870290920180546001600160a01b03811684840190815261ffff600160a01b830481166060870152600160b01b830481166080870152600160c01b90920490911660a08501528352600181018054835181870281018701909452808452939591948681019491929084015b8282101561152d5760008481526020908190206040805160a0810190915260058502909101805460e01b6001600160e01b0319168252600181018054929391929184019161144c90613bae565b80601f016020809104026020016040519081016040528092919081815260200182805461147890613bae565b80156114c55780601f1061149a576101008083540402835291602001916114c5565b820191906000526020600020905b8154815290600101906020018083116114a857829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff16600181111561150957611509613160565b600181111561151a5761151a613160565b81525050815260200190600101906113ff565b505050508152505081526020019060010190611376565b5050505081525050905060005b8160200151518110156115b45760008260200151828151811061157657611576613879565b60209081029190910101515180519091506001600160a01b0316156115ab576115ab33826000015183602001518860006121ff565b50600101611551565b503360009081526020818152604080832061ffff87168452909152812080546001600160a01b0319168155906115ed6001830182612b26565b505060405161ffff841681527fac8572a7fb13199deb9554eda5255558a461892de33784ff6ca5d2d3f48d1cb29060200160405180910390a1505050565b611633612b4a565b61163b612b4a565b604080516001808252818301909252906020808301908036833750505060208201819052805163f23b1ed760e01b919060009061167a5761167a613879565b6001600160e01b03199290921660209283029190910182015260408051600580825260c0820190925291820160a080368337505050604082018190528051633df796e360e01b91906000906116d1576116d1613879565b6001600160e01b031990921660209283029190910190910152604081015180516220d37360e01b9190600190811061170b5761170b613879565b6001600160e01b03199092166020928302919091019091015260408101518051631b187a1b60e01b9190600290811061174657611746613879565b6001600160e01b03199092166020928302919091019091015260408101518051635e549c4760e11b9190600390811061178157611781613879565b6001600160e01b0319909216602092830291909101909101526040810151805163082c6fd360e21b919060049081106117bc576117bc613879565b6001600160e01b03199290921660209283029190910182015260408051606081018252600281526000928101839052808201929092528051600580825260c0820190925290816020015b61180e612baf565b81526020019060019003908161180657505060e0830190815260408051808201909152633df796e360e01b8152602081018390529051805160009061185557611855613879565b602002602001018190525060405180604001604052806220d37360e01b6001600160e01b0319168152602001828152508260e0015160018151811061189c5761189c613879565b60200260200101819052506040518060400160405280631b187a1b60e01b6001600160e01b0319168152602001828152508260e001516002815181106118e4576118e4613879565b6020026020010181905250604051806040016040528063bca9388e60e01b6001600160e01b0319168152602001828152508260e0015160038151811061192c5761192c613879565b602002602001018190525060405180604001604052806320b1bf4c60e01b6001600160e01b0319168152602001828152508260e0015160048151811061197457611974613879565b602090810291909101015260408051600580825260c0820190925290816020015b61199d612baf565b8152602001906001900390816119955750506101408301908152604080518082018252633df796e360e01b81528151606081018352600481526000602080830182905293820181905292820152915180519091906119fd576119fd613879565b6020908102919091018101919091526040805180820182526220d37360e01b81528151606081018352600481526000818501819052928101929092529182015261014083015180516001908110611a5657611a56613879565b602090810291909101810191909152604080518082018252631b187a1b60e01b81528151606081018352600481526000818501819052928101929092529182015261014083015180516002908110611ab057611ab0613879565b60209081029190910181019190915260408051808201825263082c6fd360e21b81528151606081018352600481526000818501819052928101929092529182015261014083015180516003908110611b0a57611b0a613879565b602090810291909101810191909152604080518082018252635e549c4760e11b8152815160608101909252918201908060048152600060208201819052604090910152905261014083015180516004908110611b6857611b68613879565b60209081029190910101525060016080820181905260a0820152919050565b6000611b9583836000612344565b60405161ffff841681529091507fb7ca38640c56ab10d5195abd118616f384689bd4ed8d70748b67ad7d3d0850ab9060200160405180910390a192915050565b805160009081906001600160a01b0316611bf85750506040810151600190611c93565b82516020840151604051631803ce9160e31b81526001600160a01b03878116600483015261ffff909216602482015291169063c01e748890604401602060405180830381865afa158015611c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c749190613ee8565b91508160ff16600103611c8c57506040820151611c93565b5060608201515b9250929050565b6040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044810184905260009060640160408051601f198184030181529190526020810180516001600160e01b031663095ea7b360e01b17905290506001600160a01b03808716906338997b1190871615611d245786611da6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ffc58aca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da69190613f05565b6000846040518463ffffffff1660e01b8152600401611dc793929190613f22565b6000604051808303816000875af1158015611de6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611e0e9190810190613f52565b50604051602481018590526001600160a01b03808516604483015280841660648301528616608482015260009060a40160408051601f198184030181529181526020820180516001600160e01b031663341cd8c760e01b179052516338997b1160e01b81529091506001600160a01b038816906338997b1190611eba907f0000000000000000000000000000000000000000000000000000000000000000906000908690600401613f22565b6000604051808303816000875af1158015611ed9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611f019190810190613f52565b5050505050505050565b8151602083015160405163412140b560e01b81526001600160a01b03868116600483015261ffff909216602482015291169063412140b590604401602060405180830381865afa158015611f63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f879190613fbf565b156120a857602082015160405161ffff909116602482015260009060440160408051601f198184030181529181526020820180516001600160e01b03166302ab2a0560e11b179052845190516338997b1160e01b81529192506000916001600160a01b038716916338997b1191612005919085908790600401613f22565b6000604051808303816000875af1158015612024573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261204c9190810190613f52565b90506000818060200190518101906120649190613fbf565b9050806120a057845160208601516040516317ffb58560e21b81526001600160a01b03909216600483015261ffff16602482015260440161050f565b505050505050565b6104aa83836000015184602001518460005b6000816121085760405161ffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b031663372dce0760e01b17905261214b565b60405161ffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b0316631e72b93d60e21b1790525b90506000866001600160a01b03166338997b11876000856040518463ffffffff1660e01b815260040161218093929190613f22565b6000604051808303816000875af115801561219f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526121c79190810190613f52565b90506000818060200190518101906121df9190613fbf565b905080611f0157604051632d1d137960e01b815260040160405180910390fd5b60008161224d5760405161ffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b0316639aaf7dd360e01b179052612290565b60405161ffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b031663a95f105d60e01b1790525b90506000866001600160a01b03166338997b11876000856040518463ffffffff1660e01b81526004016122c593929190613f22565b6000604051808303816000875af11580156122e4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261230c9190810190613f52565b90506000818060200190518101906123249190613fbf565b905080611f015760405163126c864560e31b815260040160405180910390fd5b6001600160a01b03831660009081526020818152604080832061ffff80871685529252822060010180548392851690811061238157612381613879565b600091825260208083206040805160c081018252600290940290910180546001600160a01b03811685840190815261ffff600160a01b830481166060880152600160b01b830481166080880152600160c01b90920490911660a0860152845260018101805483518186028101860190945280845294959194868501949192909184015b828210156125325760008481526020908190206040805160a0810190915260058502909101805460e01b6001600160e01b0319168252600181018054929391929184019161245190613bae565b80601f016020809104026020016040519081016040528092919081815260200182805461247d90613bae565b80156124ca5780601f1061249f576101008083540402835291602001916124ca565b820191906000526020600020905b8154815290600101906020018083116124ad57829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff16600181111561250e5761250e613160565b600181111561251f5761251f613160565b8152505081526020019060010190612404565b5050505081525050905060008061254d878460000151611bd5565b915091508160ff166001036125ed5760005b8360200151518110156125ac576000612595898660200151848151811061258857612588613879565b602002602001015161261e565b90506125a18187613fe1565b95505060010161255f565b507f5a244e599e1092a5337164460f5d61b5a79cee9438042d79857cd80114fac67f868685602001516040516125e493929190613ff4565b60405180910390a15b61ffff811615612614576000612604888884612344565b90506126108186613fe1565b9450505b5050509392505050565b80516040516339477d5960e01b81526001600160e01b0319909116600482015260009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906339477d5990602401602060405180830381865afa158015612694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126b8919061401b565b905060018160028111156126ce576126ce613160565b0361290d5782516020840151604051632e34da4560e21b81526000926001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169263b8d369149261272992919060040161403c565b602060405180830381865afa158015612746573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061276a9190613f05565b6040516370a0823160e01b81526001600160a01b0387811660048301529192506000918316906370a0823190602401602060405180830381865afa1580156127b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127da91906136d8565b90506127e68686612a29565b84516040516370a0823160e01b81526001600160a01b0388811660048301527f000000000000000000000000000000000000000000000000000000000000000081169263dbab8200929091869186918316906370a0823190602401602060405180830381865afa15801561285e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061288291906136d8565b61288c91906137dd565b6040516001600160e01b031960e086901b811682529390931660048401526001600160a01b0390911660248301526044820152606401602060405180830381865afa1580156128df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061290391906136d8565b93505050506104e0565b600081600281111561292157612921613160565b036129ce576129308484612a29565b825160405163c2dc21bf60e01b81526001600160e01b031990911660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c2dc21bf906024015b602060405180830381865afa1580156129a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129c691906136d8565b9150506104e0565b6129d88484612a29565b82516020840151604051631531cc3d60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169263a98e61e8926129859260040161403c565b600081600001518260200151604051602001612a46929190614066565b60408051601f198184030181529190529050600082608001516001811115612a7057612a70613160565b03612afa57826001600160a01b03166338997b1183604001518460600151846040518463ffffffff1660e01b8152600401612aad93929190613f22565b6000604051808303816000875af1158015612acc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612af49190810190613f52565b50505050565b6040516394ed11e760e01b81526001600160a01b038416906394ed11e790612aad9084906004016132d0565b5080546000825560020290600052602060002090810190612b479190612beb565b50565b604051806101800160405280606081526020016060815260200160608152602001606081526020016000151581526020016000151581526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b604080518082019091526000815260208101612be66040805160608101909152806000815260006020820181905260409091015290565b905290565b80821115612c195780546001600160d01b03191681556000612c106001830182612c1d565b50600201612beb565b5090565b5080546000825560050290600052602060002090810190612b4791905b80821115612c1957805463ffffffff191681556000612c5c6001830182612c8a565b506002810180546001600160a01b03191690556000600382015560048101805460ff19169055600501612c3a565b508054612c9690613bae565b6000825580601f10612ca6575050565b601f016020900490600052602060002090810190612b4791905b80821115612c195760008155600101612cc0565b61ffff81168114612b4757600080fd5b600060208284031215612cf657600080fd5b8135612d0181612cd4565b9392505050565b80356001600160e01b031981168114612d2057600080fd5b919050565b600060208284031215612d3757600080fd5b612d0182612d08565b60ff81168114612b4757600080fd5b6001600160a01b0381168114612b4757600080fd5b8035612d2081612d4f565b60008083601f840112612d8157600080fd5b5081356001600160401b03811115612d9857600080fd5b602083019150836020828501011115611c9357600080fd5b600080600080600060808688031215612dc857600080fd5b8535612dd381612d40565b94506020860135612de381612d4f565b93506040860135925060608601356001600160401b03811115612e0557600080fd5b612e1188828901612d6f565b969995985093965092949392505050565b600080600060408486031215612e3757600080fd5b8335612e4281612d40565b925060208401356001600160401b03811115612e5d57600080fd5b612e6986828701612d6f565b9497909650939450505050565b60005b83811015612e91578181015183820152602001612e79565b50506000910152565b60008151808452612eb2816020860160208601612e76565b601f01601f19169290920160200192915050565b600060208083528351608082850152612ee260a0850182612e9a565b905081850151601f19604081878503016040880152612f018484612e9a565b93506040880151925081878503016060880152612f1e8484612e9a565b6060890151888203840160808a015280518083529195508601935085850190600581901b8601870160005b82811015612f905787820386018452865180516001600160e01b0319168352890151898301869052612f7d86840182612e9a565b978a0197948a0194925050600101612f49565b509a9950505050505050505050565b600080600060608486031215612fb457600080fd5b8335612fbf81612cd4565b92506020840135612fcf81612d4f565b91506040840135612fdf81612d4f565b809150509250925092565b600080600080600085870361010081121561300457600080fd5b863561300f81612cd4565b9550602087013561301f81612cd4565b9450604087013561302f81612d4f565b9350606087013592506080607f198201121561304a57600080fd5b506080860190509295509295909350565b6000806000806060858703121561307157600080fd5b843561307c81612cd4565b9350602085013561308c81612d4f565b925060408501356001600160401b03808211156130a857600080fd5b818701915087601f8301126130bc57600080fd5b8135818111156130cb57600080fd5b8860208260051b85010111156130e057600080fd5b95989497505060200194505050565b6000806040838503121561310257600080fd5b823561310d81612d4f565b9150602083013561311d81612cd4565b809150509250929050565b80516001600160a01b0316825260208082015161ffff9081169184019190915260408083015182169084015260609182015116910152565b634e487b7160e01b600052602160045260246000fd5b6002811061318657613186613160565b9052565b600082825180855260208086019550808260051b84010181860160005b8481101561322a57858303601f19018952815180516001600160e01b03191684528481015160a0868601819052906131e182870182612e9a565b6040848101516001600160a01b0316908801526060808501519088015260809384015193909250905061321681870184613176565b5099850199935050908301906001016131a7565b5090979650505050505050565b602080825282516001600160a01b03168282015282810151604080840152805160608401819052600092916080919083019082860190600581901b87018401865b828110156132c357607f19898303018452845160a0613298848351613128565b88820151915080888501526132af8185018361318a565b968901969589019593505050600101613278565b5098975050505050505050565b602081526000612d016020830184612e9a565b600060e0820190506132f6828451613128565b602083015161ffff16608083015260408301516001600160a01b031660a083015260609092015160c09091015290565b6000806020838503121561333957600080fd5b82356001600160401b0381111561334f57600080fd5b61335b85828601612d6f565b90969095509350505050565b60008060006060848603121561337c57600080fd5b833561338781612d40565b925060208401356001600160401b038111156133a257600080fd5b840161016081870312156133b557600080fd5b929592945050506040919091013590565b60008151808452602080850194506020840160005b838110156134015781516001600160e01b031916875295820195908201906001016133db565b509495945050505050565b600082825180855260208086019550808260051b84010181860160005b8481101561322a57858303601f19018952815180516001600160a01b031684528481015115158585015260409081015160609185018290529061346e818601836133c6565b9a86019a9450505090830190600101613429565b80516005811061349457613494613160565b825260208181015160ff1690830152604090810151910152565b60008151808452602080850194506020840160005b8381101561340157815180516001600160e01b03191688528301516134ea84890182613482565b5060809690960195908201906001016134c3565b60008151808452602080850194506020840160005b8381101561340157815180516001600160e01b03191688528381015161353b858a0182613482565b506040015161354d6080890182613482565b5060e0969096019590820190600101613513565b60208152600082516101808060208501526135806101a08501836133c6565b91506020850151601f198086850301604087015261359e84836133c6565b935060408701519150808685030160608701526135bb84836133c6565b935060608701519150808685030160808701526135d884836133c6565b9350608087015191506135ef60a087018315159052565b60a087015180151560c0880152915060c08701519150808685030160e0870152613619848361340c565b935060e0870151915061010081878603018188015261363885846134ae565b94508088015192505061012081878603018188015261365785846134ae565b94508088015192505061014081878603018188015261367685846134ae565b94508088015192505061016081878603018188015261369585846134ae565b9088015187820390920184880152935090506136b183826134fe565b9695505050505050565b6001600160e01b031992909216825260ff16602082015260400190565b6000602082840312156136ea57600080fd5b5051919050565b60006020828403121561370357600080fd5b8135612d0181612d4f565b813561371981612d4f565b81546001600160a01b031981166001600160a01b03929092169182178355602084013561374581612cd4565b61ffff60a01b60a09190911b166001600160b01b03198216831781178455604085013561377181612cd4565b61ffff60b01b60b09190911b166001600160c01b031983168417821781178555606086013561379f81612cd4565b6001600160d01b031993909316909317179190911760c09190911b61ffff60c01b1617905550565b634e487b7160e01b600052601160045260246000fd5b818103818111156104e0576104e06137c7565b61ffff86811682528581166020830152610100820190853561381181612d4f565b6001600160a01b03908116604085015260208701359061383082612cd4565b908216606085015260408701359061384782612cd4565b908216608085015260608701359061385e82612cd4565b911660a08401529390931660c082015260e001529392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60008235609e198336030181126138bb57600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156138fd576138fd6138c5565b60405290565b604080519081016001600160401b03811182821017156138fd576138fd6138c5565b604051608081016001600160401b03811182821017156138fd576138fd6138c5565b604051601f8201601f191681016001600160401b038111828210171561396f5761396f6138c5565b604052919050565b60006001600160401b03821115613990576139906138c5565b50601f01601f191660200190565b803560028110612d2057600080fd5b600082601f8301126139be57600080fd5b813560206001600160401b03808311156139da576139da6138c5565b8260051b6139e9838201613947565b9384528581018301938381019088861115613a0357600080fd5b84880192505b85831015613af457823584811115613a215760008081fd5b880160a0818b03601f1901811315613a395760008081fd5b613a416138db565b613a4c888401612d08565b815260408084013588811115613a625760008081fd5b8401603f81018e13613a745760008081fd5b89810135613a89613a8482613977565b613947565b8181528f84838501011115613a9e5760008081fd5b818484018d83013760008c8383010152808c8601525050506060613ac3818601612d64565b8284015260809150818501358184015250613adf83850161399e565b90820152845250509184019190840190613a09565b98975050505050505050565b600081360360a0811215613b1357600080fd5b613b1b613903565b6080821215613b2957600080fd5b613b31613925565b91508335613b3e81612d4f565b82526020840135613b4e81612cd4565b60208301526040840135613b6181612cd4565b60408301526060840135613b7481612cd4565b60608301529081526080830135906001600160401b03821115613b9657600080fd5b613ba2368386016139ad565b60208201529392505050565b600181811c90821680613bc257607f821691505b602082108103613be257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104aa576000816000526020600020601f850160051c81016020861015613c115750805b601f850160051c820191505b818110156120a057828155600101613c1d565b81516001600160401b03811115613c4957613c496138c5565b613c5d81613c578454613bae565b84613be8565b602080601f831160018114613c925760008415613c7a5750858301515b600019600386901b1c1916600185901b1785556120a0565b600085815260208120601f198616915b82811015613cc157888601518255948401946001909101908401613ca2565b5085821015613cdf5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61ffff8416815260018060a01b03831660208201526060604082015260018060a01b03825416606082015260406080820152600060a08201600184015480825260c08401915060c08160051b85010160018601600052602060002060005b83811015613eda5760bf19878403018552815460018060a01b038116845261ffff8160a01c16602085015261ffff8160b01c16604085015261ffff8160c01c1660608501525060a0608084015260a08301600183015480825260c08501915060c08160051b86010160018501600052602060002060005b83811015613ebe5787830360bf19018552815460e01b6001600160e01b031916835260a060208401526001820154600090613dfe81613bae565b8060a08701526001821660008114613e1d5760018114613e3957613e70565b60ff19831660c088015260c082151560051b8801019350613e70565b60018601600052602060002060005b83811015613e6757815489820160c00152600190910190602001613e48565b880160c0019450505b50505060028301546001600160a01b0316604085015260038301546060850152600483015460ff16613ea56080860182613176565b5060209590950194925060059190910190600101613dc4565b5050602097909701969450505060029190910190600101613d4d565b509098975050505050505050565b600060208284031215613efa57600080fd5b8151612d0181612d40565b600060208284031215613f1757600080fd5b8151612d0181612d4f565b60018060a01b0384168152826020820152606060408201526000613f496060830184612e9a565b95945050505050565b600060208284031215613f6457600080fd5b81516001600160401b03811115613f7a57600080fd5b8201601f81018413613f8b57600080fd5b8051613f99613a8482613977565b818152856020838501011115613fae57600080fd5b613f49826020830160208601612e76565b600060208284031215613fd157600080fd5b81518015158114612d0157600080fd5b808201808211156104e0576104e06137c7565b600061ffff808616835280851660208401525060606040830152613f49606083018461318a565b60006020828403121561402d57600080fd5b815160038110612d0157600080fd5b63ffffffff60e01b8316815260406020820152600061405e6040830184612e9a565b949350505050565b6001600160e01b0319831681528151600090614089816004850160208701612e76565b91909101600401939250505056fea2646970667358221220227e0749969713c960ca7357f7303259304638e053a782abdbe88611be46a35664736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onInstall(bytes)": {
        "details": "Called by the modular account during `installPlugin`.",
        "params": {
          "data": "Optional bytes array to be decoded and used by the plugin to setup initial plugin data for the modular account."
        }
      },
      "onUninstall(bytes)": {
        "details": "Called by the modular account during `uninstallPlugin`.",
        "params": {
          "data": "Optional bytes array to be decoded and used by the plugin to clear plugin data for the modular account."
        }
      },
      "pluginManifest()": {
        "details": "This manifest MUST stay constant over time.",
        "returns": {
          "_0": "A manifest describing the contents and intended configuration of the plugin."
        }
      },
      "pluginMetadata()": {
        "details": "This metadata MUST stay constant over time.",
        "returns": {
          "_0": "A metadata struct describing the plugin."
        }
      },
      "postExecutionHook(uint8,bytes)": {
        "details": "To indicate the entire call should revert, the function MUST revert.",
        "params": {
          "functionId": "An identifier that routes the call to different internal implementations, should there be more than one.",
          "preExecHookData": "The context returned by its associated pre execution hook."
        }
      },
      "preExecutionHook(uint8,address,uint256,bytes)": {
        "details": "To indicate the entire call should revert, the function MUST revert.",
        "params": {
          "data": "The calldata sent.",
          "functionId": "An identifier that routes the call to different internal implementations, should there be more than one.",
          "sender": "The caller address.",
          "value": "The call value."
        },
        "returns": {
          "_0": "Context to pass to a post execution hook, if present. An empty bytes array MAY be returned."
        }
      },
      "preRuntimeValidationHook(uint8,address,uint256,bytes)": {
        "details": "To indicate the entire call should revert, the function MUST revert.",
        "params": {
          "data": "The calldata sent.",
          "functionId": "An identifier that routes the call to different internal implementations, should there be more than one.",
          "sender": "The caller address.",
          "value": "The call value."
        }
      },
      "preUserOpValidationHook(uint8,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32)": {
        "details": "Pre user operation validation hooks MUST NOT return an authorizer value other than 0 or 1.",
        "params": {
          "functionId": "An identifier that routes the call to different internal implementations, should there be more than one.",
          "userOp": "The user operation.",
          "userOpHash": "The user operation hash."
        },
        "returns": {
          "_0": "Packed validation data for validAfter (6 bytes), validUntil (6 bytes), and authorizer (20 bytes)."
        }
      },
      "runtimeValidationFunction(uint8,address,uint256,bytes)": {
        "details": "To indicate the entire call should revert, the function MUST revert.",
        "params": {
          "data": "The calldata sent.",
          "functionId": "An identifier that routes the call to different internal implementations, should there be more than one.",
          "sender": "The caller address.",
          "value": "The call value."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas. Supporting the IPlugin interface is a requirement for plugin installation. This is also used by the modular account to prevent standard execution functions `execute`, `executeBatch`, and `executeFromPluginExternal` from making calls to plugins.",
        "params": {
          "interfaceId": "The interface ID to check for support."
        },
        "returns": {
          "_0": "True if the contract supports `interfaceId`."
        }
      },
      "userOpValidationFunction(uint8,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32)": {
        "params": {
          "functionId": "An identifier that routes the call to different internal implementations, should there be more than one.",
          "userOp": "The user operation.",
          "userOpHash": "The user operation hash."
        },
        "returns": {
          "_0": "Packed validation data for validAfter (6 bytes), validUntil (6 bytes), and authorizer (20 bytes)."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "onInstall(bytes)": {
        "notice": "Initialize plugin data for the modular account."
      },
      "onUninstall(bytes)": {
        "notice": "Clear plugin data for the modular account."
      },
      "pluginManifest()": {
        "notice": "Describe the contents and intended configuration of the plugin."
      },
      "pluginMetadata()": {
        "notice": "Describe the metadata of the plugin."
      },
      "postExecutionHook(uint8,bytes)": {
        "notice": "Run the post execution hook specified by the `functionId`."
      },
      "preExecutionHook(uint8,address,uint256,bytes)": {
        "notice": "Run the pre execution hook specified by the `functionId`."
      },
      "preRuntimeValidationHook(uint8,address,uint256,bytes)": {
        "notice": "Run the pre runtime validation hook specified by the `functionId`."
      },
      "preUserOpValidationHook(uint8,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32)": {
        "notice": "Run the pre user operation validation hook specified by the `functionId`."
      },
      "runtimeValidationFunction(uint8,address,uint256,bytes)": {
        "notice": "Run the runtime validationFunction specified by the `functionId`."
      },
      "userOpValidationFunction(uint8,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32)": {
        "notice": "Run the user operation validationFunction specified by the `functionId`."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3287,
        "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
        "label": "strategies",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_uint16,t_struct(Strategy)9263_storage))"
      },
      {
        "astId": 3294,
        "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
        "label": "strategiesUsed",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint16,t_array(t_uint16)dyn_storage))"
      },
      {
        "astId": 3300,
        "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
        "label": "automationsToIndex",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_uint16,t_uint16))"
      },
      {
        "astId": 3307,
        "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
        "label": "automations",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_uint16,t_struct(Automation)9273_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Action)9239_storage)dyn_storage": {
        "base": "t_struct(Action)9239_storage",
        "encoding": "dynamic_array",
        "label": "struct IStrategyBuilderPlugin.Action[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(StrategyStep)9256_storage)dyn_storage": {
        "base": "t_struct(StrategyStep)9256_storage",
        "encoding": "dynamic_array",
        "label": "struct IStrategyBuilderPlugin.StrategyStep[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint16)dyn_storage": {
        "base": "t_uint16",
        "encoding": "dynamic_array",
        "label": "uint16[]",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_enum(ActionType)9227": {
        "encoding": "inplace",
        "label": "enum IStrategyBuilderPlugin.ActionType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_uint16,t_array(t_uint16)dyn_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint16 => uint16[]))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint16,t_array(t_uint16)dyn_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint16,t_struct(Automation)9273_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint16 => struct IStrategyBuilderPlugin.Automation))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint16,t_struct(Automation)9273_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint16,t_struct(Strategy)9263_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint16 => struct IStrategyBuilderPlugin.Strategy))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint16,t_struct(Strategy)9263_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint16,t_uint16))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint16 => uint16))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint16,t_uint16)"
      },
      "t_mapping(t_uint16,t_array(t_uint16)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => uint16[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint16)dyn_storage"
      },
      "t_mapping(t_uint16,t_struct(Automation)9273_storage)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => struct IStrategyBuilderPlugin.Automation)",
        "numberOfBytes": "32",
        "value": "t_struct(Automation)9273_storage"
      },
      "t_mapping(t_uint16,t_struct(Strategy)9263_storage)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => struct IStrategyBuilderPlugin.Strategy)",
        "numberOfBytes": "32",
        "value": "t_struct(Strategy)9263_storage"
      },
      "t_mapping(t_uint16,t_uint16)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => uint16)",
        "numberOfBytes": "32",
        "value": "t_uint16"
      },
      "t_struct(Action)9239_storage": {
        "encoding": "inplace",
        "label": "struct IStrategyBuilderPlugin.Action",
        "members": [
          {
            "astId": 9229,
            "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
            "label": "selector",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes4"
          },
          {
            "astId": 9231,
            "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
            "label": "parameter",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes_storage"
          },
          {
            "astId": 9233,
            "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
            "label": "target",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 9235,
            "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
            "label": "value",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 9238,
            "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
            "label": "actionType",
            "offset": 0,
            "slot": "4",
            "type": "t_enum(ActionType)9227"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Automation)9273_storage": {
        "encoding": "inplace",
        "label": "struct IStrategyBuilderPlugin.Automation",
        "members": [
          {
            "astId": 9266,
            "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
            "label": "condition",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Condition)9248_storage"
          },
          {
            "astId": 9268,
            "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
            "label": "strategyId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint16"
          },
          {
            "astId": 9270,
            "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
            "label": "paymentToken",
            "offset": 2,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 9272,
            "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
            "label": "maxFeeAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Condition)9248_storage": {
        "encoding": "inplace",
        "label": "struct IStrategyBuilderPlugin.Condition",
        "members": [
          {
            "astId": 9241,
            "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
            "label": "conditionAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 9243,
            "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
            "label": "id",
            "offset": 20,
            "slot": "0",
            "type": "t_uint16"
          },
          {
            "astId": 9245,
            "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
            "label": "result1",
            "offset": 22,
            "slot": "0",
            "type": "t_uint16"
          },
          {
            "astId": 9247,
            "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
            "label": "result0",
            "offset": 24,
            "slot": "0",
            "type": "t_uint16"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Strategy)9263_storage": {
        "encoding": "inplace",
        "label": "struct IStrategyBuilderPlugin.Strategy",
        "members": [
          {
            "astId": 9258,
            "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 9262,
            "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
            "label": "steps",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_struct(StrategyStep)9256_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(StrategyStep)9256_storage": {
        "encoding": "inplace",
        "label": "struct IStrategyBuilderPlugin.StrategyStep",
        "members": [
          {
            "astId": 9251,
            "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
            "label": "condition",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Condition)9248_storage"
          },
          {
            "astId": 9255,
            "contract": "src/StrategyBuilderPlugin.sol:StrategyBuilderPlugin",
            "label": "actions",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_struct(Action)9239_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}