{
  "address": "0x68E26A3B3A1695f39D07a23104fc59127f0aa31f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_maxFeeLimits",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_minFeesInUSD",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FeePercentageExceedLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidArrayLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTokenWithPriceOfZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoOracleExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddressNotValid",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "enum IFeeController.FeeType",
          "name": "feeType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feePercentage",
          "type": "uint256"
        }
      ],
      "name": "FeeConfigSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenGetter",
          "type": "address"
        }
      ],
      "name": "GlobalTokenGetterSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IFeeController.FeeType",
          "name": "feeType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minFeeUSD",
          "type": "uint256"
        }
      ],
      "name": "MinFeeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenGetter",
          "type": "address"
        }
      ],
      "name": "TokenGetterSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PERCENTAGE_DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        },
        {
          "internalType": "uint256",
          "name": "_volume",
          "type": "uint256"
        }
      ],
      "name": "calculateFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "feeInUSD",
          "type": "uint256"
        }
      ],
      "name": "calculateTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        }
      ],
      "name": "functionFeeConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum IFeeController.FeeType",
              "name": "feeType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "feePercentage",
              "type": "uint256"
            }
          ],
          "internalType": "struct IFeeController.FeeConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        },
        {
          "internalType": "bytes",
          "name": "_params",
          "type": "bytes"
        }
      ],
      "name": "getTokenForAction",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "hasOracle",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IFeeController.FeeType",
          "name": "_type",
          "type": "uint8"
        }
      ],
      "name": "maxFeeLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IFeeController.FeeType",
          "name": "_type",
          "type": "uint8"
        }
      ],
      "name": "minFeeInUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        },
        {
          "internalType": "enum IFeeController.FeeType",
          "name": "_feeType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_feePercentage",
          "type": "uint256"
        }
      ],
      "name": "setFunctionFeeConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        },
        {
          "internalType": "address",
          "name": "_tokenGetter",
          "type": "address"
        }
      ],
      "name": "setGlobalTokenGetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        },
        {
          "internalType": "address",
          "name": "_tokenGetter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "setTokenGetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        }
      ],
      "name": "tokenGetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf2f57ea5a19026719d2e59c4d7ac3baf3f6e74831cbe0085a9eb29ff1f53f771",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0xd4Fa4ee93D7D27c1c4Be36bfBa67183dD4320123",
    "contractAddress": null,
    "transactionIndex": 2,
    "gasUsed": "1149484",
    "logsBloom": "0x00000080000000000000000000000000000000000000000000800000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000001000000000000000000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000000000000000000000001000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200020000000000000000000040000000000000080000000000000000010000000000000",
    "blockHash": "0xdaf5a59dce704f0f4c45afd8498f4a2cd6746dae1891d728c69d901316501bb8",
    "transactionHash": "0xf2f57ea5a19026719d2e59c4d7ac3baf3f6e74831cbe0085a9eb29ff1f53f771",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 134197476,
        "transactionHash": "0xf2f57ea5a19026719d2e59c4d7ac3baf3f6e74831cbe0085a9eb29ff1f53f771",
        "address": "0x68E26A3B3A1695f39D07a23104fc59127f0aa31f",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004e59b44847b379578588920ca78fbf26c0b4956c"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xdaf5a59dce704f0f4c45afd8498f4a2cd6746dae1891d728c69d901316501bb8"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 134197476,
        "transactionHash": "0xf2f57ea5a19026719d2e59c4d7ac3baf3f6e74831cbe0085a9eb29ff1f53f771",
        "address": "0x68E26A3B3A1695f39D07a23104fc59127f0aa31f",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000004e59b44847b379578588920ca78fbf26c0b4956c",
          "0x000000000000000000000000d4fa4ee93d7d27c1c4be36bfba67183dd4320123"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xdaf5a59dce704f0f4c45afd8498f4a2cd6746dae1891d728c69d901316501bb8"
      }
    ],
    "blockNumber": 134197476,
    "cumulativeGasUsed": "1215645",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xF050d0675b7761480aE0E05f2427aD137e2B027e",
    [
      500,
      1000,
      200
    ],
    [
      "1000000000000000000",
      "2000000000000000000",
      "500000000000000000"
    ],
    "0xd4Fa4ee93D7D27c1c4Be36bfBa67183dD4320123"
  ],
  "numDeployments": 2,
  "solcInputHash": "4551690f4f7604e58350f88719902af8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_maxFeeLimits\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_minFeesInUSD\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FeePercentageExceedLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenWithPriceOfZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOracleExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressNotValid\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"enum IFeeController.FeeType\",\"name\":\"feeType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feePercentage\",\"type\":\"uint256\"}],\"name\":\"FeeConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenGetter\",\"type\":\"address\"}],\"name\":\"GlobalTokenGetterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IFeeController.FeeType\",\"name\":\"feeType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minFeeUSD\",\"type\":\"uint256\"}],\"name\":\"MinFeeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenGetter\",\"type\":\"address\"}],\"name\":\"TokenGetterSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PERCENTAGE_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"_volume\",\"type\":\"uint256\"}],\"name\":\"calculateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeInUSD\",\"type\":\"uint256\"}],\"name\":\"calculateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"functionFeeConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"enum IFeeController.FeeType\",\"name\":\"feeType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"feePercentage\",\"type\":\"uint256\"}],\"internalType\":\"struct IFeeController.FeeConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"getTokenForAction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"hasOracle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IFeeController.FeeType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"maxFeeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IFeeController.FeeType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"minFeeInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"},{\"internalType\":\"enum IFeeController.FeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_feePercentage\",\"type\":\"uint256\"}],\"name\":\"setFunctionFeeConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"_tokenGetter\",\"type\":\"address\"}],\"name\":\"setGlobalTokenGetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"_tokenGetter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"setTokenGetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"tokenGetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/FeeController.sol\":\"FeeController\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"src/FeeController.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity ^0.8.24;\\n\\nimport {IFeeController} from \\\"./interfaces/IFeeController.sol\\\";\\nimport {ITokenGetter} from \\\"./interfaces/ITokenGetter.sol\\\";\\nimport {IPriceOracle} from \\\"./interfaces/IPriceOracle.sol\\\";\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract FeeController is Ownable, IFeeController {\\n    uint256 public constant PERCENTAGE_DIVISOR = 10000;\\n\\n    IPriceOracle private oracle;\\n\\n    // Mapping: function selector => FeeConfig\\n    mapping(bytes4 => FeeConfig) private functionFeeConfigs;\\n    // Mapping: target contract => function selector => token getter contract (specific)\\n    mapping(address => mapping(bytes4 => address)) private tokenGetters;\\n    // Mapping: function selector => token getter contract (global fallback)\\n    mapping(bytes4 => address) private globalTokenGetters;\\n    // Mapping: FeeType => Maximum allowed fee percentage\\n    mapping(FeeType => uint256) private maxFeeLimits;\\n    // Mapping: FeeType => Minimum fee in USD (18 decimals)\\n    mapping(FeeType => uint256) private minFeesInUSD;\\n\\n    constructor(address _oracle, uint256[] memory _maxFeeLimits, uint256[] memory _minFeesInUSD, address _owner) {\\n        if (_oracle == address(0)) {\\n            revert ZeroAddressNotValid();\\n        }\\n\\n        if (_maxFeeLimits.length != 3 || _minFeesInUSD.length != 3) {\\n            revert InvalidArrayLength();\\n        }\\n\\n        _transferOwnership(_owner);\\n\\n        oracle = IPriceOracle(_oracle);\\n\\n        // Default max fees (basis points)\\n        maxFeeLimits[FeeType.Deposit] = _maxFeeLimits[0];\\n        maxFeeLimits[FeeType.Withdraw] = _maxFeeLimits[1];\\n        maxFeeLimits[FeeType.Reward] = _maxFeeLimits[2];\\n\\n        // Default min fees in USD (18 decimals, e.g., 1e18 = $1)\\n        minFeesInUSD[FeeType.Deposit] = _minFeesInUSD[0]; // $1\\n        minFeesInUSD[FeeType.Withdraw] = _minFeesInUSD[1]; // $2\\n        minFeesInUSD[FeeType.Reward] = _minFeesInUSD[2]; // $0.50\\n    }\\n\\n    function setFunctionFeeConfig(bytes4 _selector, FeeType _feeType, uint256 _feePercentage) external {\\n        if (_feePercentage > maxFeeLimits[_feeType]) {\\n            revert FeePercentageExceedLimit();\\n        }\\n\\n        functionFeeConfigs[_selector] = FeeConfig(_feeType, _feePercentage);\\n\\n        emit FeeConfigSet(_selector, _feeType, _feePercentage);\\n    }\\n\\n    function setTokenGetter(bytes4 _selector, address _tokenGetter, address _target) external {\\n        if (_target == address(0) || _tokenGetter == address(0)) {\\n            revert ZeroAddressNotValid();\\n        }\\n\\n        tokenGetters[_target][_selector] = _tokenGetter;\\n        emit TokenGetterSet(_target, _selector, _tokenGetter);\\n    }\\n\\n    function setGlobalTokenGetter(bytes4 _selector, address _tokenGetter) external {\\n        if (_tokenGetter == address(0)) {\\n            revert ZeroAddressNotValid();\\n        }\\n\\n        globalTokenGetters[_selector] = _tokenGetter;\\n        emit GlobalTokenGetterSet(_selector, _tokenGetter);\\n    }\\n\\n    function calculateFee(address _token, bytes4 _selector, uint256 _volume) external view returns (uint256) {\\n        bytes32 _oracleID = oracle.oracleID(_token);\\n        FeeConfig memory _config = functionFeeConfigs[_selector];\\n\\n        uint256 _minFeeInUSD = minFeesInUSD[_config.feeType];\\n\\n        if (_oracleID == bytes32(0) || _config.feePercentage == 0) {\\n            return _minFeeInUSD;\\n        }\\n\\n        uint256 _tokenPrice = oracle.getTokenPrice(_token);\\n\\n        uint256 _feeAmount = _volume * _config.feePercentage / PERCENTAGE_DIVISOR;\\n        uint256 _feeInUSD = _feeAmount * _tokenPrice / 10 ** 18;\\n\\n        return _feeInUSD < _minFeeInUSD ? _minFeeInUSD : _feeInUSD;\\n    }\\n\\n    function calculateTokenAmount(address token, uint256 feeInUSD) external view returns (uint256) {\\n        bytes32 oracleID = oracle.oracleID(token);\\n\\n        if (oracleID == bytes32(0)) {\\n            revert NoOracleExist();\\n        }\\n\\n        uint256 tokenPrice = oracle.getTokenPrice(token);\\n\\n        if (tokenPrice == 0) {\\n            revert InvalidTokenWithPriceOfZero();\\n        }\\n\\n        return feeInUSD * 10 ** 18 / tokenPrice;\\n    }\\n\\n    function getTokenForAction(address _target, bytes4 _selector, bytes memory _params)\\n        external\\n        view\\n        returns (address, bool)\\n    {\\n        address _tokenGetter = tokenGetter(_target, _selector);\\n\\n        if (_tokenGetter == address(0)) {\\n            return (address(0), false);\\n        }\\n\\n        address _token = ITokenGetter(_tokenGetter).getTokenForSelector(_selector, _params);\\n\\n        return (_token, true);\\n    }\\n\\n    function tokenGetter(address _target, bytes4 _selector) public view returns (address) {\\n        address _tokenGetter = tokenGetters[_target][_selector];\\n\\n        if (_tokenGetter == address(0)) {\\n            _tokenGetter = globalTokenGetters[_selector];\\n        }\\n\\n        return _tokenGetter;\\n    }\\n\\n    function functionFeeConfig(bytes4 _selector) external view returns (FeeConfig memory) {\\n        return functionFeeConfigs[_selector];\\n    }\\n\\n    function maxFeeLimit(FeeType _type) external view returns (uint256) {\\n        return maxFeeLimits[_type];\\n    }\\n\\n    function minFeeInUSD(FeeType _type) external view returns (uint256) {\\n        return minFeesInUSD[_type];\\n    }\\n\\n    function priceOracle() external view returns (address) {\\n        return address(oracle);\\n    }\\n\\n    function hasOracle(address token) external view returns (bool) {\\n        return oracle.oracleID(token) != bytes32(0);\\n    }\\n}\\n\",\"keccak256\":\"0xccb1574a9fea3dd842b4a148d97f956b4debb1fd02f6efc4d6cb6b007385f76f\",\"license\":\"MIT\"},\"src/interfaces/IFeeController.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity ^0.8.24;\\n\\ninterface IFeeController {\\n    enum FeeType {\\n        Deposit,\\n        Withdraw,\\n        Reward\\n    }\\n\\n    struct FeeConfig {\\n        FeeType feeType;\\n        uint256 feePercentage; // e.g., 100 = 1% (basis points)\\n    }\\n\\n    error FeePercentageExceedLimit();\\n    error ZeroAddressNotValid();\\n    error NoOracleExist();\\n    error InvalidTokenWithPriceOfZero();\\n    error InvalidArrayLength();\\n\\n    event FeeConfigSet(bytes4 indexed selector, FeeType feeType, uint256 feePercentage);\\n    event TokenGetterSet(address indexed target, bytes4 indexed selector, address tokenGetter);\\n    event GlobalTokenGetterSet(bytes4 indexed selector, address tokenGetter);\\n    event MinFeeSet(FeeType feeType, uint256 minFeeUSD);\\n\\n    function setFunctionFeeConfig(bytes4 _selector, FeeType _feeType, uint256 _feePercentage) external;\\n\\n    function getTokenForAction(address _target, bytes4 _selector, bytes memory _params)\\n        external\\n        view\\n        returns (address, bool);\\n    function calculateFee(address _token, bytes4 _selector, uint256 _volume) external view returns (uint256);\\n    function calculateTokenAmount(address token, uint256 feeInUSD) external view returns (uint256);\\n    function functionFeeConfig(bytes4 _selector) external view returns (FeeConfig memory);\\n    function maxFeeLimit(FeeType _type) external view returns (uint256);\\n    function minFeeInUSD(FeeType _type) external view returns (uint256);\\n    function hasOracle(address token) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x9ee8b58c7451a41f8e7f240614aecafdbc4a1f18188a780cf756d3ad41922007\",\"license\":\"MIT\"},\"src/interfaces/IPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity ^0.8.24;\\n\\ninterface IPriceOracle {\\n    error OracleNotExist(address token);\\n    error NegativePriceNotAllowed();\\n\\n    event OracleSet(address indexed token, bytes32 oracleID);\\n\\n    function setOracleID(address _token, bytes32 _oracleID) external;\\n    function oracleID(address _token) external view returns (bytes32);\\n    function getTokenPrice(address _token) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xe6f9a32f38d24753306239ce65af41cbd1a816cb6a663490adbf47c1f3f5182d\",\"license\":\"MIT\"},\"src/interfaces/ITokenGetter.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity ^0.8.24;\\n\\ninterface ITokenGetter {\\n    function getTokenForSelector(bytes4 selector, bytes memory params) external view returns (address);\\n}\\n\",\"keccak256\":\"0xbc505b3874901c207c627128793c7a5ebe6e547adc5287613a0b3d849c142488\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200150738038062001507833981016040819052620000349162000424565b6200003f33620002fa565b6001600160a01b0384166200006757604051633bf95ba760e01b815260040160405180910390fd5b825160031415806200007b57508151600314155b156200009a57604051634ec4810560e11b815260040160405180910390fd5b620000a581620002fa565b600180546001600160a01b0319166001600160a01b03861617905582518390600090620000d657620000d6620004b4565b602002602001015160056000806002811115620000f757620000f7620004ca565b60028111156200010b576200010b620004ca565b81526020019081526020016000208190555082600181518110620001335762000133620004b4565b60200260200101516005600060016002811115620001555762000155620004ca565b6002811115620001695762000169620004ca565b81526020019081526020016000208190555082600281518110620001915762000191620004b4565b602002602001015160056000600280811115620001b257620001b2620004ca565b6002811115620001c657620001c6620004ca565b81526020019081526020016000208190555081600081518110620001ee57620001ee620004b4565b6020026020010151600660008060028111156200020f576200020f620004ca565b6002811115620002235762000223620004ca565b815260200190815260200160002081905550816001815181106200024b576200024b620004b4565b602002602001015160066000600160028111156200026d576200026d620004ca565b6002811115620002815762000281620004ca565b81526020019081526020016000208190555081600281518110620002a957620002a9620004b4565b602002602001015160066000600280811115620002ca57620002ca620004ca565b6002811115620002de57620002de620004ca565b81526020019081526020016000208190555050505050620004e0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200036257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200038f57600080fd5b815160206001600160401b0380831115620003ae57620003ae62000367565b8260051b604051601f19603f83011681018181108482111715620003d657620003d662000367565b6040529384526020818701810194908101925087851115620003f757600080fd5b6020870191505b848210156200041957815183529183019190830190620003fe565b979650505050505050565b600080600080608085870312156200043b57600080fd5b62000446856200034a565b60208601519094506001600160401b03808211156200046457600080fd5b62000472888389016200037d565b945060408701519150808211156200048957600080fd5b5062000498878288016200037d565b925050620004a9606086016200034a565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b61101780620004f06000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80638b33fc9911610097578063d659e5d111610066578063d659e5d114610227578063f25be75314610247578063f2fde38b1461025a578063f6d0e6401461026d57600080fd5b80638b33fc99146101e75780638da5cb5b146101fa578063aac61a1f1461020b578063caf297651461021e57600080fd5b80632630c12f116100d35780632630c12f1461016757806326bf18f71461018c57806334dcc797146101ad578063715018a6146101df57600080fd5b806278b21d146101045780630ebcbf271461011957806315d4ba4f1461012c578063180c93091461013f575b600080fd5b610117610112366004610bf9565b610280565b005b610117610127366004610c51565b610336565b61011761013a366004610c8d565b61044d565b61015261014d366004610cc4565b6104e1565b60405190151581526020015b60405180910390f35b6001546001600160a01b03165b6040516001600160a01b03909116815260200161015e565b61019f61019a366004610ce1565b61055b565b60405190815260200161015e565b6101c06101bb366004610d12565b61059a565b604080516001600160a01b03909316835290151560208301520161015e565b610117610649565b61019f6101f5366004610ce1565b61065d565b6000546001600160a01b0316610174565b61019f610219366004610de6565b610675565b61019f61271081565b61023a610235366004610e12565b6107c1565b60405161015e9190610e65565b61019f610255366004610e86565b610839565b610117610268366004610cc4565b610a3f565b61017461027b366004610eb4565b610abd565b6001600160a01b038116158061029d57506001600160a01b038216155b156102bb57604051633bf95ba760e01b815260040160405180910390fd5b6001600160a01b0381811660008181526003602090815260408083206001600160e01b031989168085529083529281902080546001600160a01b03191695881695861790555193845290927f3663e8364574850f7532d60f4cf1e49cdd0cef2fba915d7fc69105065077ac27910160405180910390a3505050565b6005600083600281111561034c5761034c610e2d565b600281111561035d5761035d610e2d565b81526020019081526020016000205481111561038c576040516333791c4b60e01b815260040160405180910390fd5b60405180604001604052808360028111156103a9576103a9610e2d565b815260209081018390526001600160e01b031985166000908152600291829052604090208251815491929091839160ff199091169060019084908111156103f2576103f2610e2d565b021790555060208201518160010155905050826001600160e01b0319167f2581c9349512cebfda9236be97ce4458f7d8bd3a3542e9f446171386da6eccb68383604051610440929190610ee9565b60405180910390a2505050565b6001600160a01b03811661047457604051633bf95ba760e01b815260040160405180910390fd5b6001600160e01b0319821660008181526004602090815260409182902080546001600160a01b0319166001600160a01b03861690811790915591519182527f87210db1bc43a1a253ff34bda9b3c3a0de6546212bc35b7ba69e64bbd34e5caa910160405180910390a25050565b60015460405163831cf43d60e01b81526001600160a01b038381166004830152600092839291169063831cf43d90602401602060405180830381865afa15801561052f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105539190610f04565b141592915050565b60006005600083600281111561057357610573610e2d565b600281111561058457610584610e2d565b8152602001908152602001600020549050919050565b60008060006105a98686610abd565b90506001600160a01b0381166105c6576000809250925050610641565b604051635581161b60e01b81526000906001600160a01b03831690635581161b906105f79089908990600401610f1d565b602060405180830381865afa158015610614573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106389190610f7d565b93506001925050505b935093915050565b610651610b1d565b61065b6000610b77565b565b60006006600083600281111561057357610573610e2d565b60015460405163831cf43d60e01b81526001600160a01b038481166004830152600092839291169063831cf43d90602401602060405180830381865afa1580156106c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e79190610f04565b90508061070757604051635164ad9b60e11b815260040160405180910390fd5b600154604051630681320d60e51b81526001600160a01b038681166004830152600092169063d02641a090602401602060405180830381865afa158015610752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107769190610f04565b905080600003610799576040516332c89c1360e21b815260040160405180910390fd5b806107ac85670de0b6b3a7640000610f9a565b6107b69190610fbf565b925050505b92915050565b60408051808201909152600080825260208201526001600160e01b03198216600090815260026020819052604091829020825180840190935280549091839160ff169081111561081357610813610e2d565b600281111561082457610824610e2d565b81526020016001820154815250509050919050565b60015460405163831cf43d60e01b81526001600160a01b038581166004830152600092839291169063831cf43d90602401602060405180830381865afa158015610887573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ab9190610f04565b6001600160e01b031985166000908152600260208190526040808320815180830190925280549495509293909291839160ff16908111156108ee576108ee610e2d565b60028111156108ff576108ff610e2d565b815260200160018201548152505090506000600660008360000151600281111561092b5761092b610e2d565b600281111561093c5761093c610e2d565b8152602081019190915260400160002054905082158061095e57506020820151155b1561096d579250610a38915050565b600154604051630681320d60e51b81526001600160a01b038981166004830152600092169063d02641a090602401602060405180830381865afa1580156109b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dc9190610f04565b905060006127108460200151886109f39190610f9a565b6109fd9190610fbf565b90506000670de0b6b3a7640000610a148484610f9a565b610a1e9190610fbf565b9050838110610a2d5780610a2f565b835b96505050505050505b9392505050565b610a47610b1d565b6001600160a01b038116610ab15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610aba81610b77565b50565b6001600160a01b0380831660009081526003602090815260408083206001600160e01b03198616845290915281205490911680610a385750506001600160e01b0319166000908152600460205260409020546001600160a01b0316919050565b6000546001600160a01b0316331461065b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610aa8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160e01b031981168114610bdf57600080fd5b919050565b6001600160a01b0381168114610aba57600080fd5b600080600060608486031215610c0e57600080fd5b610c1784610bc7565b92506020840135610c2781610be4565b91506040840135610c3781610be4565b809150509250925092565b803560038110610bdf57600080fd5b600080600060608486031215610c6657600080fd5b610c6f84610bc7565b9250610c7d60208501610c42565b9150604084013590509250925092565b60008060408385031215610ca057600080fd5b610ca983610bc7565b91506020830135610cb981610be4565b809150509250929050565b600060208284031215610cd657600080fd5b8135610a3881610be4565b600060208284031215610cf357600080fd5b610a3882610c42565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215610d2757600080fd5b8335610d3281610be4565b9250610d4060208501610bc7565b9150604084013567ffffffffffffffff80821115610d5d57600080fd5b818601915086601f830112610d7157600080fd5b813581811115610d8357610d83610cfc565b604051601f8201601f19908116603f01168101908382118183101715610dab57610dab610cfc565b81604052828152896020848701011115610dc457600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60008060408385031215610df957600080fd5b8235610e0481610be4565b946020939093013593505050565b600060208284031215610e2457600080fd5b610a3882610bc7565b634e487b7160e01b600052602160045260246000fd5b60038110610e6157634e487b7160e01b600052602160045260246000fd5b9052565b6000604082019050610e78828451610e43565b602092830151919092015290565b600080600060608486031215610e9b57600080fd5b8335610ea681610be4565b9250610c7d60208501610bc7565b60008060408385031215610ec757600080fd5b8235610ed281610be4565b9150610ee060208401610bc7565b90509250929050565b60408101610ef78285610e43565b8260208301529392505050565b600060208284031215610f1657600080fd5b5051919050565b63ffffffff60e01b831681526000602060406020840152835180604085015260005b81811015610f5b57858101830151858201606001528201610f3f565b506000606082860101526060601f19601f830116850101925050509392505050565b600060208284031215610f8f57600080fd5b8151610a3881610be4565b80820281158282048414176107bb57634e487b7160e01b600052601160045260246000fd5b600082610fdc57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f6cdc7b047b93d7a2a18353e5bb2f83b70be17ea25379728dafc1416cee0dbf664736f6c63430008180033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1338,
        "contract": "src/FeeController.sol:FeeController",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3725,
        "contract": "src/FeeController.sol:FeeController",
        "label": "oracle",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IPriceOracle)12627"
      },
      {
        "astId": 3730,
        "contract": "src/FeeController.sol:FeeController",
        "label": "functionFeeConfigs",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes4,t_struct(FeeConfig)12363_storage)"
      },
      {
        "astId": 3736,
        "contract": "src/FeeController.sol:FeeController",
        "label": "tokenGetters",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_bytes4,t_address))"
      },
      {
        "astId": 3740,
        "contract": "src/FeeController.sol:FeeController",
        "label": "globalTokenGetters",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_bytes4,t_address)"
      },
      {
        "astId": 3745,
        "contract": "src/FeeController.sol:FeeController",
        "label": "maxFeeLimits",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_enum(FeeType)12357,t_uint256)"
      },
      {
        "astId": 3750,
        "contract": "src/FeeController.sol:FeeController",
        "label": "minFeesInUSD",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_enum(FeeType)12357,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_contract(IPriceOracle)12627": {
        "encoding": "inplace",
        "label": "contract IPriceOracle",
        "numberOfBytes": "20"
      },
      "t_enum(FeeType)12357": {
        "encoding": "inplace",
        "label": "enum IFeeController.FeeType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_address)"
      },
      "t_mapping(t_bytes4,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_bytes4,t_struct(FeeConfig)12363_storage)": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => struct IFeeController.FeeConfig)",
        "numberOfBytes": "32",
        "value": "t_struct(FeeConfig)12363_storage"
      },
      "t_mapping(t_enum(FeeType)12357,t_uint256)": {
        "encoding": "mapping",
        "key": "t_enum(FeeType)12357",
        "label": "mapping(enum IFeeController.FeeType => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(FeeConfig)12363_storage": {
        "encoding": "inplace",
        "label": "struct IFeeController.FeeConfig",
        "members": [
          {
            "astId": 12360,
            "contract": "src/FeeController.sol:FeeController",
            "label": "feeType",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(FeeType)12357"
          },
          {
            "astId": 12362,
            "contract": "src/FeeController.sol:FeeController",
            "label": "feePercentage",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}