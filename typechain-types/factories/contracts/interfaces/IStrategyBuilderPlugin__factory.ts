/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IStrategyBuilderPlugin,
  IStrategyBuilderPluginInterface,
} from "../../../contracts/interfaces/IStrategyBuilderPlugin";

const _abi = [
  {
    inputs: [],
    name: "AutomationAlreadyExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "condition",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "AutomationNotExecutable",
    type: "error",
  },
  {
    inputs: [],
    name: "AutomationNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "ChangeStrategyInConditionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "FeeExceedMaxFee",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentTokenNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyAlreadyExist",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyIsInUse",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "condition",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "UpdateConditionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "changeAutomationInConditionFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "parameter",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum IStrategyBuilderPlugin.ActionType",
            name: "actionType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Action",
        name: "action",
        type: "tuple",
      },
    ],
    name: "ActionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "conditionAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "result1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "result0",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Condition",
        name: "condition",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxFeeAmount",
        type: "uint256",
      },
    ],
    name: "AutomationCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
    ],
    name: "AutomationDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInToken",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInUSD",
        type: "uint256",
      },
    ],
    name: "AutomationExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "conditionAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "id",
                    type: "uint32",
                  },
                  {
                    internalType: "uint8",
                    name: "result1",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "result0",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Condition",
                name: "condition",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "selector",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "parameter",
                    type: "bytes",
                  },
                  {
                    internalType: "address",
                    name: "target",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderPlugin.ActionType",
                    name: "actionType",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Action[]",
                name: "actions",
                type: "tuple[]",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
            name: "steps",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Strategy",
        name: "strategy",
        type: "tuple",
      },
    ],
    name: "StrategyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
    ],
    name: "StrategyDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
    ],
    name: "StrategyExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "stepId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "parameter",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum IStrategyBuilderPlugin.ActionType",
            name: "actionType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Action[]",
        name: "actions",
        type: "tuple[]",
      },
    ],
    name: "StrategyStepExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "automation",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "conditionAddress",
                type: "address",
              },
              {
                internalType: "uint32",
                name: "id",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "result1",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "result0",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Condition",
            name: "condition",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "strategyId",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxFeeAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Automation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxFeeInUSD",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "conditionAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "result1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "result0",
            type: "uint8",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "createAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "conditionAddress",
                type: "address",
              },
              {
                internalType: "uint32",
                name: "id",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "result1",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "result0",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Condition",
            name: "condition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "selector",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "parameter",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum IStrategyBuilderPlugin.ActionType",
                name: "actionType",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Action[]",
            name: "actions",
            type: "tuple[]",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
        name: "steps",
        type: "tuple[]",
      },
    ],
    name: "createStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "deleteAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "deleteStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "beneficary",
        type: "address",
      },
    ],
    name: "executeAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "executeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "getStorageId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "strategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "conditionAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "id",
                    type: "uint32",
                  },
                  {
                    internalType: "uint8",
                    name: "result1",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "result0",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Condition",
                name: "condition",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "selector",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "parameter",
                    type: "bytes",
                  },
                  {
                    internalType: "address",
                    name: "target",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderPlugin.ActionType",
                    name: "actionType",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Action[]",
                name: "actions",
                type: "tuple[]",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
            name: "steps",
            type: "tuple[]",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IStrategyBuilderPlugin__factory {
  static readonly abi = _abi;
  static createInterface(): IStrategyBuilderPluginInterface {
    return new Interface(_abi) as IStrategyBuilderPluginInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IStrategyBuilderPlugin {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IStrategyBuilderPlugin;
  }
}
