/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CoinOrERC20BalanceCondition,
  CoinOrERC20BalanceConditionInterface,
} from "../../../contracts/condition/CoinOrERC20BalanceCondition";

const _abi = [
  {
    inputs: [],
    name: "BaseCondition__ConditionDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseCondition__ConditionIsInUse",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidComparison",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum ICoinOrERC20BalanceCondition.Comparison",
            name: "comparison",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ICoinOrERC20BalanceCondition.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "ConditionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "ConditionDeleted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "action",
        type: "uint32",
      },
    ],
    name: "addAutomationToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum ICoinOrERC20BalanceCondition.Comparison",
            name: "comparison",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        internalType: "struct ICoinOrERC20BalanceCondition.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "addCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "addStrategyToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "action",
        type: "uint32",
      },
    ],
    name: "automationValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "automations",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "checkCondition",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "conditionActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "deleteCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "isUpdateable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "removeAutomationFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "removeStrategyFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "strategies",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "strategyValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "updateCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "walletCondition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum ICoinOrERC20BalanceCondition.Comparison",
            name: "comparison",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        internalType: "struct ICoinOrERC20BalanceCondition.Condition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506125298061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636c088bb011610097578063cff8364011610066578063cff83640146102e2578063e5012fb414610312578063eec93dd014610342578063fff5cf1914610372576100f5565b80636c088bb0146102365780636f2b9aff1461025257806389a78a03146102825780638a4914c2146102b2576100f5565b806314b0af70116100d357806314b0af7014610176578063384c879d146101a657806357182cae146101d6578063687c0e3114610206576100f5565b8063023ef5a9146100fa57806303d049bb1461012a5780631245f2981461015a575b600080fd5b610114600480360381019061010f9190611a9e565b6103a2565b6040516101219190611af9565b60405180910390f35b610144600480360381019061013f9190611b14565b61053b565b6040516101519190611af9565b60405180910390f35b610174600480360381019061016f9190611b14565b6105f3565b005b610190600480360381019061018b9190611a9e565b6107a5565b60405161019d9190611af9565b60405180910390f35b6101c060048036038101906101bb9190611b9f565b610a4a565b6040516101cd9190611c9d565b60405180910390f35b6101f060048036038101906101eb9190611b9f565b610b2b565b6040516101fd9190611af9565b60405180910390f35b610220600480360381019061021b9190611cbf565b610ba2565b60405161022d9190611af9565b60405180910390f35b610250600480360381019061024b9190611d36565b610c28565b005b61026c60048036038101906102679190611b9f565b610dba565b6040516102799190611e79565b60405180910390f35b61029c60048036038101906102979190611b9f565b610ee7565b6040516102a99190611eb0565b60405180910390f35b6102cc60048036038101906102c79190611a9e565b6112d9565b6040516102d99190611af9565b60405180910390f35b6102fc60048036038101906102f79190611b9f565b61157f565b6040516103099190611af9565b60405180910390f35b61032c60048036038101906103279190611a9e565b611593565b6040516103399190611af9565b60405180910390f35b61035c60048036038101906103579190611b9f565b61172b565b6040516103699190611c9d565b60405180910390f35b61038c60048036038101906103879190611cbf565b61180b565b6040516103999190611af9565b60405180910390f35b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff1681526020019081526020016000208290806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff16021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff168152602001908152602001600020805490506104b79190611efa565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055506001905092915050565b6000816105483382611891565b61057e576040517f08a7ddfa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff16815260200190815260200160002060020160019054906101000a900460ff16915050919050565b806105fe3382611891565b610634576040517f08a7ddfa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61063d82611905565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006101000a81549060ff02191690556002820160016101000a81549060ff021916905550506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f9c33cb453d76063bb338c509094bd32900fe4a7e3ccbb52ef947618994a4a6c38233604051610799929190611f4c565b60405180910390a15050565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff16815260200190815260200160002090506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690508363ffffffff16828263ffffffff168154811061089657610895611f75565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff16146108d257600092505050610a44565b6000600183805490506108e59190611efa565b90508163ffffffff1681146109fb57600083828154811061090957610908611f75565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16905082600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff16021790555080848463ffffffff16815481106109c6576109c5611f75565b5b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505b82805480610a0c57610a0b611fa4565b5b60019003818190600052602060002090600891828204019190066004026101000a81549063ffffffff02191690559055600193505050505b92915050565b6060600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610b1e57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610ae15790505b5050505050905092915050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff16815260200190815260200160002060020160019054906101000a900460ff16905092915050565b60008263ffffffff16600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff161490509392505050565b80600580811115610c3c57610c3b611d9e565b5b816040016020810190610c4f9190611ff8565b6005811115610c6157610c60611d9e565b5b1115610c99576040517fd9e2f2ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff1681526020019081526020016000208181610d029190612356565b9050506001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f614e762cdffd5250dad0817ed49d3fbf0b9decd46649fc6f9dbc979bd1bf6410833384604051610dad9392919061245f565b60405180910390a1505050565b610dc2611a0b565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900460ff166005811115610eae57610ead611d9e565b5b6005811115610ec057610ebf611d9e565b5b81526020016002820160019054906101000a900460ff161515151581525050905092915050565b600080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900460ff166005811115610fd657610fd5611d9e565b5b6005811115610fe857610fe7611d9e565b5b81526020016002820160019054906101000a900460ff161515151581525050905060008073ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff16146110c557816000015173ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b815260040161107f9190612496565b602060405180830381865afa15801561109c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c091906124c6565b6110de565b8473ffffffffffffffffffffffffffffffffffffffff16315b9050600160058111156110f4576110f3611d9e565b5b8260400151600581111561110b5761110a611d9e565b5b148061113f57506003600581111561112657611125611d9e565b5b8260400151600581111561113d5761113c611d9e565b5b145b1561115c57816020015181111561115b576001925050506112d3565b5b600060058111156111705761116f611d9e565b5b8260400151600581111561118757611186611d9e565b5b14806111bb5750600460058111156111a2576111a1611d9e565b5b826040015160058111156111b9576111b8611d9e565b5b145b156111d85781602001518110156111d7576001925050506112d3565b5b600260058111156111ec576111eb611d9e565b5b8260400151600581111561120357611202611d9e565b5b148061123757506003600581111561121e5761121d611d9e565b5b8260400151600581111561123557611234611d9e565b5b145b8061126a57506004600581111561125157611250611d9e565b5b8260400151600581111561126857611267611d9e565b5b145b156112865781602001518103611285576001925050506112d3565b5b60058081111561129957611298611d9e565b5b826040015160058111156112b0576112af611d9e565b5b036112cc57816020015181146112cb576001925050506112d3565b5b6000925050505b92915050565b600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff16815260200190815260200160002090506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690508363ffffffff16828263ffffffff16815481106113cb576113ca611f75565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff161461140757600092505050611579565b60006001838054905061141a9190611efa565b90508163ffffffff16811461153057600083828154811061143e5761143d611f75565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16905082600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff16021790555080848463ffffffff16815481106114fb576114fa611f75565b5b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505b8280548061154157611540611fa4565b5b60019003818190600052602060002090600891828204019190066004026101000a81549063ffffffff02191690559055600193505050505b92915050565b600061158b8383611891565b905092915050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff1681526020019081526020016000208290806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff16021790555060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff168152602001908152602001600020805490506116a79190611efa565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055506001905092915050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156117fe57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116117c15790505b5050505050905092915050565b60008263ffffffff16600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff161490509392505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000208054905011806119d1575060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff16815260200190815260200160002080549050115b15611a08576040517f846e233f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160006005811115611a4e57611a4d611d9e565b5b81526020016000151581525090565b600080fd5b600063ffffffff82169050919050565b611a7b81611a62565b8114611a8657600080fd5b50565b600081359050611a9881611a72565b92915050565b60008060408385031215611ab557611ab4611a5d565b5b6000611ac385828601611a89565b9250506020611ad485828601611a89565b9150509250929050565b60008115159050919050565b611af381611ade565b82525050565b6000602082019050611b0e6000830184611aea565b92915050565b600060208284031215611b2a57611b29611a5d565b5b6000611b3884828501611a89565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b6c82611b41565b9050919050565b611b7c81611b61565b8114611b8757600080fd5b50565b600081359050611b9981611b73565b92915050565b60008060408385031215611bb657611bb5611a5d565b5b6000611bc485828601611b8a565b9250506020611bd585828601611a89565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611c1481611a62565b82525050565b6000611c268383611c0b565b60208301905092915050565b6000602082019050919050565b6000611c4a82611bdf565b611c548185611bea565b9350611c5f83611bfb565b8060005b83811015611c90578151611c778882611c1a565b9750611c8283611c32565b925050600181019050611c63565b5085935050505092915050565b60006020820190508181036000830152611cb78184611c3f565b905092915050565b600080600060608486031215611cd857611cd7611a5d565b5b6000611ce686828701611b8a565b9350506020611cf786828701611a89565b9250506040611d0886828701611a89565b9150509250925092565b600080fd5b600060808284031215611d2d57611d2c611d12565b5b81905092915050565b60008060a08385031215611d4d57611d4c611a5d565b5b6000611d5b85828601611a89565b9250506020611d6c85828601611d17565b9150509250929050565b611d7f81611b61565b82525050565b6000819050919050565b611d9881611d85565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60068110611dde57611ddd611d9e565b5b50565b6000819050611def82611dcd565b919050565b6000611dff82611de1565b9050919050565b611e0f81611df4565b82525050565b611e1e81611ade565b82525050565b608082016000820151611e3a6000850182611d76565b506020820151611e4d6020850182611d8f565b506040820151611e606040850182611e06565b506060820151611e736060850182611e15565b50505050565b6000608082019050611e8e6000830184611e24565b92915050565b600060ff82169050919050565b611eaa81611e94565b82525050565b6000602082019050611ec56000830184611ea1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f0582611d85565b9150611f1083611d85565b9250828203905081811115611f2857611f27611ecb565b5b92915050565b611f3781611a62565b82525050565b611f4681611b61565b82525050565b6000604082019050611f616000830185611f2e565b611f6e6020830184611f3d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60068110611fe057600080fd5b50565b600081359050611ff281611fd3565b92915050565b60006020828403121561200e5761200d611a5d565b5b600061201c84828501611fe3565b91505092915050565b6000813561203281611b73565b80915050919050565b60008160001b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff6120688461203b565b9350801983169250808416831791505092915050565b6000819050919050565b60006120a361209e61209984611b41565b61207e565b611b41565b9050919050565b60006120b582612088565b9050919050565b60006120c7826120aa565b9050919050565b6000819050919050565b6120e1826120bc565b6120f46120ed826120ce565b8354612048565b8255505050565b61210481611d85565b811461210f57600080fd5b50565b6000813561211f816120fb565b80915050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6121548461203b565b9350801983169250808416831791505092915050565b600061218561218061217b84611d85565b61207e565b611d85565b9050919050565b6000819050919050565b61219f8261216a565b6121b26121ab8261218c565b8354612128565b8255505050565b600081356121c681611fd3565b80915050919050565b600060ff6121dc8461203b565b9350801983169250808416831791505092915050565b60006121fd82611de1565b9050919050565b6000819050919050565b612217826121f2565b61222a61222382612204565b83546121cf565b8255505050565b61223a81611ade565b811461224557600080fd5b50565b6000813561225581612231565b80915050919050565b60008160081b9050919050565b600061ff006122798461225e565b9350801983169250808416831791505092915050565b600061229a82611ade565b9050919050565b6000819050919050565b6122b48261228f565b6122c76122c0826122a1565b835461226b565b8255505050565b6000810160008301806122e081612025565b90506122ec81846120d8565b50505060018101602083018061230181612112565b905061230d8184612196565b505050600281016040830180612322816121b9565b905061232e818461220e565b50505060028101606083018061234381612248565b905061234f81846122ab565b5050505050565b61236082826122ce565b5050565b60006123736020840184611b8a565b905092915050565b60008135905061238a816120fb565b92915050565b600061239f602084018461237b565b905092915050565b60006123b66020840184611fe3565b905092915050565b6000813590506123cd81612231565b92915050565b60006123e260208401846123be565b905092915050565b608082016123fb6000830183612364565b6124086000850182611d76565b506124166020830183612390565b6124236020850182611d8f565b5061243160408301836123a7565b61243e6040850182611e06565b5061244c60608301836123d3565b6124596060850182611e15565b50505050565b600060c0820190506124746000830186611f2e565b6124816020830185611f3d565b61248e60408301846123ea565b949350505050565b60006020820190506124ab6000830184611f3d565b92915050565b6000815190506124c0816120fb565b92915050565b6000602082840312156124dc576124db611a5d565b5b60006124ea848285016124b1565b9150509291505056fea2646970667358221220e09ed75599763df0c9652bd9a762e955f550a468f9011cba122603f7434e3ab964736f6c634300081c0033";

type CoinOrERC20BalanceConditionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CoinOrERC20BalanceConditionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CoinOrERC20BalanceCondition__factory extends ContractFactory {
  constructor(...args: CoinOrERC20BalanceConditionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CoinOrERC20BalanceCondition & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): CoinOrERC20BalanceCondition__factory {
    return super.connect(runner) as CoinOrERC20BalanceCondition__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoinOrERC20BalanceConditionInterface {
    return new Interface(_abi) as CoinOrERC20BalanceConditionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CoinOrERC20BalanceCondition {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as CoinOrERC20BalanceCondition;
  }
}
