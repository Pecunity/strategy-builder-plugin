/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TimeCondition,
  TimeConditionInterface,
} from "../../../contracts/condition/TimeCondition";

const _abi = [
  {
    inputs: [],
    name: "BaseCondition__ConditionAlreadyExist",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseCondition__ConditionDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseCondition__ConditionIsInUse",
    type: "error",
  },
  {
    inputs: [],
    name: "TimeCondition__ConditionsIsNotUpdateable",
    type: "error",
  },
  {
    inputs: [],
    name: "TimeCondition__DeltaNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "TimeCondition__ExecutionTimeNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "execution",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "delta",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct TimeCondition.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "ConditionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "ConditionDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newExecution",
        type: "uint256",
      },
    ],
    name: "ConditionUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "action",
        type: "uint32",
      },
    ],
    name: "addAutomationToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "execution",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "delta",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        internalType: "struct TimeCondition.Condition",
        name: "_condition",
        type: "tuple",
      },
    ],
    name: "addCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "addStrategyToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "action",
        type: "uint32",
      },
    ],
    name: "automationValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "automations",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "checkCondition",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "conditionActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "deleteCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "isUpdateable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "removeAutomationFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "removeStrategyFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "strategies",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "strategyValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "updateCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "walletCondition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "execution",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "delta",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        internalType: "struct TimeCondition.Condition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50611f618061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063687c0e3111610097578063cff8364011610066578063cff83640146102e2578063e5012fb414610312578063eec93dd014610342578063fff5cf1914610372576100f5565b8063687c0e31146102225780636f2b9aff1461025257806389a78a03146102825780638a4914c2146102b2576100f5565b80631245f298116100d35780631245f2981461017657806314b0af7014610192578063384c879d146101c257806357182cae146101f2576100f5565b8063023ef5a9146100fa57806303d049bb1461012a57806310bdddc81461015a575b600080fd5b610114600480360381019061010f9190611753565b6103a2565b60405161012191906117ae565b60405180910390f35b610144600480360381019061013f91906117c9565b61053b565b60405161015191906117ae565b60405180910390f35b610174600480360381019061016f919061181a565b610751565b005b610190600480360381019061018b91906117c9565b6108bf565b005b6101ac60048036038101906101a79190611753565b6109c9565b6040516101b991906117ae565b60405180910390f35b6101dc60048036038101906101d791906118b8565b610c6e565b6040516101e991906119b6565b60405180910390f35b61020c600480360381019061020791906118b8565b610d4f565b60405161021991906117ae565b60405180910390f35b61023c600480360381019061023791906119d8565b610dc6565b60405161024991906117ae565b60405180910390f35b61026c600480360381019061026791906118b8565b610e4c565b6040516102799190611a95565b60405180910390f35b61029c600480360381019061029791906118b8565b610ef2565b6040516102a99190611acc565b60405180910390f35b6102cc60048036038101906102c79190611753565b610fc4565b6040516102d991906117ae565b60405180910390f35b6102fc60048036038101906102f791906118b8565b61126a565b60405161030991906117ae565b60405180910390f35b61032c60048036038101906103279190611753565b61127e565b60405161033991906117ae565b60405180910390f35b61035c600480360381019061035791906118b8565b611416565b60405161036991906119b6565b60405180910390f35b61038c600480360381019061038791906119d8565b6114f6565b60405161039991906117ae565b60405180910390f35b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff1681526020019081526020016000208290806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff16021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff168152602001908152602001600020805490506104b79190611b16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055506001905092915050565b600081610548338261157c565b61057e576040517f08a7ddfa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff16815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152505090504281600001511115610656576040517f5b2c6ddd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80602001518160000181815161066c9190611b4a565b9150818152505080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008663ffffffff1663ffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050507f4512841be653bcd6562897298746e2d671f964036bf8fc1342f86ecabe30d3318433836000015160405161073e93929190611bab565b60405180910390a1600192505050919050565b8161075c338261157c565b15610793576040517f85f7adcc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8142816000013510156107d2576040517ff2cd0b9400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e1081602001351015610812576040517f0e61cb4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008663ffffffff1663ffffffff168152602001908152602001600020818161087b9190611dad565b9050507fb426363a4b10243595274732519e5a718e5fd0cfbfc6d4adac581cff27b3c2d78433856040516108b193929190611e6d565b60405180910390a150505050565b806108ca338261157c565b610900576040517f08a7ddfa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610909826115e9565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff16815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549060ff021916905550507f9c33cb453d76063bb338c509094bd32900fe4a7e3ccbb52ef947618994a4a6c382336040516109bd929190611ea4565b60405180910390a15050565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff16815260200190815260200160002090506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690508363ffffffff16828263ffffffff1681548110610aba57610ab9611ecd565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff1614610af657600092505050610c68565b600060018380549050610b099190611b16565b90508163ffffffff168114610c1f576000838281548110610b2d57610b2c611ecd565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16905082600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff16021790555080848463ffffffff1681548110610bea57610be9611ecd565b5b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505b82805480610c3057610c2f611efc565b5b60019003818190600052602060002090600891828204019190066004026101000a81549063ffffffff02191690559055600193505050505b92915050565b6060600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610d4257602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610d055790505b5050505050905092915050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff16815260200190815260200160002060020160009054906101000a900460ff16905092915050565b60008263ffffffff16600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff161490509392505050565b610e546116ef565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff16815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff161515151581525050905092915050565b600080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff16815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152505090506000816000015103610fa3576000915050610fbe565b42816000015111610fb8576001915050610fbe565b60009150505b92915050565b600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff16815260200190815260200160002090506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690508363ffffffff16828263ffffffff16815481106110b6576110b5611ecd565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff16146110f257600092505050611264565b6000600183805490506111059190611b16565b90508163ffffffff16811461121b57600083828154811061112957611128611ecd565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16905082600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff16021790555080848463ffffffff16815481106111e6576111e5611ecd565b5b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505b8280548061122c5761122b611efc565b5b60019003818190600052602060002090600891828204019190066004026101000a81549063ffffffff02191690559055600193505050505b92915050565b6000611276838361157c565b905092915050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff1681526020019081526020016000208290806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff16021790555060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff168152602001908152602001600020805490506113929190611b16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055506001905092915050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156114e957602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116114ac5790505b5050505050905092915050565b60008263ffffffff16600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff161490509392505050565b600080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff168152602001908152602001600020600001541415905092915050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000208054905011806116b5575060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff16815260200190815260200160002080549050115b156116ec576040517f846e233f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b604051806060016040528060008152602001600081526020016000151581525090565b600080fd5b600063ffffffff82169050919050565b61173081611717565b811461173b57600080fd5b50565b60008135905061174d81611727565b92915050565b6000806040838503121561176a57611769611712565b5b60006117788582860161173e565b92505060206117898582860161173e565b9150509250929050565b60008115159050919050565b6117a881611793565b82525050565b60006020820190506117c3600083018461179f565b92915050565b6000602082840312156117df576117de611712565b5b60006117ed8482850161173e565b91505092915050565b600080fd5b600060608284031215611811576118106117f6565b5b81905092915050565b6000806080838503121561183157611830611712565b5b600061183f8582860161173e565b9250506020611850858286016117fb565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118858261185a565b9050919050565b6118958161187a565b81146118a057600080fd5b50565b6000813590506118b28161188c565b92915050565b600080604083850312156118cf576118ce611712565b5b60006118dd858286016118a3565b92505060206118ee8582860161173e565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61192d81611717565b82525050565b600061193f8383611924565b60208301905092915050565b6000602082019050919050565b6000611963826118f8565b61196d8185611903565b935061197883611914565b8060005b838110156119a95781516119908882611933565b975061199b8361194b565b92505060018101905061197c565b5085935050505092915050565b600060208201905081810360008301526119d08184611958565b905092915050565b6000806000606084860312156119f1576119f0611712565b5b60006119ff868287016118a3565b9350506020611a108682870161173e565b9250506040611a218682870161173e565b9150509250925092565b6000819050919050565b611a3e81611a2b565b82525050565b611a4d81611793565b82525050565b606082016000820151611a696000850182611a35565b506020820151611a7c6020850182611a35565b506040820151611a8f6040850182611a44565b50505050565b6000606082019050611aaa6000830184611a53565b92915050565b600060ff82169050919050565b611ac681611ab0565b82525050565b6000602082019050611ae16000830184611abd565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b2182611a2b565b9150611b2c83611a2b565b9250828203905081811115611b4457611b43611ae7565b5b92915050565b6000611b5582611a2b565b9150611b6083611a2b565b9250828201905080821115611b7857611b77611ae7565b5b92915050565b611b8781611717565b82525050565b611b968161187a565b82525050565b611ba581611a2b565b82525050565b6000606082019050611bc06000830186611b7e565b611bcd6020830185611b8d565b611bda6040830184611b9c565b949350505050565b611beb81611a2b565b8114611bf657600080fd5b50565b60008135611c0681611be2565b80915050919050565b60008160001b9050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611c4884611c0f565b9350801983169250808416831791505092915050565b6000819050919050565b6000611c83611c7e611c7984611a2b565b611c5e565b611a2b565b9050919050565b6000819050919050565b611c9d82611c68565b611cb0611ca982611c8a565b8354611c1c565b8255505050565b611cc081611793565b8114611ccb57600080fd5b50565b60008135611cdb81611cb7565b80915050919050565b600060ff611cf184611c0f565b9350801983169250808416831791505092915050565b6000611d1282611793565b9050919050565b6000819050919050565b611d2c82611d07565b611d3f611d3882611d19565b8354611ce4565b8255505050565b600081016000830180611d5881611bf9565b9050611d648184611c94565b505050600181016020830180611d7981611bf9565b9050611d858184611c94565b505050600281016040830180611d9a81611cce565b9050611da68184611d23565b5050505050565b611db78282611d46565b5050565b600081359050611dca81611be2565b92915050565b6000611ddf6020840184611dbb565b905092915050565b600081359050611df681611cb7565b92915050565b6000611e0b6020840184611de7565b905092915050565b60608201611e246000830183611dd0565b611e316000850182611a35565b50611e3f6020830183611dd0565b611e4c6020850182611a35565b50611e5a6040830183611dfc565b611e676040850182611a44565b50505050565b600060a082019050611e826000830186611b7e565b611e8f6020830185611b8d565b611e9c6040830184611e13565b949350505050565b6000604082019050611eb96000830185611b7e565b611ec66020830184611b8d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212209a26964f8f1b7196f523d70b4fd97a1aa2f12e096317ba2871d88c334dab7a1164736f6c634300081c0033";

type TimeConditionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TimeConditionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TimeCondition__factory extends ContractFactory {
  constructor(...args: TimeConditionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TimeCondition & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TimeCondition__factory {
    return super.connect(runner) as TimeCondition__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimeConditionInterface {
    return new Interface(_abi) as TimeConditionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TimeCondition {
    return new Contract(address, _abi, runner) as unknown as TimeCondition;
  }
}
