/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  CoinOrERC20BalanceCondition,
  CoinOrERC20BalanceConditionInterface,
} from "../../../../contracts/condition/examples/CoinOrERC20BalanceCondition";

const _abi = [
  {
    inputs: [],
    name: "ConditionAlreadyExist",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionAlreadyInUseOfAutomation",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionAlreadyInUseOfStrategy",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionIsInUse",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionNotInUseOfAutomation",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionNotInUseOfStrategy",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidComparison",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "AutomationAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "AutomationRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum ICoinOrERC20BalanceCondition.Comparison",
            name: "comparison",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ICoinOrERC20BalanceCondition.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "ConditionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "ConditionDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "ConditionDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "StrategyAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "StrategyRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "addAutomationToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum ICoinOrERC20BalanceCondition.Comparison",
            name: "comparison",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        internalType: "struct ICoinOrERC20BalanceCondition.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "addCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "addStrategyToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "automations",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "checkCondition",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
    ],
    name: "conditionInAutomation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
    ],
    name: "conditionInStrategy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "deleteCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "isConditionActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "isUpdateable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "removeAutomationFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "removeStrategyFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "strategies",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "updateCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "walletCondition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum ICoinOrERC20BalanceCondition.Comparison",
            name: "comparison",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        internalType: "struct ICoinOrERC20BalanceCondition.Condition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506117f28061001f6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636c088bb0116100975780638a4914c2116100665780638a4914c2146102a1578063d8cd9c1b146102b4578063e5012fb4146102c7578063eec93dd0146102da57600080fd5b80636c088bb0146102365780636f2b9aff146102495780638455c3d01461026957806389a78a031461027c57600080fd5b806314b0af70116100d357806314b0af7014610179578063384c879d1461018c5780634fdcabb8146101ac57806357182cae146101ed57600080fd5b806301ffc9a714610105578063023ef5a91461013e57806303d049bb146101515780631245f29814610164575b600080fd5b6101296101133660046113fb565b6001600160e01b03191663732d321f60e01b1490565b60405190151581526020015b60405180910390f35b61012961014c36600461143e565b6102ed565b61012961015f366004611471565b610466565b610177610172366004611471565b6104db565b005b61012961018736600461143e565b6105a8565b61019f61019a3660046114a4565b6107e2565b60405161013591906114c2565b6101296101ba3660046114a4565b6001600160a01b038216600090815260046020908152604080832063ffffffff8516845290915290205460ff1692915050565b6101296101fb3660046114a4565b6001600160a01b0391909116600090815260056020908152604080832063ffffffff9490941683529290522060020154610100900460ff1690565b61017761024436600461150b565b61088a565b61025c6102573660046114a4565b610945565b6040516101359190611582565b6101296102773660046115c1565b6109ff565b61028f61028a3660046114a4565b610b00565b60405160ff9091168152602001610135565b6101296102af36600461143e565b610d85565b6101296102c23660046115c1565b610fac565b6101296102d536600461143e565b611078565b61019f6102e83660046114a4565b6111e3565b33600090815260046020908152604080832063ffffffff86168452909152812054839060ff1661033057604051637c748e2960e01b815260040160405180910390fd5b828063ffffffff1660000361035857604051637ae9080f60e11b815260040160405180910390fd5b6103633386866109ff565b156103815760405163433aca2960e01b815260040160405180910390fd5b33600090815260016020818152604080842063ffffffff8a8116808752918452918520805480860182558187529386206008850401805460079095166004026101000a80850219909516938b169490940292909217909255925290546103e79190611606565b33600081815260036020908152604080832063ffffffff8b81168086529184528285208b821680875290855294839020805463ffffffff19169790911696909617909555519182527f64ed0b78fd4903b0c4a53da49298cec5f2ab5e723bbe6ba4602be84cc8c5fc6591015b60405180910390a3506001949350505050565b33600090815260046020908152604080832063ffffffff85168452909152812054829060ff166104a957604051637c748e2960e01b815260040160405180910390fd5b505033600090815260056020908152604080832063ffffffff9490941683529290522060020154610100900460ff1690565b33600090815260046020908152604080832063ffffffff85168452909152902054819060ff1661051e57604051637c748e2960e01b815260040160405180910390fd5b61052782611260565b33600081815260056020908152604080832063ffffffff871680855290835281842080546001600160a01b031916815560018101949094556002909301805461ffff191690558051928352908201929092527f9c33cb453d76063bb338c509094bd32900fe4a7e3ccbb52ef947618994a4a6c3910160405180910390a15050565b33600090815260046020908152604080832063ffffffff86168452909152812054839060ff166105eb57604051637c748e2960e01b815260040160405180910390fd5b6105f6338585610fac565b61061357604051630163c8ad60e71b815260040160405180910390fd5b3360008181526020818152604080832063ffffffff808a1680865291845282852095855260028452828520918552908352818420888216855290925282205483549116919061066490600190611606565b90508163ffffffff16811461072a57600083828154811061068757610687611627565b6000918252602080832060088304015433845260028252604080852063ffffffff8e8116875290845281862060079095166004026101000a9092048216808652939092529220805463ffffffff1916928616928317905585549092508291869181106106f5576106f5611627565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505b8280548061073a5761073a61163d565b6000828152602080822060086000199490940193840401805463ffffffff600460078716026101000a81021990911690915592909355338082526002845260408083208c8516808552908652818420948c1680855294865292819020805463ffffffff1916905551928352909290917fc29fe8f04eaa995e540803e6abbd839f149e3b6b8dc9d66f7b411e6ad92f1ebf91015b60405180910390a35060019695505050505050565b6001600160a01b038216600090815260016020908152604080832063ffffffff8516845282529182902080548351818402810184019094528084526060939283018282801561087c57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161083f5790505b505050505090505b92915050565b80600561089d6060830160408401611660565b60058111156108ae576108ae61154a565b11156108cd5760405163d9e2f2ed60e01b815260040160405180910390fd5b33600090815260056020908152604080832063ffffffff87168452909152902082906108f9828261168b565b90505061090583611360565b7f614e762cdffd5250dad0817ed49d3fbf0b9decd46649fc6f9dbc979bd1bf641083338460405161093893929190611727565b60405180910390a1505050565b6040805160808101825260008082526020820181905291810182905260608101919091526001600160a01b03808416600090815260056020818152604080842063ffffffff881685528252928390208351608081018552815490951685526001810154918501919091526002810154909284019160ff909116908111156109ce576109ce61154a565b60058111156109df576109df61154a565b815260029190910154610100900460ff1615156020909101529392505050565b6001600160a01b038316600081815260036020908152604080832063ffffffff8088168086529184528285208782168652845282852054958552600184528285209185529252822054919216901580610a8157506001600160a01b038516600090815260016020908152604080832063ffffffff881684529091529020548110155b15610a90576000915050610af9565b6001600160a01b038516600090815260016020908152604080832063ffffffff8881168552925290912080549185169183908110610ad057610ad0611627565b6000918252602090912060088204015460079091166004026101000a900463ffffffff16149150505b9392505050565b6001600160a01b03808316600090815260056020818152604080842063ffffffff87168552825280842081516080810183528154909616865260018101549286019290925260028201549394859490939184019160ff90911690811115610b6957610b6961154a565b6005811115610b7a57610b7a61154a565b815260029190910154610100900460ff16151560209091015280519091506000906001600160a01b031615610c1b5781516040516370a0823160e01b81526001600160a01b038781166004830152909116906370a0823190602401602060405180830381865afa158015610bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1691906117a3565b610c27565b846001600160a01b0316315b9050600182604001516005811115610c4157610c4161154a565b1480610c625750600382604001516005811115610c6057610c6061154a565b145b15610c7e578160200151811115610c7e57600192505050610884565b600082604001516005811115610c9657610c9661154a565b1480610cb75750600482604001516005811115610cb557610cb561154a565b145b15610cd3578160200151811015610cd357600192505050610884565b600282604001516005811115610ceb57610ceb61154a565b1480610d0c5750600382604001516005811115610d0a57610d0a61154a565b145b80610d2c5750600482604001516005811115610d2a57610d2a61154a565b145b15610d475781602001518103610d4757600192505050610884565b600582604001516005811115610d5f57610d5f61154a565b03610d7a5781602001518114610d7a57600192505050610884565b506000949350505050565b33600090815260046020908152604080832063ffffffff86168452909152812054839060ff16610dc857604051637c748e2960e01b815260040160405180910390fd5b610dd33385856109ff565b610def5760405162ede60b60e71b815260040160405180910390fd5b33600081815260016020818152604080842063ffffffff808b16808752918452828620968652600384528286209186529083528185208982168652909252832054845491169291610e3f91611606565b90508163ffffffff168114610f05576000838281548110610e6257610e62611627565b6000918252602080832060088304015433845260038252604080852063ffffffff8e8116875290845281862060079095166004026101000a9092048216808652939092529220805463ffffffff191692861692831790558554909250829186918110610ed057610ed0611627565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505b82805480610f1557610f1561163d565b6000828152602080822060086000199490940193840401805463ffffffff600460078716026101000a81021990911690915592909355338082526003845260408083208c8516808552908652818420948c1680855294865292819020805463ffffffff1916905551928352909290917f2be6cc3208d4434b357c0fdd8ae07d6e1f69605413b29b13d68bbd943a225dea91016107cd565b6001600160a01b038316600081815260026020908152604080832063ffffffff8088168086529184528285208782168652845282852054958552848452828520918552925282205491921690158061102b57506001600160a01b03851660009081526020818152604080832063ffffffff881684529091529020548110155b1561103a576000915050610af9565b6001600160a01b03851660009081526020818152604080832063ffffffff8881168552925290912080549185169183908110610ad057610ad0611627565b33600090815260046020908152604080832063ffffffff86168452909152812054839060ff166110bb57604051637c748e2960e01b815260040160405180910390fd5b828063ffffffff166000036110e357604051637ae9080f60e11b815260040160405180910390fd5b6110ee338686610fac565b1561110c57604051630662978b60e51b815260040160405180910390fd5b3360009081526020818152604080832063ffffffff8981168086529184529184208054600180820183558287529486206008820401805460079092166004026101000a80860219909216948b16919091029390931790925590925290546111739190611606565b33600081815260026020908152604080832063ffffffff8b81168086529184528285208b821680875290855294839020805463ffffffff19169790911696909617909555519182527fe4fed7933c124d57c605c2c0c04bf0518034d885e739653e3cc6667526d65d169101610453565b6001600160a01b03821660009081526020818152604080832063ffffffff8516845282529182902080548351818402810184019094528084526060939283018282801561087c576000918252602091829020805463ffffffff16845290820283019290916004910180841161083f57509498975050505050505050565b33600090815260046020908152604080832063ffffffff85168452909152902054819060ff166112a357604051637c748e2960e01b815260040160405180910390fd5b33600090815260016020908152604080832063ffffffff861684529091529020541515806112ee57503360009081526020818152604080832063ffffffff8616845290915290205415155b1561130c57604051637b28591360e01b815260040160405180910390fd5b33600081815260046020908152604080832063ffffffff87168085529252808320805460ff19169055519092917fb0f65a798e2cdda82f7d8ae7ab05d5c06b04d3f8470e4765ff56af507889d19c91a35050565b33600090815260046020908152604080832063ffffffff85168452909152902054819060ff16156113a4576040516303d0619f60e61b815260040160405180910390fd5b818063ffffffff166000036113cc57604051637ae9080f60e11b815260040160405180910390fd5b505033600090815260046020908152604080832063ffffffff909416835292905220805460ff19166001179055565b60006020828403121561140d57600080fd5b81356001600160e01b031981168114610af957600080fd5b803563ffffffff8116811461143957600080fd5b919050565b6000806040838503121561145157600080fd5b61145a83611425565b915061146860208401611425565b90509250929050565b60006020828403121561148357600080fd5b610af982611425565b6001600160a01b03811681146114a157600080fd5b50565b600080604083850312156114b757600080fd5b823561145a8161148c565b602080825282518282018190526000918401906040840190835b8181101561150057835163ffffffff168352602093840193909201916001016114dc565b509095945050505050565b60008082840360a081121561151f57600080fd5b61152884611425565b92506080601f198201121561153c57600080fd5b506020830190509250929050565b634e487b7160e01b600052602160045260246000fd5b6006811061157e57634e487b7160e01b600052602160045260246000fd5b9052565b81516001600160a01b031681526020808301519082015260408083015160808301916115b090840182611560565b506060928301511515919092015290565b6000806000606084860312156115d657600080fd5b83356115e18161148c565b92506115ef60208501611425565b91506115fd60408501611425565b90509250925092565b8181038181111561088457634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b600681106114a157600080fd5b60006020828403121561167257600080fd5b8135610af981611653565b80151581146114a157600080fd5b81356116968161148c565b81546001600160a01b0319166001600160a01b0391909116178155602082013560018201556002810160408301356116cd81611653565b600681106116eb57634e487b7160e01b600052602160045260246000fd5b60ff1982541660ff82168117835550506000606084013561170b8161167d565b825461ff00191681151560081b61ff0016178355905050505050565b63ffffffff841681526001600160a01b038316602082015260c08101823561174e8161148c565b6001600160a01b03166040838101919091526020840135606084015283013561177681611653565b6117836080840182611560565b5060608301356117928161167d565b80151560a084015250949350505050565b6000602082840312156117b557600080fd5b505191905056fea264697066735822122014bf4a2880af3c0eb3382f364675a25da14723787065ee1a7a05d5c9540c0fcd64736f6c634300081c0033";

type CoinOrERC20BalanceConditionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CoinOrERC20BalanceConditionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CoinOrERC20BalanceCondition__factory extends ContractFactory {
  constructor(...args: CoinOrERC20BalanceConditionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CoinOrERC20BalanceCondition & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): CoinOrERC20BalanceCondition__factory {
    return super.connect(runner) as CoinOrERC20BalanceCondition__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoinOrERC20BalanceConditionInterface {
    return new Interface(_abi) as CoinOrERC20BalanceConditionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CoinOrERC20BalanceCondition {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as CoinOrERC20BalanceCondition;
  }
}
