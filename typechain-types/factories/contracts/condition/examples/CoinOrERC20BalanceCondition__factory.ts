/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  CoinOrERC20BalanceCondition,
  CoinOrERC20BalanceConditionInterface,
} from "../../../../contracts/condition/examples/CoinOrERC20BalanceCondition";

const _abi = [
  {
    inputs: [],
    name: "ConditionAlreadyExist",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionAlreadyInUseOfAutomation",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionAlreadyInUseOfStrategy",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionIsInUse",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionNotInUseOfAutomation",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionNotInUseOfStrategy",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidComparison",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "AutomationAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "AutomationRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum ICoinOrERC20BalanceCondition.Comparison",
            name: "comparison",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ICoinOrERC20BalanceCondition.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "ConditionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "ConditionDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "ConditionDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "StrategyAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "StrategyRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "addAutomationToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum ICoinOrERC20BalanceCondition.Comparison",
            name: "comparison",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        internalType: "struct ICoinOrERC20BalanceCondition.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "addCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "addStrategyToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "automations",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "checkCondition",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
    ],
    name: "conditionInAutomation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
    ],
    name: "conditionInStrategy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "deleteCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "isConditionActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "isUpdateable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "removeAutomationFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "removeStrategyFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "strategies",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "updateCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "walletCondition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum ICoinOrERC20BalanceCondition.Comparison",
            name: "comparison",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        internalType: "struct ICoinOrERC20BalanceCondition.Condition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506117648061001f6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636c088bb0116100975780638a4914c2116100665780638a4914c2146102cc578063d8cd9c1b146102df578063e5012fb4146102f2578063eec93dd01461030557600080fd5b80636c088bb0146102615780636f2b9aff146102745780638455c3d01461029457806389a78a03146102a757600080fd5b806314b0af70116100d357806314b0af70146101a4578063384c879d146101b75780634fdcabb8146101d757806357182cae1461021857600080fd5b806301ffc9a714610105578063023ef5a91461013e57806303d049bb146101515780631245f2981461018f575b600080fd5b61012961011336600461136d565b6001600160e01b03191663732d321f60e01b1490565b60405190151581526020015b60405180910390f35b61012961014c3660046113b0565b610318565b61012961015f3660046113e3565b33600090815260056020908152604080832063ffffffff9094168352929052206002015460ff6101009091041690565b6101a261019d3660046113e3565b610491565b005b6101296101b23660046113b0565b61051a565b6101ca6101c5366004611416565b610754565b6040516101359190611434565b6101296101e5366004611416565b6001600160a01b038216600090815260046020908152604080832063ffffffff8516845290915290205460ff1692915050565b610129610226366004611416565b6001600160a01b0391909116600090815260056020908152604080832063ffffffff9490941683529290522060020154610100900460ff1690565b6101a261026f36600461147d565b6107fc565b610287610282366004611416565b6108b7565b60405161013591906114f4565b6101296102a2366004611533565b610971565b6102ba6102b5366004611416565b610a72565b60405160ff9091168152602001610135565b6101296102da3660046113b0565b610cf7565b6101296102ed366004611533565b610f1e565b6101296103003660046113b0565b610fea565b6101ca610313366004611416565b611155565b33600090815260046020908152604080832063ffffffff86168452909152812054839060ff1661035b57604051637c748e2960e01b815260040160405180910390fd5b828063ffffffff1660000361038357604051637ae9080f60e11b815260040160405180910390fd5b61038e338686610971565b156103ac5760405163433aca2960e01b815260040160405180910390fd5b33600090815260016020818152604080842063ffffffff8a8116808752918452918520805480860182558187529386206008850401805460079095166004026101000a80850219909516938b169490940292909217909255925290546104129190611578565b33600081815260036020908152604080832063ffffffff8b81168086529184528285208b821680875290855294839020805463ffffffff19169790911696909617909555519182527f64ed0b78fd4903b0c4a53da49298cec5f2ab5e723bbe6ba4602be84cc8c5fc6591015b60405180910390a3506001949350505050565b61049a816111d2565b33600081815260056020908152604080832063ffffffff861680855290835281842080546001600160a01b031916815560018101949094556002909301805461ffff191690558051928352908201929092527f9c33cb453d76063bb338c509094bd32900fe4a7e3ccbb52ef947618994a4a6c3910160405180910390a150565b33600090815260046020908152604080832063ffffffff86168452909152812054839060ff1661055d57604051637c748e2960e01b815260040160405180910390fd5b610568338585610f1e565b61058557604051630163c8ad60e71b815260040160405180910390fd5b3360008181526020818152604080832063ffffffff808a168086529184528285209585526002845282852091855290835281842088821685529092528220548354911691906105d690600190611578565b90508163ffffffff16811461069c5760008382815481106105f9576105f9611599565b6000918252602080832060088304015433845260028252604080852063ffffffff8e8116875290845281862060079095166004026101000a9092048216808652939092529220805463ffffffff19169286169283179055855490925082918691811061066757610667611599565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505b828054806106ac576106ac6115af565b6000828152602080822060086000199490940193840401805463ffffffff600460078716026101000a81021990911690915592909355338082526002845260408083208c8516808552908652818420948c1680855294865292819020805463ffffffff1916905551928352909290917fc29fe8f04eaa995e540803e6abbd839f149e3b6b8dc9d66f7b411e6ad92f1ebf91015b60405180910390a35060019695505050505050565b6001600160a01b038216600090815260016020908152604080832063ffffffff851684528252918290208054835181840281018401909452808452606093928301828280156107ee57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116107b15790505b505050505090505b92915050565b80600561080f60608301604084016115d2565b6005811115610820576108206114bc565b111561083f5760405163d9e2f2ed60e01b815260040160405180910390fd5b33600090815260056020908152604080832063ffffffff871684529091529020829061086b82826115fd565b905050610877836112d2565b7f614e762cdffd5250dad0817ed49d3fbf0b9decd46649fc6f9dbc979bd1bf64108333846040516108aa93929190611699565b60405180910390a1505050565b6040805160808101825260008082526020820181905291810182905260608101919091526001600160a01b03808416600090815260056020818152604080842063ffffffff881685528252928390208351608081018552815490951685526001810154918501919091526002810154909284019160ff90911690811115610940576109406114bc565b6005811115610951576109516114bc565b815260029190910154610100900460ff1615156020909101529392505050565b6001600160a01b038316600081815260036020908152604080832063ffffffff80881680865291845282852087821686528452828520549585526001845282852091855292528220549192169015806109f357506001600160a01b038516600090815260016020908152604080832063ffffffff881684529091529020548110155b15610a02576000915050610a6b565b6001600160a01b038516600090815260016020908152604080832063ffffffff8881168552925290912080549185169183908110610a4257610a42611599565b6000918252602090912060088204015460079091166004026101000a900463ffffffff16149150505b9392505050565b6001600160a01b03808316600090815260056020818152604080842063ffffffff87168552825280842081516080810183528154909616865260018101549286019290925260028201549394859490939184019160ff90911690811115610adb57610adb6114bc565b6005811115610aec57610aec6114bc565b815260029190910154610100900460ff16151560209091015280519091506000906001600160a01b031615610b8d5781516040516370a0823160e01b81526001600160a01b038781166004830152909116906370a0823190602401602060405180830381865afa158015610b64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b889190611715565b610b99565b846001600160a01b0316315b9050600182604001516005811115610bb357610bb36114bc565b1480610bd45750600382604001516005811115610bd257610bd26114bc565b145b15610bf0578160200151811115610bf0576001925050506107f6565b600082604001516005811115610c0857610c086114bc565b1480610c295750600482604001516005811115610c2757610c276114bc565b145b15610c45578160200151811015610c45576001925050506107f6565b600282604001516005811115610c5d57610c5d6114bc565b1480610c7e5750600382604001516005811115610c7c57610c7c6114bc565b145b80610c9e5750600482604001516005811115610c9c57610c9c6114bc565b145b15610cb95781602001518103610cb9576001925050506107f6565b600582604001516005811115610cd157610cd16114bc565b03610cec5781602001518114610cec576001925050506107f6565b506000949350505050565b33600090815260046020908152604080832063ffffffff86168452909152812054839060ff16610d3a57604051637c748e2960e01b815260040160405180910390fd5b610d45338585610971565b610d615760405162ede60b60e71b815260040160405180910390fd5b33600081815260016020818152604080842063ffffffff808b16808752918452828620968652600384528286209186529083528185208982168652909252832054845491169291610db191611578565b90508163ffffffff168114610e77576000838281548110610dd457610dd4611599565b6000918252602080832060088304015433845260038252604080852063ffffffff8e8116875290845281862060079095166004026101000a9092048216808652939092529220805463ffffffff191692861692831790558554909250829186918110610e4257610e42611599565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505b82805480610e8757610e876115af565b6000828152602080822060086000199490940193840401805463ffffffff600460078716026101000a81021990911690915592909355338082526003845260408083208c8516808552908652818420948c1680855294865292819020805463ffffffff1916905551928352909290917f2be6cc3208d4434b357c0fdd8ae07d6e1f69605413b29b13d68bbd943a225dea910161073f565b6001600160a01b038316600081815260026020908152604080832063ffffffff80881680865291845282852087821686528452828520549585528484528285209185529252822054919216901580610f9d57506001600160a01b03851660009081526020818152604080832063ffffffff881684529091529020548110155b15610fac576000915050610a6b565b6001600160a01b03851660009081526020818152604080832063ffffffff8881168552925290912080549185169183908110610a4257610a42611599565b33600090815260046020908152604080832063ffffffff86168452909152812054839060ff1661102d57604051637c748e2960e01b815260040160405180910390fd5b828063ffffffff1660000361105557604051637ae9080f60e11b815260040160405180910390fd5b611060338686610f1e565b1561107e57604051630662978b60e51b815260040160405180910390fd5b3360009081526020818152604080832063ffffffff8981168086529184529184208054600180820183558287529486206008820401805460079092166004026101000a80860219909216948b16919091029390931790925590925290546110e59190611578565b33600081815260026020908152604080832063ffffffff8b81168086529184528285208b821680875290855294839020805463ffffffff19169790911696909617909555519182527fe4fed7933c124d57c605c2c0c04bf0518034d885e739653e3cc6667526d65d16910161047e565b6001600160a01b03821660009081526020818152604080832063ffffffff851684528252918290208054835181840281018401909452808452606093928301828280156107ee576000918252602091829020805463ffffffff1684529082028301929091600491018084116107b157509498975050505050505050565b33600090815260046020908152604080832063ffffffff85168452909152902054819060ff1661121557604051637c748e2960e01b815260040160405180910390fd5b33600090815260016020908152604080832063ffffffff8616845290915290205415158061126057503360009081526020818152604080832063ffffffff8616845290915290205415155b1561127e57604051637b28591360e01b815260040160405180910390fd5b33600081815260046020908152604080832063ffffffff87168085529252808320805460ff19169055519092917fb0f65a798e2cdda82f7d8ae7ab05d5c06b04d3f8470e4765ff56af507889d19c91a35050565b33600090815260046020908152604080832063ffffffff85168452909152902054819060ff1615611316576040516303d0619f60e61b815260040160405180910390fd5b818063ffffffff1660000361133e57604051637ae9080f60e11b815260040160405180910390fd5b505033600090815260046020908152604080832063ffffffff909416835292905220805460ff19166001179055565b60006020828403121561137f57600080fd5b81356001600160e01b031981168114610a6b57600080fd5b803563ffffffff811681146113ab57600080fd5b919050565b600080604083850312156113c357600080fd5b6113cc83611397565b91506113da60208401611397565b90509250929050565b6000602082840312156113f557600080fd5b610a6b82611397565b6001600160a01b038116811461141357600080fd5b50565b6000806040838503121561142957600080fd5b82356113cc816113fe565b602080825282518282018190526000918401906040840190835b8181101561147257835163ffffffff1683526020938401939092019160010161144e565b509095945050505050565b60008082840360a081121561149157600080fd5b61149a84611397565b92506080601f19820112156114ae57600080fd5b506020830190509250929050565b634e487b7160e01b600052602160045260246000fd5b600681106114f057634e487b7160e01b600052602160045260246000fd5b9052565b81516001600160a01b03168152602080830151908201526040808301516080830191611522908401826114d2565b506060928301511515919092015290565b60008060006060848603121561154857600080fd5b8335611553816113fe565b925061156160208501611397565b915061156f60408501611397565b90509250925092565b818103818111156107f657634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6006811061141357600080fd5b6000602082840312156115e457600080fd5b8135610a6b816115c5565b801515811461141357600080fd5b8135611608816113fe565b81546001600160a01b0319166001600160a01b03919091161781556020820135600182015560028101604083013561163f816115c5565b6006811061165d57634e487b7160e01b600052602160045260246000fd5b60ff1982541660ff82168117835550506000606084013561167d816115ef565b825461ff00191681151560081b61ff0016178355905050505050565b63ffffffff841681526001600160a01b038316602082015260c0810182356116c0816113fe565b6001600160a01b0316604083810191909152602084013560608401528301356116e8816115c5565b6116f560808401826114d2565b506060830135611704816115ef565b80151560a084015250949350505050565b60006020828403121561172757600080fd5b505191905056fea2646970667358221220c7fe0bed465c9988a8dacd475080bfdfdea3055ef7c65032b7f0dc97895e1b0f64736f6c634300081c0033";

type CoinOrERC20BalanceConditionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CoinOrERC20BalanceConditionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CoinOrERC20BalanceCondition__factory extends ContractFactory {
  constructor(...args: CoinOrERC20BalanceConditionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CoinOrERC20BalanceCondition & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): CoinOrERC20BalanceCondition__factory {
    return super.connect(runner) as CoinOrERC20BalanceCondition__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoinOrERC20BalanceConditionInterface {
    return new Interface(_abi) as CoinOrERC20BalanceConditionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CoinOrERC20BalanceCondition {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as CoinOrERC20BalanceCondition;
  }
}
