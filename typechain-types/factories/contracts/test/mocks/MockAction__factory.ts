/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockAction,
  MockActionInterface,
} from "../../../../contracts/test/mocks/MockAction";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IAction.PluginExecution[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "identifier",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061044a8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a7146100465780633a61363a1461007f5780637998a1c41461009f575b600080fd5b61006a6100543660046101e8565b6001600160e01b031916631e66287160e21b1490565b60405190151581526020015b60405180910390f35b61009261008d36600461024b565b6100b1565b6040516100769190610337565b604051600160e01b8152602001610076565b60606000845167ffffffffffffffff8111156100cf576100cf610219565b60405190808252806020026020018201604052801561011c57816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816100ed5790505b50905060005b85518110156101df576040518060600160405280866001600160a01b031681526020016000815260200187838151811061015e5761015e6103fe565b60200260200101518660405160240161018c9291906001600160a01b03929092168252602082015260400190565b60408051601f198184030181529190526020810180516001600160e01b031663a9059cbb60e01b179052905282518390839081106101cc576101cc6103fe565b6020908102919091010152600101610122565b50949350505050565b6000602082840312156101fa57600080fd5b81356001600160e01b03198116811461021257600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461024657600080fd5b919050565b60008060006060848603121561026057600080fd5b833567ffffffffffffffff81111561027757600080fd5b8401601f8101861361028857600080fd5b803567ffffffffffffffff8111156102a2576102a2610219565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156102cf576102cf610219565b6040529182526020818401810192908101898411156102ed57600080fd5b6020850194505b83851015610313576103058561022f565b8152602094850194016102f4565b509550610326925050506020850161022f565b929592945050506040919091013590565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b828110156103f257868503603f19018452815180516001600160a01b0316865260208082015190870152604090810151606091870182905280519187018290529060005b818110156103c057602081840181015160808a84010152016103a3565b506000608082890101526080601f19601f8301168801019650505060208201915060208401935060018101905061035f565b50929695505050505050565b634e487b7160e01b600052603260045260246000fdfea26469706673582212207b920b2e6c2993640eb8f6b065712364bb7a799689f04c57c899513f5007c29e64736f6c634300081c0033";

type MockActionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockActionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockAction__factory extends ContractFactory {
  constructor(...args: MockActionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockAction & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockAction__factory {
    return super.connect(runner) as MockAction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockActionInterface {
    return new Interface(_abi) as MockActionInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockAction {
    return new Contract(address, _abi, runner) as unknown as MockAction;
  }
}
