/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockCondition,
  MockConditionInterface,
} from "../../../../contracts/test/mocks/MockCondition";

const _abi = [
  {
    inputs: [],
    name: "ConditionAlreadyExist",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionAlreadyInUseOfAutomation",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionAlreadyInUseOfStrategy",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionIsInUse",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionNotInUseOfAutomation",
    type: "error",
  },
  {
    inputs: [],
    name: "ConditionNotInUseOfStrategy",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "AutomationAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "AutomationRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "ConditionDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "StrategyAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "StrategyRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "addAutomationToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "result",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        internalType: "struct MockCondition.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "addCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "addStrategyToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "automations",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "checkCondition",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
    ],
    name: "conditionInAutomation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
    ],
    name: "conditionInStrategy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "deleteCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "isConditionActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "isUpdateable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "removeAutomationFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "removeStrategyFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "strategies",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "updateCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061120e8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806357182cae11610097578063d8cd9c1b11610066578063d8cd9c1b14610274578063de8c821e14610287578063e5012fb41461029a578063eec93dd0146102ad57600080fd5b806357182cae146101e25780638455c3d01461022957806389a78a031461023c5780638a4914c21461026157600080fd5b80631245f298116100d35780631245f2981461015957806314b0af701461016e578063384c879d146101815780634fdcabb8146101a157600080fd5b806301ffc9a7146100fa578063023ef5a91461013357806303d049bb14610146575b600080fd5b61011e610108366004610f82565b6001600160e01b03191663732d321f60e01b1490565b60405190151581526020015b60405180910390f35b61011e610141366004610fc5565b6102c0565b61011e610154366004610ff8565b610439565b61016c610167366004610ff8565b6104ac565b005b61011e61017c366004610fc5565b6105ac565b61019461018f36600461102a565b6107e6565b60405161012a9190611046565b61011e6101af36600461102a565b6001600160a01b038216600090815260046020908152604080832063ffffffff8516845290915290205460ff1692915050565b61011e6101f036600461102a565b6001600160a01b0391909116600090815260056020908152604080832063ffffffff949094168352929052205462010000900460ff1690565b61011e61023736600461108f565b61088e565b61024f61024a36600461102a565b61098f565b60405160ff909116815260200161012a565b61011e61026f366004610fc5565b6109d0565b61011e61028236600461108f565b610bf7565b61016c6102953660046110d2565b610cc3565b61011e6102a8366004610fc5565b610cff565b6101946102bb36600461102a565b610e6a565b33600090815260046020908152604080832063ffffffff86168452909152812054839060ff1661030357604051637c748e2960e01b815260040160405180910390fd5b828063ffffffff1660000361032b57604051637ae9080f60e11b815260040160405180910390fd5b61033633868661088e565b156103545760405163433aca2960e01b815260040160405180910390fd5b33600090815260016020818152604080842063ffffffff8a8116808752918452918520805480860182558187529386206008850401805460079095166004026101000a80850219909516938b169490940292909217909255925290546103ba9190611111565b33600081815260036020908152604080832063ffffffff8b81168086529184528285208b821680875290855294839020805463ffffffff19169790911696909617909555519182527f64ed0b78fd4903b0c4a53da49298cec5f2ab5e723bbe6ba4602be84cc8c5fc6591015b60405180910390a3506001949350505050565b33600090815260046020908152604080832063ffffffff85168452909152812054829060ff1661047c57604051637c748e2960e01b815260040160405180910390fd5b505033600090815260056020908152604080832063ffffffff949094168352929052205462010000900460ff1690565b33600090815260046020908152604080832063ffffffff85168452909152902054819060ff166104ef57604051637c748e2960e01b815260040160405180910390fd5b33600090815260016020908152604080832063ffffffff8616845290915290205415158061053a57503360009081526020818152604080832063ffffffff8616845290915290205415155b1561055857604051637b28591360e01b815260040160405180910390fd5b33600081815260046020908152604080832063ffffffff87168085529252808320805460ff19169055519092917fb0f65a798e2cdda82f7d8ae7ab05d5c06b04d3f8470e4765ff56af507889d19c91a35050565b33600090815260046020908152604080832063ffffffff86168452909152812054839060ff166105ef57604051637c748e2960e01b815260040160405180910390fd5b6105fa338585610bf7565b61061757604051630163c8ad60e71b815260040160405180910390fd5b3360008181526020818152604080832063ffffffff808a1680865291845282852095855260028452828520918552908352818420888216855290925282205483549116919061066890600190611111565b90508163ffffffff16811461072e57600083828154811061068b5761068b611132565b6000918252602080832060088304015433845260028252604080852063ffffffff8e8116875290845281862060079095166004026101000a9092048216808652939092529220805463ffffffff1916928616928317905585549092508291869181106106f9576106f9611132565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505b8280548061073e5761073e611148565b6000828152602080822060086000199490940193840401805463ffffffff600460078716026101000a81021990911690915592909355338082526002845260408083208c8516808552908652818420948c1680855294865292819020805463ffffffff1916905551928352909290917fc29fe8f04eaa995e540803e6abbd839f149e3b6b8dc9d66f7b411e6ad92f1ebf91015b60405180910390a35060019695505050505050565b6001600160a01b038216600090815260016020908152604080832063ffffffff8516845282529182902080548351818402810184019094528084526060939283018282801561088057602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116108435790505b505050505090505b92915050565b6001600160a01b038316600081815260036020908152604080832063ffffffff808816808652918452828520878216865284528285205495855260018452828520918552925282205491921690158061091057506001600160a01b038516600090815260016020908152604080832063ffffffff881684529091529020548110155b1561091f576000915050610988565b6001600160a01b038516600090815260016020908152604080832063ffffffff888116855292529091208054918516918390811061095f5761095f611132565b6000918252602090912060088204015460079091166004026101000a900463ffffffff16149150505b9392505050565b6001600160a01b038216600090815260056020908152604080832063ffffffff8516845290915281205460ff166109c7576000610988565b60019392505050565b33600090815260046020908152604080832063ffffffff86168452909152812054839060ff16610a1357604051637c748e2960e01b815260040160405180910390fd5b610a1e33858561088e565b610a3a5760405162ede60b60e71b815260040160405180910390fd5b33600081815260016020818152604080842063ffffffff808b16808752918452828620968652600384528286209186529083528185208982168652909252832054845491169291610a8a91611111565b90508163ffffffff168114610b50576000838281548110610aad57610aad611132565b6000918252602080832060088304015433845260038252604080852063ffffffff8e8116875290845281862060079095166004026101000a9092048216808652939092529220805463ffffffff191692861692831790558554909250829186918110610b1b57610b1b611132565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505b82805480610b6057610b60611148565b6000828152602080822060086000199490940193840401805463ffffffff600460078716026101000a81021990911690915592909355338082526003845260408083208c8516808552908652818420948c1680855294865292819020805463ffffffff1916905551928352909290917f2be6cc3208d4434b357c0fdd8ae07d6e1f69605413b29b13d68bbd943a225dea91016107d1565b6001600160a01b038316600081815260026020908152604080832063ffffffff80881680865291845282852087821686528452828520549585528484528285209185529252822054919216901580610c7657506001600160a01b03851660009081526020818152604080832063ffffffff881684529091529020548110155b15610c85576000915050610988565b6001600160a01b03851660009081526020818152604080832063ffffffff888116855292529091208054918516918390811061095f5761095f611132565b33600090815260056020908152604080832063ffffffff8616845290915290208190610cef8282611170565b905050610cfb82610ee7565b5050565b33600090815260046020908152604080832063ffffffff86168452909152812054839060ff16610d4257604051637c748e2960e01b815260040160405180910390fd5b828063ffffffff16600003610d6a57604051637ae9080f60e11b815260040160405180910390fd5b610d75338686610bf7565b15610d9357604051630662978b60e51b815260040160405180910390fd5b3360009081526020818152604080832063ffffffff8981168086529184529184208054600180820183558287529486206008820401805460079092166004026101000a80860219909216948b1691909102939093179092559092529054610dfa9190611111565b33600081815260026020908152604080832063ffffffff8b81168086529184528285208b821680875290855294839020805463ffffffff19169790911696909617909555519182527fe4fed7933c124d57c605c2c0c04bf0518034d885e739653e3cc6667526d65d169101610426565b6001600160a01b03821660009081526020818152604080832063ffffffff85168452825291829020805483518184028101840190945280845260609392830182828015610880576000918252602091829020805463ffffffff16845290820283019290916004910180841161084357509498975050505050505050565b33600090815260046020908152604080832063ffffffff85168452909152902054819060ff1615610f2b576040516303d0619f60e61b815260040160405180910390fd5b818063ffffffff16600003610f5357604051637ae9080f60e11b815260040160405180910390fd5b505033600090815260046020908152604080832063ffffffff909416835292905220805460ff19166001179055565b600060208284031215610f9457600080fd5b81356001600160e01b03198116811461098857600080fd5b803563ffffffff81168114610fc057600080fd5b919050565b60008060408385031215610fd857600080fd5b610fe183610fac565b9150610fef60208401610fac565b90509250929050565b60006020828403121561100a57600080fd5b61098882610fac565b80356001600160a01b0381168114610fc057600080fd5b6000806040838503121561103d57600080fd5b610fe183611013565b602080825282518282018190526000918401906040840190835b8181101561108457835163ffffffff16835260209384019390920191600101611060565b509095945050505050565b6000806000606084860312156110a457600080fd5b6110ad84611013565b92506110bb60208501610fac565b91506110c960408501610fac565b90509250925092565b60008082840360808112156110e657600080fd5b6110ef84610fac565b92506060601f198201121561110357600080fd5b506020830190509250929050565b8181038181111561088857634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60008135801515811461088857600080fd5b6111798261115e565b1515815460ff821691508160ff19821617835561ff0061119b6020860161115e565b151560081b16808361ffff1984161717845562ff00006111bd6040870161115e565b151560101b168362ffffff198416178217178455505050505056fea2646970667358221220fe876de54f013e00ce41aef2e521f6eda5e717733fd8a27001c8d1a3c9d9c79e64736f6c634300081c0033";

type MockConditionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockConditionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCondition__factory extends ContractFactory {
  constructor(...args: MockConditionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockCondition & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockCondition__factory {
    return super.connect(runner) as MockCondition__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockConditionInterface {
    return new Interface(_abi) as MockConditionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockCondition {
    return new Contract(address, _abi, runner) as unknown as MockCondition;
  }
}
