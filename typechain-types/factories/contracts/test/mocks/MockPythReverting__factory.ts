/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockPythReverting,
  MockPythRevertingInterface,
} from "../../../../contracts/test/mocks/MockPythReverting";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "getPriceNoOlderThan",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
          {
            internalType: "uint256",
            name: "publishTime",
            type: "uint256",
          },
        ],
        internalType: "struct PythStructs.Price",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506101728061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633b2af9f014610030575b600080fd5b61004361003e3660046100ff565b61008f565b6040516100869190815160070b815260208083015167ffffffffffffffff169082015260408083015160030b908201526060918201519181019190915260800190565b60405180910390f35b60408051608081018252600080825260208201819052918101829052606081019190915260405162461bcd60e51b815260206004820152601a60248201527f4d6f636b6564207265766572743a207374616c65207072696365000000000000604482015260640160405180910390fd5b6000806040838503121561011257600080fd5b82359150602083013567ffffffffffffffff8116811461013157600080fd5b80915050925092905056fea26469706673582212202abda0155d4570c51caf852db84d1f30d197d2348f302a8f0cab6184afb5e88e64736f6c634300081c0033";

type MockPythRevertingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPythRevertingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPythReverting__factory extends ContractFactory {
  constructor(...args: MockPythRevertingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockPythReverting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockPythReverting__factory {
    return super.connect(runner) as MockPythReverting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPythRevertingInterface {
    return new Interface(_abi) as MockPythRevertingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockPythReverting {
    return new Contract(address, _abi, runner) as unknown as MockPythReverting;
  }
}
