/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FeeHandler,
  FeeHandlerInterface,
} from "../../contracts/FeeHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_beneficaryPercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_creatorPercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_vaultPercentage",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBeneficiary",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPercentage",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPercentageDistribution",
    type: "error",
  },
  {
    inputs: [],
    name: "PrimaryTokenAlreadyActivated",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "beneficiaryFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "creatorFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "vaultFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
    ],
    name: "FeeHandled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "totalFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "beneficiaryFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "creatorFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "vaultFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
    ],
    name: "FeeHandledETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "primaryTokenBurn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenBurn",
        type: "uint256",
      },
    ],
    name: "PrimaryTokenActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "burnerAddress",
        type: "address",
      },
    ],
    name: "UpdatedBurnerAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "beneficiary",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "creator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "vault",
        type: "uint256",
      },
    ],
    name: "UpdatedPercentages",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "reduction",
        type: "address",
      },
    ],
    name: "UpdatedReduction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "UpdatedTokenAllowance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "UpdatedVault",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_PRIMARY_TOKEN_DISCOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_DIVISOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_burnerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_primaryTokenBurn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenBurn",
        type: "uint256",
      },
    ],
    name: "activatePrimaryToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiaryPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burnerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creatorPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "handleFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "handleFeeETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "primaryToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "primaryTokenActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "primaryTokenBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reduction",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_burnerAddress",
        type: "address",
      },
    ],
    name: "updateBurnerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_beneficiary",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_creator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_vault",
        type: "uint256",
      },
    ],
    name: "updatePercentages",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reduction",
        type: "address",
      },
    ],
    name: "updateReduction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "updateTokenAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "updateVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161286738038061286783398181016040528101906100329190610375565b61004e61004361007760201b60201c565b61007f60201b60201c565b61005d8461014360201b60201c565b61006e8383836101cd60201b60201c565b505050506104af565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6101528161027360201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f6f558b65df41ac351cf689106e82861fcd8565c6e5826e57870ddfa645c6f365816040516101c291906103eb565b60405180910390a150565b6127108183856101dd9190610435565b6101e79190610435565b1461021e576040517f394c498600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8260058190555081600681905550806007819055507f1a9c7b51149f1736f1cdaf2c64576ac08a15e1a84d04408ed0e9620e7214e53c83838360405161026693929190610478565b60405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102d9576040517f3bf95ba700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061030c826102e1565b9050919050565b61031c81610301565b811461032757600080fd5b50565b60008151905061033981610313565b92915050565b6000819050919050565b6103528161033f565b811461035d57600080fd5b50565b60008151905061036f81610349565b92915050565b6000806000806080858703121561038f5761038e6102dc565b5b600061039d8782880161032a565b94505060206103ae87828801610360565b93505060406103bf87828801610360565b92505060606103d087828801610360565b91505092959194509250565b6103e581610301565b82525050565b600060208201905061040060008301846103dc565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104408261033f565b915061044b8361033f565b925082820190508082111561046357610462610406565b5b92915050565b6104728161033f565b82525050565b600060608201905061048d6000830186610469565b61049a6020830185610469565b6104a76040830184610469565b949350505050565b6123a9806104be6000396000f3fe60806040526004361061014b5760003560e01c806391ac094c116100b6578063e75a44071161006f578063e75a44071461043d578063eb56faf014610466578063f071bf4f1461048f578063f2fde38b146104ba578063f94ebb60146104e3578063fbfa77cf1461050c5761014b565b806391ac094c1461034c5780639c87246a14610377578063caf29765146103a2578063d66672c9146103cd578063e6293e23146103e9578063e7563f3f146104145761014b565b80634e72d15f116101085780634e72d15f1461024e57806355219d5a14610279578063715018a6146102b657806378e5be24146102cd5780637c9e75c0146102f65780638da5cb5b146103215761014b565b80630230ee0114610150578063064b127c1461017b5780630bceddc7146101a4578063263d5ad0146101cd5780634346e4c6146101f85780634a0db27014610223575b600080fd5b34801561015c57600080fd5b50610165610537565b60405161017291906119c9565b60405180910390f35b34801561018757600080fd5b506101a2600480360381019061019d9190611a47565b61053d565b005b3480156101b057600080fd5b506101cb60048036038101906101c69190611aa0565b610551565b005b3480156101d957600080fd5b506101e2610806565b6040516101ef91906119c9565b60405180910390f35b34801561020457600080fd5b5061020d61080c565b60405161021a9190611b22565b60405180910390f35b34801561022f57600080fd5b50610238610865565b60405161024591906119c9565b60405180910390f35b34801561025a57600080fd5b5061026361086b565b6040516102709190611b4c565b60405180910390f35b34801561028557600080fd5b506102a0600480360381019061029b9190611a47565b610891565b6040516102ad9190611b22565b60405180910390f35b3480156102c257600080fd5b506102cb6108e7565b005b3480156102d957600080fd5b506102f460048036038101906102ef9190611b67565b6108fb565b005b34801561030257600080fd5b5061030b610a39565b60405161031891906119c9565b60405180910390f35b34801561032d57600080fd5b50610336610a3f565b6040516103439190611b4c565b60405180910390f35b34801561035857600080fd5b50610361610a68565b60405161036e9190611b4c565b60405180910390f35b34801561038357600080fd5b5061038c610a8e565b60405161039991906119c9565b60405180910390f35b3480156103ae57600080fd5b506103b7610a94565b6040516103c491906119c9565b60405180910390f35b6103e760048036038101906103e29190611bce565b610a9a565b005b3480156103f557600080fd5b506103fe610dbf565b60405161040b9190611b4c565b60405180910390f35b34801561042057600080fd5b5061043b60048036038101906104369190611a47565b610de5565b005b34801561044957600080fd5b50610464600480360381019061045f9190611a47565b610df9565b005b34801561047257600080fd5b5061048d60048036038101906104889190611c0e565b610e85565b005b34801561049b57600080fd5b506104a4610e9d565b6040516104b191906119c9565b60405180910390f35b3480156104c657600080fd5b506104e160048036038101906104dc9190611a47565b610ea3565b005b3480156104ef57600080fd5b5061050a60048036038101906105059190611c8d565b610f26565b005b34801561051857600080fd5b50610521610fc2565b60405161052e9190611b4c565b60405180910390f35b60055481565b610545610fe8565b61054e81611066565b50565b61055a836110ea565b61056382611127565b600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166105e6576040517fa29c498600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806105f38587611190565b91509150600080600061060585611375565b9250925092506106383388858c73ffffffffffffffffffffffffffffffffffffffff166113e9909392919063ffffffff16565b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146106ed576106993387848c73ffffffffffffffffffffffffffffffffffffffff166113e9909392919063ffffffff16565b6106e833600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838c73ffffffffffffffffffffffffffffffffffffffff166113e9909392919063ffffffff16565b610748565b61074733600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684846107209190611cfc565b8c73ffffffffffffffffffffffffffffffffffffffff166113e9909392919063ffffffff16565b5b60008411156107a1576107a033600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16868c73ffffffffffffffffffffffffffffffffffffffff166113e9909392919063ffffffff16565b5b8873ffffffffffffffffffffffffffffffffffffffff167f4124bc30e110773b1565f24a68661a069c5376a457c7ebce3e63c724ae45c6388689898787878b6040516107f39796959493929190611d30565b60405180910390a2505050505050505050565b60075481565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415905090565b61138881565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6108ef610fe8565b6108f96000611472565b565b610903610fe8565b61090b61080c565b15610942576040517f4d9de1df00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61094b84611536565b61095483611536565b61095d8261159f565b6109668161159f565b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600881905550806009819055507f248afe4e502b731bc9e5a2292536d6b3c258774a8f324e673c4e53d829df8c0984848484604051610a2b9493929190611d9f565b60405180910390a150505050565b60095481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b61271081565b600a60008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610b1d576040517fa29c498600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b2682611127565b6000349050610b34816110ea565b600080610b42836000611190565b915091506000806000610b5485611375565b9250925092508773ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015610ba0573d6000803e3d6000fd5b50600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610c8a578673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610c1b573d6000803e3d6000fd5b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610c84573d6000803e3d6000fd5b50610cff565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8383610cd29190611cfc565b9081150290604051600060405180830381858888f19350505050158015610cfd573d6000803e3d6000fd5b505b6000841115610d7257600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc859081150290604051600060405180830381858888f19350505050158015610d70573d6000803e3d6000fd5b505b7fec35cd8fa69a94f0983c9f09ef31a7ce8513cd95c0c6a612d63c3263da6023dc8589898686868a604051610dad9796959493929190611d30565b60405180910390a15050505050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ded610fe8565b610df6816115e9565b50565b610e01610fe8565b610e0a81611536565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f649fed15b1ca56d22be5a668138c3016c9bd83a7113c51b4ad658c17385690a181604051610e7a9190611b4c565b60405180910390a150565b610e8d610fe8565b610e9883838361166d565b505050565b60065481565b610eab610fe8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1190611e67565b60405180910390fd5b610f2381611472565b50565b610f2e610fe8565b80600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f21fb5ab330e6efd4fe3f3ddbc29f5e8b6a8860cc338fd853a89ca420f77dd4368282604051610fb6929190611e87565b60405180910390a15050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ff0611713565b73ffffffffffffffffffffffffffffffffffffffff1661100e610a3f565b73ffffffffffffffffffffffffffffffffffffffff1614611064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105b90611efc565b60405180910390fd5b565b61106f81611536565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f80127c92194fc51731cd69f0bbb36f7e1c5c82b5007379a2a414898dc08ce63d816040516110df9190611b4c565b60405180910390a150565b60008103611124576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361118d576040517f5566df5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600080600084905060008073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112b7576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fdfdc29c336040518263ffffffff1660e01b815260040161124c9190611b4c565b602060405180830381865afa158015611269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128d9190611f31565b9050612710818461129e9190611f5e565b6112a89190611fcf565b836112b39190612000565b9250505b6112bf61080c565b1561136657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611339576127106009548361132a9190611f5e565b6113349190611fcf565b611355565b6127106008548361134a9190611f5e565b6113549190611fcf565b5b905080826113639190612000565b91505b81819350935050509250929050565b6000806000806127106005548661138c9190611f5e565b6113969190611fcf565b90506000612710600654876113ab9190611f5e565b6113b59190611fcf565b90506000612710600754886113ca9190611f5e565b6113d49190611fcf565b90508282829550955095505050509193909250565b61146c846323b872dd60e01b85858560405160240161140a93929190612034565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061171b565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361159c576040517f3bf95ba700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6127108111806115af5750600081145b156115e6576040517f1f3b85d300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6115f281611536565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f6f558b65df41ac351cf689106e82861fcd8565c6e5826e57870ddfa645c6f365816040516116629190611b4c565b60405180910390a150565b61271081838561167d9190611cfc565b6116879190611cfc565b146116be576040517f394c498600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8260058190555081600681905550806007819055507f1a9c7b51149f1736f1cdaf2c64576ac08a15e1a84d04408ed0e9620e7214e53c8383836040516117069392919061206b565b60405180910390a1505050565b600033905090565b600061177d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166117e39092919063ffffffff16565b905060008151148061179f57508080602001905181019061179e91906120b7565b5b6117de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d590612156565b60405180910390fd5b505050565b60606117f284846000856117fb565b90509392505050565b606082471015611840576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611837906121e8565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516118699190612279565b60006040518083038185875af1925050503d80600081146118a6576040519150601f19603f3d011682016040523d82523d6000602084013e6118ab565b606091505b50915091506118bc878383876118c8565b92505050949350505050565b6060831561192a576000835103611922576118e28561193d565b611921576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611918906122dc565b60405180910390fd5b5b829050611935565b6119348383611960565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156119735781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a79190612351565b60405180910390fd5b6000819050919050565b6119c3816119b0565b82525050565b60006020820190506119de60008301846119ba565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a14826119e9565b9050919050565b611a2481611a09565b8114611a2f57600080fd5b50565b600081359050611a4181611a1b565b92915050565b600060208284031215611a5d57611a5c6119e4565b5b6000611a6b84828501611a32565b91505092915050565b611a7d816119b0565b8114611a8857600080fd5b50565b600081359050611a9a81611a74565b92915050565b60008060008060808587031215611aba57611ab96119e4565b5b6000611ac887828801611a32565b9450506020611ad987828801611a8b565b9350506040611aea87828801611a32565b9250506060611afb87828801611a32565b91505092959194509250565b60008115159050919050565b611b1c81611b07565b82525050565b6000602082019050611b376000830184611b13565b92915050565b611b4681611a09565b82525050565b6000602082019050611b616000830184611b3d565b92915050565b60008060008060808587031215611b8157611b806119e4565b5b6000611b8f87828801611a32565b9450506020611ba087828801611a32565b9350506040611bb187828801611a8b565b9250506060611bc287828801611a8b565b91505092959194509250565b60008060408385031215611be557611be46119e4565b5b6000611bf385828601611a32565b9250506020611c0485828601611a32565b9150509250929050565b600080600060608486031215611c2757611c266119e4565b5b6000611c3586828701611a8b565b9350506020611c4686828701611a8b565b9250506040611c5786828701611a8b565b9150509250925092565b611c6a81611b07565b8114611c7557600080fd5b50565b600081359050611c8781611c61565b92915050565b60008060408385031215611ca457611ca36119e4565b5b6000611cb285828601611a32565b9250506020611cc385828601611c78565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d07826119b0565b9150611d12836119b0565b9250828201905080821115611d2a57611d29611ccd565b5b92915050565b600060e082019050611d45600083018a6119ba565b611d526020830189611b3d565b611d5f6040830188611b3d565b611d6c60608301876119ba565b611d7960808301866119ba565b611d8660a08301856119ba565b611d9360c08301846119ba565b98975050505050505050565b6000608082019050611db46000830187611b3d565b611dc16020830186611b3d565b611dce60408301856119ba565b611ddb60608301846119ba565b95945050505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611e51602683611de4565b9150611e5c82611df5565b604082019050919050565b60006020820190508181036000830152611e8081611e44565b9050919050565b6000604082019050611e9c6000830185611b3d565b611ea96020830184611b13565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611ee6602083611de4565b9150611ef182611eb0565b602082019050919050565b60006020820190508181036000830152611f1581611ed9565b9050919050565b600081519050611f2b81611a74565b92915050565b600060208284031215611f4757611f466119e4565b5b6000611f5584828501611f1c565b91505092915050565b6000611f69826119b0565b9150611f74836119b0565b9250828202611f82816119b0565b91508282048414831517611f9957611f98611ccd565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611fda826119b0565b9150611fe5836119b0565b925082611ff557611ff4611fa0565b5b828204905092915050565b600061200b826119b0565b9150612016836119b0565b925082820390508181111561202e5761202d611ccd565b5b92915050565b60006060820190506120496000830186611b3d565b6120566020830185611b3d565b61206360408301846119ba565b949350505050565b600060608201905061208060008301866119ba565b61208d60208301856119ba565b61209a60408301846119ba565b949350505050565b6000815190506120b181611c61565b92915050565b6000602082840312156120cd576120cc6119e4565b5b60006120db848285016120a2565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612140602a83611de4565b915061214b826120e4565b604082019050919050565b6000602082019050818103600083015261216f81612133565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006121d2602683611de4565b91506121dd82612176565b604082019050919050565b60006020820190508181036000830152612201816121c5565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561223c578082015181840152602081019050612221565b60008484015250505050565b600061225382612208565b61225d8185612213565b935061226d81856020860161221e565b80840191505092915050565b60006122858284612248565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006122c6601d83611de4565b91506122d182612290565b602082019050919050565b600060208201905081810360008301526122f5816122b9565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000612323826122fc565b61232d8185611de4565b935061233d81856020860161221e565b61234681612307565b840191505092915050565b6000602082019050818103600083015261236b8184612318565b90509291505056fea264697066735822122093232d36799b7c6bbdf7b842f203c96b5f046289dd9d35f00a9459c1567ce8b064736f6c634300081c0033";

type FeeHandlerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeHandler__factory extends ContractFactory {
  constructor(...args: FeeHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _vault: AddressLike,
    _beneficaryPercentage: BigNumberish,
    _creatorPercentage: BigNumberish,
    _vaultPercentage: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _vault,
      _beneficaryPercentage,
      _creatorPercentage,
      _vaultPercentage,
      overrides || {}
    );
  }
  override deploy(
    _vault: AddressLike,
    _beneficaryPercentage: BigNumberish,
    _creatorPercentage: BigNumberish,
    _vaultPercentage: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _vault,
      _beneficaryPercentage,
      _creatorPercentage,
      _vaultPercentage,
      overrides || {}
    ) as Promise<
      FeeHandler & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FeeHandler__factory {
    return super.connect(runner) as FeeHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeHandlerInterface {
    return new Interface(_abi) as FeeHandlerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FeeHandler {
    return new Contract(address, _abi, runner) as unknown as FeeHandler;
  }
}
