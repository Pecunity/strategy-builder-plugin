/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PriceOracle,
  PriceOracleInterface,
} from "../../contracts/PriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pythOracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NegativePriceNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "OracleNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "oracleID",
        type: "bytes32",
      },
    ],
    name: "OracleSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_ORACLE_DELAY",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRICE_DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "oracleID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_oracleID",
        type: "bytes32",
      },
    ],
    name: "setOracleID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161084338038061084383398101604081905261002f916100e6565b816001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161007a565b506001600160a01b031660805250610119565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e157600080fd5b919050565b600080604083850312156100f957600080fd5b610102836100ca565b9150610110602084016100ca565b90509250929050565b60805161070f6101346000396000610222015261070f6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c6d3107f1161005b578063c6d3107f14610101578063d02641a01461011b578063f1a640f81461012e578063f2fde38b1461013657600080fd5b80635b9dfcfa1461008d578063715018a6146100a2578063831cf43d146100aa5780638da5cb5b146100e6575b600080fd5b6100a061009b366004610445565b610149565b005b6100a06101aa565b6100d36100b836600461046f565b6001600160a01b031660009081526001602052604090205490565b6040519081526020015b60405180910390f35b6000546040516001600160a01b0390911681526020016100dd565b610109603c81565b60405160ff90911681526020016100dd565b6100d361012936600461046f565b6101be565b610109601281565b6100a061014436600461046f565b6102b7565b6101516102f5565b6001600160a01b03821660008181526001602052604090819020839055517f0371a930f54882f3e9296d66c96d41e22a3892c17f1ae0482b0761630010813f9061019e9084815260200190565b60405180910390a25050565b6101b26102f5565b6101bc6000610322565b565b6001600160a01b0381166000908152600160205260408120548061020557604051630baf9bfb60e01b81526001600160a01b03841660048201526024015b60405180910390fd5b60405163052571af60e51b815260048101829052603c60248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a4ae35e090604401608060405180830381865afa92505050801561028d575060408051601f3d908101601f1916820190925261028a918101906104bb565b60015b61029a5750600092915050565b6102af816000015160070b8260400151610372565b949350505050565b6102bf6102f5565b6001600160a01b0381166102e957604051631e4fbdf760e01b8152600060048201526024016101fc565b6102f281610322565b50565b6000546001600160a01b031633146101bc5760405163118cdaa760e01b81523360048201526024016101fc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080831361039457604051632919491b60e01b815260040160405180910390fd5b60008260030b13156103cf5763ffffffff82166103b2816012610564565b6103bd90600a61065e565b6103c7908561066a565b915050610423565b60006103da8361068c565b63ffffffff1690506103ec601261068c565b60030b8360030b13610418576104036012826106af565b61040e90600a61065e565b6103c790856106c2565b6104038160126106af565b92915050565b80356001600160a01b038116811461044057600080fd5b919050565b6000806040838503121561045857600080fd5b61046183610429565b946020939093013593505050565b60006020828403121561048157600080fd5b61048a82610429565b9392505050565b805167ffffffffffffffff8116811461044057600080fd5b8051600381900b811461044057600080fd5b600060808284031280156104ce57600080fd5b600090506040516080810181811067ffffffffffffffff8211171561050157634e487b7160e01b83526041600452602483fd5b6040528351600781900b8114610515578283fd5b815261052360208501610491565b6020820152610534604085016104a9565b604082015260609384015193810193909352509092915050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104235761042361054e565b6001815b60018411156105b2578085048111156105965761059661054e565b60018416156105a457908102905b60019390931c92800261057b565b935093915050565b6000826105c957506001610423565b816105d657506000610423565b81600181146105ec57600281146105f657610612565b6001915050610423565b60ff8411156106075761060761054e565b50506001821b610423565b5060208310610133831016604e8410600b8410161715610635575081810a610423565b6106426000198484610577565b80600019048211156106565761065661054e565b029392505050565b600061048a83836105ba565b60008261068757634e487b7160e01b600052601260045260246000fd5b500490565b60008160030b637fffffff1981036106a6576106a661054e565b60000392915050565b818103818111156104235761042361054e565b80820281158282048414176104235761042361054e56fea26469706673582212205f2d592db680affb4e8cb477f53dddf2e3a8152a6af264cf52ab1ed5f6dbd83364736f6c634300081c0033";

type PriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceOracle__factory extends ContractFactory {
  constructor(...args: PriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    _pythOracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      _pythOracle,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    _pythOracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, _pythOracle, overrides || {}) as Promise<
      PriceOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PriceOracle__factory {
    return super.connect(runner) as PriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleInterface {
    return new Interface(_abi) as PriceOracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PriceOracle {
    return new Contract(address, _abi, runner) as unknown as PriceOracle;
  }
}
