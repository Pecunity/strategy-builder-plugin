/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PriceOracle,
  PriceOracleInterface,
} from "../../contracts/PriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pythOracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NegativePriceNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "OracleNotExist",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "oracleID",
        type: "bytes32",
      },
    ],
    name: "OracleSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "oracleID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_oracleID",
        type: "bytes32",
      },
    ],
    name: "setOracleID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610f8f380380610f8f833981810160405281019061003291906101b7565b61004e61004361008860201b60201c565b61009060201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506101e4565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061018482610159565b9050919050565b61019481610179565b811461019f57600080fd5b50565b6000815190506101b18161018b565b92915050565b6000602082840312156101cd576101cc610154565b5b60006101db848285016101a2565b91505092915050565b608051610d906101ff60003960006102db0152610d906000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80635b9dfcfa14610067578063715018a614610083578063831cf43d1461008d5780638da5cb5b146100bd578063d02641a0146100db578063f2fde38b1461010b575b600080fd5b610081600480360381019061007c91906106d7565b610127565b005b61008b6101c5565b005b6100a760048036038101906100a29190610717565b6101d9565b6040516100b49190610753565b60405180910390f35b6100c5610222565b6040516100d2919061077d565b60405180910390f35b6100f560048036038101906100f09190610717565b61024b565b60405161010291906107b1565b60405180910390f35b61012560048036038101906101209190610717565b610393565b005b61012f610416565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f0371a930f54882f3e9296d66c96d41e22a3892c17f1ae0482b0761630010813f826040516101b99190610753565b60405180910390a25050565b6101cd610416565b6101d76000610494565b565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000801b81036102d757826040517f0baf9bfb0000000000000000000000000000000000000000000000000000000081526004016102ce919061077d565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396834ad3836040518263ffffffff1660e01b81526004016103329190610753565b608060405180830381865afa15801561034f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037391906109b3565b905061038a816000015160070b8260400151610558565b92505050919050565b61039b610416565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040190610a63565b60405180910390fd5b61041381610494565b50565b61041e61062c565b73ffffffffffffffffffffffffffffffffffffffff1661043c610222565b73ffffffffffffffffffffffffffffffffffffffff1614610492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048990610acf565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080831215610594576040517f2919491b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000826105a090610b1e565b63ffffffff1690507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee8360030b136105fe576012816105df9190610b66565b600a6105eb9190610ccd565b846105f69190610d18565b915050610626565b80601261060b9190610b66565b600a6106179190610ccd565b846106229190610d18565b9150505b92915050565b600033905090565b6000604051905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061066e82610643565b9050919050565b61067e81610663565b811461068957600080fd5b50565b60008135905061069b81610675565b92915050565b6000819050919050565b6106b4816106a1565b81146106bf57600080fd5b50565b6000813590506106d1816106ab565b92915050565b600080604083850312156106ee576106ed61063e565b5b60006106fc8582860161068c565b925050602061070d858286016106c2565b9150509250929050565b60006020828403121561072d5761072c61063e565b5b600061073b8482850161068c565b91505092915050565b61074d816106a1565b82525050565b60006020820190506107686000830184610744565b92915050565b61077781610663565b82525050565b6000602082019050610792600083018461076e565b92915050565b6000819050919050565b6107ab81610798565b82525050565b60006020820190506107c660008301846107a2565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61081a826107d1565b810181811067ffffffffffffffff82111715610839576108386107e2565b5b80604052505050565b600061084c610634565b90506108588282610811565b919050565b60008160070b9050919050565b6108738161085d565b811461087e57600080fd5b50565b6000815190506108908161086a565b92915050565b600067ffffffffffffffff82169050919050565b6108b381610896565b81146108be57600080fd5b50565b6000815190506108d0816108aa565b92915050565b60008160030b9050919050565b6108ec816108d6565b81146108f757600080fd5b50565b600081519050610909816108e3565b92915050565b61091881610798565b811461092357600080fd5b50565b6000815190506109358161090f565b92915050565b600060808284031215610951576109506107cc565b5b61095b6080610842565b9050600061096b84828501610881565b600083015250602061097f848285016108c1565b6020830152506040610993848285016108fa565b60408301525060606109a784828501610926565b60608301525092915050565b6000608082840312156109c9576109c861063e565b5b60006109d78482850161093b565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610a4d6026836109e0565b9150610a58826109f1565b604082019050919050565b60006020820190508181036000830152610a7c81610a40565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610ab96020836109e0565b9150610ac482610a83565b602082019050919050565b60006020820190508181036000830152610ae881610aac565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b29826108d6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000008203610b5b57610b5a610aef565b5b816000039050919050565b6000610b7182610798565b9150610b7c83610798565b9250828203905081811115610b9457610b93610aef565b5b92915050565b60008160011c9050919050565b6000808291508390505b6001851115610bf157808604811115610bcd57610bcc610aef565b5b6001851615610bdc5780820291505b8081029050610bea85610b9a565b9450610bb1565b94509492505050565b600082610c0a5760019050610cc6565b81610c185760009050610cc6565b8160018114610c2e5760028114610c3857610c67565b6001915050610cc6565b60ff841115610c4a57610c49610aef565b5b8360020a915084821115610c6157610c60610aef565b5b50610cc6565b5060208310610133831016604e8410600b8410161715610c9c5782820a905083811115610c9757610c96610aef565b5b610cc6565b610ca98484846001610ba7565b92509050818404811115610cc057610cbf610aef565b5b81810290505b9392505050565b6000610cd882610798565b9150610ce383610798565b9250610d107fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610bfa565b905092915050565b6000610d2382610798565b9150610d2e83610798565b9250828202610d3c81610798565b91508282048414831517610d5357610d52610aef565b5b509291505056fea2646970667358221220de25e98e8cb7d6cfac57764a42c9a2f86d6e038b4a95c6c9a0ec66e576d0d83b64736f6c634300081c0033";

type PriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceOracle__factory extends ContractFactory {
  constructor(...args: PriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _pythOracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_pythOracle, overrides || {});
  }
  override deploy(
    _pythOracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_pythOracle, overrides || {}) as Promise<
      PriceOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PriceOracle__factory {
    return super.connect(runner) as PriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleInterface {
    return new Interface(_abi) as PriceOracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PriceOracle {
    return new Contract(address, _abi, runner) as unknown as PriceOracle;
  }
}
