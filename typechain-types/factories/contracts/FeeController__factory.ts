/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FeeController,
  FeeControllerInterface,
} from "../../contracts/FeeController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_maxFeeLimits",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_minFeesInUSD",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FeePercentageExceedLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidArrayLength",
    type: "error",
  },
  {
    inputs: [],
    name: "NoOracleExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "enum IFeeController.FeeType",
        name: "feeType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feePercentage",
        type: "uint256",
      },
    ],
    name: "FeeConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenGetter",
        type: "address",
      },
    ],
    name: "GlobalTokenGetterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IFeeController.FeeType",
        name: "feeType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minFeeUSD",
        type: "uint256",
      },
    ],
    name: "MinFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenGetter",
        type: "address",
      },
    ],
    name: "TokenGetterSet",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_DIVISOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "_volume",
        type: "uint256",
      },
    ],
    name: "calculateFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feeInUSD",
        type: "uint256",
      },
    ],
    name: "calculateTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "functionFeeConfig",
    outputs: [
      {
        components: [
          {
            internalType: "enum IFeeController.FeeType",
            name: "feeType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "feePercentage",
            type: "uint256",
          },
        ],
        internalType: "struct IFeeController.FeeConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "_params",
        type: "bytes",
      },
    ],
    name: "getTokenForAction",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "hasOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IFeeController.FeeType",
        name: "_type",
        type: "uint8",
      },
    ],
    name: "maxFeeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IFeeController.FeeType",
        name: "_type",
        type: "uint8",
      },
    ],
    name: "minFeeInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "enum IFeeController.FeeType",
        name: "_feeType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_feePercentage",
        type: "uint256",
      },
    ],
    name: "setFunctionFeeConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_tokenGetter",
        type: "address",
      },
    ],
    name: "setGlobalTokenGetter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_tokenGetter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "setTokenGetter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "tokenGetter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161179438038061179483398101604081905261002f916103ff565b836001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b610067816102de565b506001600160a01b03831661008f57604051633bf95ba760e01b815260040160405180910390fd5b815160031415806100a257508051600314155b156100c057604051634ec4810560e11b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b038516179055815182906000906100ee576100ee61048a565b60200260200101516005600080600281111561010c5761010c6104a0565b600281111561011d5761011d6104a0565b815260200190815260200160002081905550816001815181106101425761014261048a565b60200260200101516005600060016002811115610161576101616104a0565b6002811115610172576101726104a0565b815260200190815260200160002081905550816002815181106101975761019761048a565b6020026020010151600560006002808111156101b5576101b56104a0565b60028111156101c6576101c66104a0565b815260200190815260200160002081905550806000815181106101eb576101eb61048a565b602002602001015160066000806002811115610209576102096104a0565b600281111561021a5761021a6104a0565b8152602001908152602001600020819055508060018151811061023f5761023f61048a565b6020026020010151600660006001600281111561025e5761025e6104a0565b600281111561026f5761026f6104a0565b815260200190815260200160002081905550806002815181106102945761029461048a565b6020026020010151600660006002808111156102b2576102b26104a0565b60028111156102c3576102c36104a0565b815260200190815260200160002081905550505050506104b6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461034557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261037157600080fd5b81516001600160401b0381111561038a5761038a61034a565b604051600582901b90603f8201601f191681016001600160401b03811182821017156103b8576103b861034a565b6040529182526020818501810192908101868411156103d657600080fd5b6020860192505b838310156103f55782518152602092830192016103dd565b5095945050505050565b6000806000806080858703121561041557600080fd5b61041e8561032e565b935061042c6020860161032e565b60408601519093506001600160401b0381111561044857600080fd5b61045487828801610360565b606087015190935090506001600160401b0381111561047257600080fd5b61047e87828801610360565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6112cf806104c56000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80638b33fc9911610097578063d659e5d111610066578063d659e5d114610227578063f25be75314610247578063f2fde38b1461025a578063f6d0e6401461026d57600080fd5b80638b33fc99146101e75780638da5cb5b146101fa578063aac61a1f1461020b578063caf297651461021e57600080fd5b80632630c12f116100d35780632630c12f1461016757806326bf18f71461018c57806334dcc797146101ad578063715018a6146101df57600080fd5b806278b21d146101045780630ebcbf271461011957806315d4ba4f1461012c578063180c93091461013f575b600080fd5b610117610112366004610d53565b610280565b005b610117610127366004610dab565b61033e565b61011761013a366004610de8565b61045d565b61015261014d366004610e1f565b6104f9565b60405190151581526020015b60405180910390f35b6001546001600160a01b03165b6040516001600160a01b03909116815260200161015e565b61019f61019a366004610e3c565b610573565b60405190815260200161015e565b6101c06101bb366004610e6d565b6105b2565b604080516001600160a01b03909316835290151560208301520161015e565b610117610661565b61019f6101f5366004610e3c565b610675565b6000546001600160a01b0316610174565b61019f610219366004610f49565b61068d565b61019f61271081565b61023a610235366004610f75565b6107d7565b60405161015e9190610fc8565b61019f610255366004610fe9565b61084f565b610117610268366004610e1f565b610b3c565b61017461027b366004611017565b610b7f565b610288610bdf565b6001600160a01b03811615806102a557506001600160a01b038216155b156102c357604051633bf95ba760e01b815260040160405180910390fd5b6001600160a01b0381811660008181526003602090815260408083206001600160e01b031989168085529083529281902080546001600160a01b03191695881695861790555193845290927f3663e8364574850f7532d60f4cf1e49cdd0cef2fba915d7fc69105065077ac27910160405180910390a3505050565b610346610bdf565b6005600083600281111561035c5761035c610f90565b600281111561036d5761036d610f90565b81526020019081526020016000205481111561039c576040516333791c4b60e01b815260040160405180910390fd5b60405180604001604052808360028111156103b9576103b9610f90565b815260209081018390526001600160e01b031985166000908152600291829052604090208251815491929091839160ff1990911690600190849081111561040257610402610f90565b021790555060208201518160010155905050826001600160e01b0319167f2581c9349512cebfda9236be97ce4458f7d8bd3a3542e9f446171386da6eccb6838360405161045092919061104c565b60405180910390a2505050565b610465610bdf565b6001600160a01b03811661048c57604051633bf95ba760e01b815260040160405180910390fd5b6001600160e01b0319821660008181526004602090815260409182902080546001600160a01b0319166001600160a01b03861690811790915591519182527f87210db1bc43a1a253ff34bda9b3c3a0de6546212bc35b7ba69e64bbd34e5caa910160405180910390a25050565b60015460405163831cf43d60e01b81526001600160a01b038381166004830152600092839291169063831cf43d90602401602060405180830381865afa158015610547573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056b9190611067565b141592915050565b60006005600083600281111561058b5761058b610f90565b600281111561059c5761059c610f90565b8152602001908152602001600020549050919050565b60008060006105c18686610b7f565b90506001600160a01b0381166105de576000809250925050610659565b604051635581161b60e01b81526000906001600160a01b03831690635581161b9061060f90899089906004016110a4565b602060405180830381865afa15801561062c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065091906110e7565b93506001925050505b935093915050565b610669610bdf565b6106736000610c0c565b565b60006006600083600281111561058b5761058b610f90565b60015460405163831cf43d60e01b81526001600160a01b038481166004830152600092839291169063831cf43d90602401602060405180830381865afa1580156106db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ff9190611067565b90508061071f57604051635164ad9b60e11b815260040160405180910390fd5b600154604051630681320d60e51b81526001600160a01b038681166004830152600092169063d02641a090602401602060405180830381865afa15801561076a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078e9190611067565b9050600061079b86610c5c565b905081156107c857816107af82600a6111f9565b6107b99087611208565b6107c3919061121f565b6107cb565b60005b93505050505b92915050565b60408051808201909152600080825260208201526001600160e01b03198216600090815260026020819052604091829020825180840190935280549091839160ff169081111561082957610829610f90565b600281111561083a5761083a610f90565b81526020016001820154815250509050919050565b60015460405163831cf43d60e01b81526001600160a01b038581166004830152600092839291169063831cf43d90602401602060405180830381865afa15801561089d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c19190611067565b6001600160e01b031985166000908152600260208190526040808320815180830190925280549495509293909291839160ff169081111561090457610904610f90565b600281111561091557610915610f90565b815260200160018201548152505090506000600660008360000151600281111561094157610941610f90565b600281111561095257610952610f90565b8152602081019190915260400160002054905082158061097457506020820151155b15610983579250610b35915050565b600154604051630681320d60e51b81526001600160a01b038981166004830152600092169063d02641a090602401602060405180830381865afa1580156109ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f29190611067565b90506000612710846020015188610a099190611208565b610a13919061121f565b90506000610a208a610c5c565b905060008160ff16601203610a36575081610a8c565b60128260ff161015610a6957610a4d826012611241565b610a5890600a6111f9565b610a629084611208565b9050610a8c565b610a74601283611241565b610a7f90600a6111f9565b610a89908461121f565b90505b60015460408051631e34c81f60e31b815290516000926001600160a01b03169163f1a640f89160048083019260209291908290030181865afa158015610ad6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afa919061125a565b610b0590600a6111f9565b610b0f8684611208565b610b19919061121f565b9050858110610b285780610b2a565b855b985050505050505050505b9392505050565b610b44610bdf565b6001600160a01b038116610b7357604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610b7c81610c0c565b50565b6001600160a01b0380831660009081526003602090815260408083206001600160e01b03198616845290915281205490911680610b355750506001600160e01b0319166000908152600460205260409020546001600160a01b0316919050565b6000546001600160a01b031633146106735760405163118cdaa760e01b8152336004820152602401610b6a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b1790529051600091829182916001600160a01b03861691610ca2919061127d565b600060405180830381855afa9150503d8060008114610cdd576040519150601f19603f3d011682016040523d82523d6000602084013e610ce2565b606091505b5091509150818015610cf657506020815110155b15610d175780806020019051810190610d0f919061125a565b949350505050565b5060129392505050565b80356001600160e01b031981168114610d3957600080fd5b919050565b6001600160a01b0381168114610b7c57600080fd5b600080600060608486031215610d6857600080fd5b610d7184610d21565b92506020840135610d8181610d3e565b91506040840135610d9181610d3e565b809150509250925092565b803560038110610d3957600080fd5b600080600060608486031215610dc057600080fd5b610dc984610d21565b9250610dd760208501610d9c565b929592945050506040919091013590565b60008060408385031215610dfb57600080fd5b610e0483610d21565b91506020830135610e1481610d3e565b809150509250929050565b600060208284031215610e3157600080fd5b8135610b3581610d3e565b600060208284031215610e4e57600080fd5b610b3582610d9c565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215610e8257600080fd5b8335610e8d81610d3e565b9250610e9b60208501610d21565b9150604084013567ffffffffffffffff811115610eb757600080fd5b8401601f81018613610ec857600080fd5b803567ffffffffffffffff811115610ee257610ee2610e57565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610f1157610f11610e57565b604052818152828201602001881015610f2957600080fd5b816020840160208301376000602083830101528093505050509250925092565b60008060408385031215610f5c57600080fd5b8235610f6781610d3e565b946020939093013593505050565b600060208284031215610f8757600080fd5b610b3582610d21565b634e487b7160e01b600052602160045260246000fd5b60038110610fc457634e487b7160e01b600052602160045260246000fd5b9052565b6000604082019050610fdb828451610fa6565b602092830151919092015290565b600080600060608486031215610ffe57600080fd5b833561100981610d3e565b9250610dd760208501610d21565b6000806040838503121561102a57600080fd5b823561103581610d3e565b915061104360208401610d21565b90509250929050565b6040810161105a8285610fa6565b8260208301529392505050565b60006020828403121561107957600080fd5b5051919050565b60005b8381101561109b578181015183820152602001611083565b50506000910152565b63ffffffff60e01b8316815260406020820152600082518060408401526110d2816060850160208701611080565b601f01601f1916919091016060019392505050565b6000602082840312156110f957600080fd5b8151610b3581610d3e565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156106595780850481111561113957611139611104565b600184161561114757908102905b60019390931c92800261111e565b600082611164575060016107d1565b81611171575060006107d1565b81600181146111875760028114611191576111ad565b60019150506107d1565b60ff8411156111a2576111a2611104565b50506001821b6107d1565b5060208310610133831016604e8410600b84101617156111d0575081810a6107d1565b6111dd600019848461111a565b80600019048211156111f1576111f1611104565b029392505050565b6000610b3560ff841683611155565b80820281158282048414176107d1576107d1611104565b60008261123c57634e487b7160e01b600052601260045260246000fd5b500490565b60ff82811682821603908111156107d1576107d1611104565b60006020828403121561126c57600080fd5b815160ff81168114610b3557600080fd5b6000825161128f818460208701611080565b919091019291505056fea2646970667358221220a4aba537724d87f2bccfaea6ab62dbbe129ceec57a85bf28c51b09ce399e096864736f6c634300081c0033";

type FeeControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeController__factory extends ContractFactory {
  constructor(...args: FeeControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    _oracle: AddressLike,
    _maxFeeLimits: BigNumberish[],
    _minFeesInUSD: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      _oracle,
      _maxFeeLimits,
      _minFeesInUSD,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    _oracle: AddressLike,
    _maxFeeLimits: BigNumberish[],
    _minFeesInUSD: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOwner,
      _oracle,
      _maxFeeLimits,
      _minFeesInUSD,
      overrides || {}
    ) as Promise<
      FeeController & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FeeController__factory {
    return super.connect(runner) as FeeController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeControllerInterface {
    return new Interface(_abi) as FeeControllerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FeeController {
    return new Contract(address, _abi, runner) as unknown as FeeController;
  }
}
