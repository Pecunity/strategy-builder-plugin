/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FeeController,
  FeeControllerInterface,
} from "../../contracts/FeeController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_maxFeeLimits",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_minFeesInUSD",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FeePercentageExceedLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidArrayLength",
    type: "error",
  },
  {
    inputs: [],
    name: "NoOracleExist",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "enum IFeeController.FeeType",
        name: "feeType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feePercentage",
        type: "uint256",
      },
    ],
    name: "FeeConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenGetter",
        type: "address",
      },
    ],
    name: "GlobalTokenGetterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IFeeController.FeeType",
        name: "feeType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minFeeUSD",
        type: "uint256",
      },
    ],
    name: "MinFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenGetter",
        type: "address",
      },
    ],
    name: "TokenGetterSet",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_DIVISOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "_volume",
        type: "uint256",
      },
    ],
    name: "calculateFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feeInUSD",
        type: "uint256",
      },
    ],
    name: "calculateTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "functionFeeConfig",
    outputs: [
      {
        components: [
          {
            internalType: "enum IFeeController.FeeType",
            name: "feeType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "feePercentage",
            type: "uint256",
          },
        ],
        internalType: "struct IFeeController.FeeConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "_params",
        type: "bytes",
      },
    ],
    name: "getTokenForAction",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "hasOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IFeeController.FeeType",
        name: "_type",
        type: "uint8",
      },
    ],
    name: "maxFeeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IFeeController.FeeType",
        name: "_type",
        type: "uint8",
      },
    ],
    name: "minFeeInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "enum IFeeController.FeeType",
        name: "_feeType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_feePercentage",
        type: "uint256",
      },
    ],
    name: "setFunctionFeeConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_tokenGetter",
        type: "address",
      },
    ],
    name: "setGlobalTokenGetter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_tokenGetter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "setTokenGetter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "tokenGetter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516117ac3803806117ac83398101604081905261002f916103b2565b610038336102ad565b6001600160a01b03831661005f57604051633bf95ba760e01b815260040160405180910390fd5b8151600314158061007257508051600314155b1561009057604051634ec4810560e11b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b038516179055815182906000906100be576100be61043a565b6020026020010151600560008060028111156100dc576100dc610450565b60028111156100ed576100ed610450565b815260200190815260200160002081905550816001815181106101125761011261043a565b6020026020010151600560006001600281111561013157610131610450565b600281111561014257610142610450565b815260200190815260200160002081905550816002815181106101675761016761043a565b60200260200101516005600060028081111561018557610185610450565b600281111561019657610196610450565b815260200190815260200160002081905550806000815181106101bb576101bb61043a565b6020026020010151600660008060028111156101d9576101d9610450565b60028111156101ea576101ea610450565b8152602001908152602001600020819055508060018151811061020f5761020f61043a565b6020026020010151600660006001600281111561022e5761022e610450565b600281111561023f5761023f610450565b815260200190815260200160002081905550806002815181106102645761026461043a565b60200260200101516006600060028081111561028257610282610450565b600281111561029357610293610450565b815260200190815260200160002081905550505050610466565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261032457600080fd5b81516001600160401b0381111561033d5761033d6102fd565b604051600582901b90603f8201601f191681016001600160401b038111828210171561036b5761036b6102fd565b60405291825260208185018101929081018684111561038957600080fd5b6020860192505b838310156103a8578251815260209283019201610390565b5095945050505050565b6000806000606084860312156103c757600080fd5b83516001600160a01b03811681146103de57600080fd5b60208501519093506001600160401b038111156103fa57600080fd5b61040686828701610313565b604086015190935090506001600160401b0381111561042457600080fd5b61043086828701610313565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b611337806104756000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80638b33fc9911610097578063d659e5d111610066578063d659e5d114610227578063f25be75314610247578063f2fde38b1461025a578063f6d0e6401461026d57600080fd5b80638b33fc99146101e75780638da5cb5b146101fa578063aac61a1f1461020b578063caf297651461021e57600080fd5b80632630c12f116100d35780632630c12f1461016757806326bf18f71461018c57806334dcc797146101ad578063715018a6146101df57600080fd5b806278b21d146101045780630ebcbf271461011957806315d4ba4f1461012c578063180c93091461013f575b600080fd5b610117610112366004610dbb565b610280565b005b610117610127366004610e13565b61033e565b61011761013a366004610e50565b61045d565b61015261014d366004610e87565b6104f9565b60405190151581526020015b60405180910390f35b6001546001600160a01b03165b6040516001600160a01b03909116815260200161015e565b61019f61019a366004610ea4565b610573565b60405190815260200161015e565b6101c06101bb366004610ed5565b6105b2565b604080516001600160a01b03909316835290151560208301520161015e565b610117610661565b61019f6101f5366004610ea4565b610675565b6000546001600160a01b0316610174565b61019f610219366004610fb1565b61068d565b61019f61271081565b61023a610235366004610fdd565b6107d7565b60405161015e9190611030565b61019f610255366004611051565b61084f565b610117610268366004610e87565b610b3c565b61017461027b36600461107f565b610bba565b610288610c1a565b6001600160a01b03811615806102a557506001600160a01b038216155b156102c357604051633bf95ba760e01b815260040160405180910390fd5b6001600160a01b0381811660008181526003602090815260408083206001600160e01b031989168085529083529281902080546001600160a01b03191695881695861790555193845290927f3663e8364574850f7532d60f4cf1e49cdd0cef2fba915d7fc69105065077ac27910160405180910390a3505050565b610346610c1a565b6005600083600281111561035c5761035c610ff8565b600281111561036d5761036d610ff8565b81526020019081526020016000205481111561039c576040516333791c4b60e01b815260040160405180910390fd5b60405180604001604052808360028111156103b9576103b9610ff8565b815260209081018390526001600160e01b031985166000908152600291829052604090208251815491929091839160ff1990911690600190849081111561040257610402610ff8565b021790555060208201518160010155905050826001600160e01b0319167f2581c9349512cebfda9236be97ce4458f7d8bd3a3542e9f446171386da6eccb683836040516104509291906110b4565b60405180910390a2505050565b610465610c1a565b6001600160a01b03811661048c57604051633bf95ba760e01b815260040160405180910390fd5b6001600160e01b0319821660008181526004602090815260409182902080546001600160a01b0319166001600160a01b03861690811790915591519182527f87210db1bc43a1a253ff34bda9b3c3a0de6546212bc35b7ba69e64bbd34e5caa910160405180910390a25050565b60015460405163831cf43d60e01b81526001600160a01b038381166004830152600092839291169063831cf43d90602401602060405180830381865afa158015610547573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056b91906110cf565b141592915050565b60006005600083600281111561058b5761058b610ff8565b600281111561059c5761059c610ff8565b8152602001908152602001600020549050919050565b60008060006105c18686610bba565b90506001600160a01b0381166105de576000809250925050610659565b604051635581161b60e01b81526000906001600160a01b03831690635581161b9061060f908990899060040161110c565b602060405180830381865afa15801561062c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610650919061114f565b93506001925050505b935093915050565b610669610c1a565b6106736000610c74565b565b60006006600083600281111561058b5761058b610ff8565b60015460405163831cf43d60e01b81526001600160a01b038481166004830152600092839291169063831cf43d90602401602060405180830381865afa1580156106db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ff91906110cf565b90508061071f57604051635164ad9b60e11b815260040160405180910390fd5b600154604051630681320d60e51b81526001600160a01b038681166004830152600092169063d02641a090602401602060405180830381865afa15801561076a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078e91906110cf565b9050600061079b86610cc4565b905081156107c857816107af82600a611261565b6107b99087611270565b6107c39190611287565b6107cb565b60005b93505050505b92915050565b60408051808201909152600080825260208201526001600160e01b03198216600090815260026020819052604091829020825180840190935280549091839160ff169081111561082957610829610ff8565b600281111561083a5761083a610ff8565b81526020016001820154815250509050919050565b60015460405163831cf43d60e01b81526001600160a01b038581166004830152600092839291169063831cf43d90602401602060405180830381865afa15801561089d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c191906110cf565b6001600160e01b031985166000908152600260208190526040808320815180830190925280549495509293909291839160ff169081111561090457610904610ff8565b600281111561091557610915610ff8565b815260200160018201548152505090506000600660008360000151600281111561094157610941610ff8565b600281111561095257610952610ff8565b8152602081019190915260400160002054905082158061097457506020820151155b15610983579250610b35915050565b600154604051630681320d60e51b81526001600160a01b038981166004830152600092169063d02641a090602401602060405180830381865afa1580156109ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f291906110cf565b90506000612710846020015188610a099190611270565b610a139190611287565b90506000610a208a610cc4565b905060008160ff16601203610a36575081610a8c565b60128260ff161015610a6957610a4d8260126112a9565b610a5890600a611261565b610a629084611270565b9050610a8c565b610a746012836112a9565b610a7f90600a611261565b610a899084611287565b90505b60015460408051631e34c81f60e31b815290516000926001600160a01b03169163f1a640f89160048083019260209291908290030181865afa158015610ad6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afa91906112c2565b610b0590600a611261565b610b0f8684611270565b610b199190611287565b9050858110610b285780610b2a565b855b985050505050505050505b9392505050565b610b44610c1a565b6001600160a01b038116610bae5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610bb781610c74565b50565b6001600160a01b0380831660009081526003602090815260408083206001600160e01b03198616845290915281205490911680610b355750506001600160e01b0319166000908152600460205260409020546001600160a01b0316919050565b6000546001600160a01b031633146106735760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ba5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b1790529051600091829182916001600160a01b03861691610d0a91906112e5565b600060405180830381855afa9150503d8060008114610d45576040519150601f19603f3d011682016040523d82523d6000602084013e610d4a565b606091505b5091509150818015610d5e57506020815110155b15610d7f5780806020019051810190610d7791906112c2565b949350505050565b5060129392505050565b80356001600160e01b031981168114610da157600080fd5b919050565b6001600160a01b0381168114610bb757600080fd5b600080600060608486031215610dd057600080fd5b610dd984610d89565b92506020840135610de981610da6565b91506040840135610df981610da6565b809150509250925092565b803560038110610da157600080fd5b600080600060608486031215610e2857600080fd5b610e3184610d89565b9250610e3f60208501610e04565b929592945050506040919091013590565b60008060408385031215610e6357600080fd5b610e6c83610d89565b91506020830135610e7c81610da6565b809150509250929050565b600060208284031215610e9957600080fd5b8135610b3581610da6565b600060208284031215610eb657600080fd5b610b3582610e04565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215610eea57600080fd5b8335610ef581610da6565b9250610f0360208501610d89565b9150604084013567ffffffffffffffff811115610f1f57600080fd5b8401601f81018613610f3057600080fd5b803567ffffffffffffffff811115610f4a57610f4a610ebf565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610f7957610f79610ebf565b604052818152828201602001881015610f9157600080fd5b816020840160208301376000602083830101528093505050509250925092565b60008060408385031215610fc457600080fd5b8235610fcf81610da6565b946020939093013593505050565b600060208284031215610fef57600080fd5b610b3582610d89565b634e487b7160e01b600052602160045260246000fd5b6003811061102c57634e487b7160e01b600052602160045260246000fd5b9052565b600060408201905061104382845161100e565b602092830151919092015290565b60008060006060848603121561106657600080fd5b833561107181610da6565b9250610e3f60208501610d89565b6000806040838503121561109257600080fd5b823561109d81610da6565b91506110ab60208401610d89565b90509250929050565b604081016110c2828561100e565b8260208301529392505050565b6000602082840312156110e157600080fd5b5051919050565b60005b838110156111035781810151838201526020016110eb565b50506000910152565b63ffffffff60e01b83168152604060208201526000825180604084015261113a8160608501602087016110e8565b601f01601f1916919091016060019392505050565b60006020828403121561116157600080fd5b8151610b3581610da6565b634e487b7160e01b600052601160045260246000fd5b6001815b6001841115610659578085048111156111a1576111a161116c565b60018416156111af57908102905b60019390931c928002611186565b6000826111cc575060016107d1565b816111d9575060006107d1565b81600181146111ef57600281146111f957611215565b60019150506107d1565b60ff84111561120a5761120a61116c565b50506001821b6107d1565b5060208310610133831016604e8410600b8410161715611238575081810a6107d1565b6112456000198484611182565b80600019048211156112595761125961116c565b029392505050565b6000610b3560ff8416836111bd565b80820281158282048414176107d1576107d161116c565b6000826112a457634e487b7160e01b600052601260045260246000fd5b500490565b60ff82811682821603908111156107d1576107d161116c565b6000602082840312156112d457600080fd5b815160ff81168114610b3557600080fd5b600082516112f78184602087016110e8565b919091019291505056fea2646970667358221220c329232cd877849cf316f5da9078188d54cbb1f325c39f49395f80b291d5fdac64736f6c634300081c0033";

type FeeControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeController__factory extends ContractFactory {
  constructor(...args: FeeControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _oracle: AddressLike,
    _maxFeeLimits: BigNumberish[],
    _minFeesInUSD: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _oracle,
      _maxFeeLimits,
      _minFeesInUSD,
      overrides || {}
    );
  }
  override deploy(
    _oracle: AddressLike,
    _maxFeeLimits: BigNumberish[],
    _minFeesInUSD: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _oracle,
      _maxFeeLimits,
      _minFeesInUSD,
      overrides || {}
    ) as Promise<
      FeeController & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FeeController__factory {
    return super.connect(runner) as FeeController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeControllerInterface {
    return new Interface(_abi) as FeeControllerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FeeController {
    return new Contract(address, _abi, runner) as unknown as FeeController;
  }
}
