/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FeeController,
  FeeControllerInterface,
} from "../../contracts/FeeController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_maxFeeLimits",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_minFeesInUSD",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FeePercentageExceedLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidArrayLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenWithPriceOfZero",
    type: "error",
  },
  {
    inputs: [],
    name: "NoOracleExist",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "enum IFeeController.FeeType",
        name: "feeType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feePercentage",
        type: "uint256",
      },
    ],
    name: "FeeConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenGetter",
        type: "address",
      },
    ],
    name: "GlobalTokenGetterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IFeeController.FeeType",
        name: "feeType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minFeeUSD",
        type: "uint256",
      },
    ],
    name: "MinFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenGetter",
        type: "address",
      },
    ],
    name: "TokenGetterSet",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_DIVISOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "_volume",
        type: "uint256",
      },
    ],
    name: "calculateFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feeInUSD",
        type: "uint256",
      },
    ],
    name: "calculateTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "functionFeeConfig",
    outputs: [
      {
        components: [
          {
            internalType: "enum IFeeController.FeeType",
            name: "feeType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "feePercentage",
            type: "uint256",
          },
        ],
        internalType: "struct IFeeController.FeeConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "_params",
        type: "bytes",
      },
    ],
    name: "getTokenForAction",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "hasOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IFeeController.FeeType",
        name: "_type",
        type: "uint8",
      },
    ],
    name: "maxFeeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IFeeController.FeeType",
        name: "_type",
        type: "uint8",
      },
    ],
    name: "minFeeInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "enum IFeeController.FeeType",
        name: "_feeType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_feePercentage",
        type: "uint256",
      },
    ],
    name: "setFunctionFeeConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_tokenGetter",
        type: "address",
      },
    ],
    name: "setGlobalTokenGetter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_tokenGetter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "setTokenGetter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "tokenGetter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516124d03803806124d083398181016040528101906100329190610620565b61004e61004361035360201b60201c565b61035b60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036100b4576040517f3bf95ba700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600382511415806100c757506003815114155b156100fe576040517f9d89020a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600081518110610153576101526106ab565b5b602002602001015160056000806002811115610172576101716106da565b5b6002811115610184576101836106da565b5b815260200190815260200160002081905550816001815181106101aa576101a96106ab565b5b602002602001015160056000600160028111156101ca576101c96106da565b5b60028111156101dc576101db6106da565b5b81526020019081526020016000208190555081600281518110610202576102016106ab565b5b602002602001015160056000600280811115610221576102206106da565b5b6002811115610233576102326106da565b5b81526020019081526020016000208190555080600081518110610259576102586106ab565b5b602002602001015160066000806002811115610278576102776106da565b5b600281111561028a576102896106da565b5b815260200190815260200160002081905550806001815181106102b0576102af6106ab565b5b602002602001015160066000600160028111156102d0576102cf6106da565b5b60028111156102e2576102e16106da565b5b81526020019081526020016000208190555080600281518110610308576103076106ab565b5b602002602001015160066000600280811115610327576103266106da565b5b6002811115610339576103386106da565b5b815260200190815260200160002081905550505050610709565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061045e82610433565b9050919050565b61046e81610453565b811461047957600080fd5b50565b60008151905061048b81610465565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104df82610496565b810181811067ffffffffffffffff821117156104fe576104fd6104a7565b5b80604052505050565b600061051161041f565b905061051d82826104d6565b919050565b600067ffffffffffffffff82111561053d5761053c6104a7565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b61056681610553565b811461057157600080fd5b50565b6000815190506105838161055d565b92915050565b600061059c61059784610522565b610507565b905080838252602082019050602084028301858111156105bf576105be61054e565b5b835b818110156105e857806105d48882610574565b8452602084019350506020810190506105c1565b5050509392505050565b600082601f83011261060757610606610491565b5b8151610617848260208601610589565b91505092915050565b60008060006060848603121561063957610638610429565b5b60006106478682870161047c565b935050602084015167ffffffffffffffff8111156106685761066761042e565b5b610674868287016105f2565b925050604084015167ffffffffffffffff8111156106955761069461042e565b5b6106a1868287016105f2565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611db8806107186000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80638b33fc9911610097578063d659e5d111610066578063d659e5d1146102ad578063f25be753146102dd578063f2fde38b1461030d578063f6d0e64014610329576100ff565b80638b33fc99146102115780638da5cb5b14610241578063aac61a1f1461025f578063caf297651461028f576100ff565b80632630c12f116100d35780632630c12f1461018857806326bf18f7146101a657806334dcc797146101d6578063715018a614610207576100ff565b806278b21d146101045780630ebcbf271461012057806315d4ba4f1461013c578063180c930914610158575b600080fd5b61011e600480360381019061011991906113f2565b610359565b005b61013a600480360381019061013591906114a0565b610537565b005b610156600480360381019061015191906114f3565b6106bb565b005b610172600480360381019061016d9190611533565b61080c565b60405161017f919061157b565b60405180910390f35b6101906108b7565b60405161019d91906115a5565b60405180910390f35b6101c060048036038101906101bb91906115c0565b6108e1565b6040516101cd91906115fc565b60405180910390f35b6101f060048036038101906101eb919061175d565b610922565b6040516101fe9291906117cc565b60405180910390f35b61020f610a06565b005b61022b600480360381019061022691906115c0565b610a1a565b60405161023891906115fc565b60405180910390f35b610249610a5b565b60405161025691906115a5565b60405180910390f35b610279600480360381019061027491906117f5565b610a84565b60405161028691906115fc565b60405180910390f35b610297610c64565b6040516102a491906115fc565b60405180910390f35b6102c760048036038101906102c29190611835565b610c6a565b6040516102d49190611917565b60405180910390f35b6102f760048036038101906102f29190611932565b610d1a565b60405161030491906115fc565b60405180910390f35b61032760048036038101906103229190611533565b610fc8565b005b610343600480360381019061033e9190611985565b61104b565b60405161035091906115a5565b60405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806103c05750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b156103f7576040517f3bf95ba700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168173ffffffffffffffffffffffffffffffffffffffff167f3663e8364574850f7532d60f4cf1e49cdd0cef2fba915d7fc69105065077ac278460405161052a91906115a5565b60405180910390a3505050565b6005600083600281111561054e5761054d611862565b5b60028111156105605761055f611862565b5b8152602001908152602001600020548111156105a8576040517f33791c4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808360028111156105c6576105c5611862565b5b81526020018281525060026000857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600281111561064b5761064a611862565b5b021790555060208201518160010155905050827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f2581c9349512cebfda9236be97ce4458f7d8bd3a3542e9f446171386da6eccb683836040516106ae9291906119d4565b60405180910390a2505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610721576040517f3bf95ba700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060046000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f87210db1bc43a1a253ff34bda9b3c3a0de6546212bc35b7ba69e64bbd34e5caa8260405161080091906115a5565b60405180910390a25050565b60008060001b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663831cf43d846040518263ffffffff1660e01b815260040161086d91906115a5565b602060405180830381865afa15801561088a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ae9190611a33565b14159050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560008360028111156108fa576108f9611862565b5b600281111561090c5761090b611862565b5b8152602001908152602001600020549050919050565b6000806000610931868661104b565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109745760008092509250506109fe565b60008173ffffffffffffffffffffffffffffffffffffffff16635581161b87876040518363ffffffff1660e01b81526004016109b1929190611aee565b602060405180830381865afa1580156109ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f29190611b33565b90508060019350935050505b935093915050565b610a0e6111b2565b610a186000611230565b565b600060066000836002811115610a3357610a32611862565b5b6002811115610a4557610a44611862565b5b8152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663831cf43d856040518263ffffffff1660e01b8152600401610ae291906115a5565b602060405180830381865afa158015610aff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b239190611a33565b90506000801b8103610b61576040517fa2c95b3600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d02641a0866040518263ffffffff1660e01b8152600401610bbe91906115a5565b602060405180830381865afa158015610bdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bff9190611b75565b905060008103610c3b576040517fcb22704c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80670de0b6b3a764000085610c509190611bd1565b610c5a9190611c42565b9250505092915050565b61271081565b610c726112fc565b60026000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000206040518060400160405290816000820160009054906101000a900460ff166002811115610cf357610cf2611862565b5b6002811115610d0557610d04611862565b5b81526020016001820154815250509050919050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663831cf43d866040518263ffffffff1660e01b8152600401610d7891906115a5565b602060405180830381865afa158015610d95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db99190611a33565b9050600060026000867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000206040518060400160405290816000820160009054906101000a900460ff166002811115610e3e57610e3d611862565b5b6002811115610e5057610e4f611862565b5b8152602001600182015481525050905060006006600083600001516002811115610e7d57610e7c611862565b5b6002811115610e8f57610e8e611862565b5b81526020019081526020016000205490506000801b831480610eb5575060008260200151145b15610ec557809350505050610fc1565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d02641a0896040518263ffffffff1660e01b8152600401610f2291906115a5565b602060405180830381865afa158015610f3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f639190611b75565b90506000612710846020015188610f7a9190611bd1565b610f849190611c42565b90506000670de0b6b3a76400008383610f9d9190611bd1565b610fa79190611c42565b9050838110610fb65780610fb8565b835b96505050505050505b9392505050565b610fd06111b2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361103f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103690611cf6565b60405180910390fd5b61104881611230565b50565b600080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111a85760046000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b8091505092915050565b6111ba6112f4565b73ffffffffffffffffffffffffffffffffffffffff166111d8610a5b565b73ffffffffffffffffffffffffffffffffffffffff161461122e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122590611d62565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60405180604001604052806000600281111561131b5761131a611862565b5b8152602001600081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113718161133c565b811461137c57600080fd5b50565b60008135905061138e81611368565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113bf82611394565b9050919050565b6113cf816113b4565b81146113da57600080fd5b50565b6000813590506113ec816113c6565b92915050565b60008060006060848603121561140b5761140a611332565b5b60006114198682870161137f565b935050602061142a868287016113dd565b925050604061143b868287016113dd565b9150509250925092565b6003811061145257600080fd5b50565b60008135905061146481611445565b92915050565b6000819050919050565b61147d8161146a565b811461148857600080fd5b50565b60008135905061149a81611474565b92915050565b6000806000606084860312156114b9576114b8611332565b5b60006114c78682870161137f565b93505060206114d886828701611455565b92505060406114e98682870161148b565b9150509250925092565b6000806040838503121561150a57611509611332565b5b60006115188582860161137f565b9250506020611529858286016113dd565b9150509250929050565b60006020828403121561154957611548611332565b5b6000611557848285016113dd565b91505092915050565b60008115159050919050565b61157581611560565b82525050565b6000602082019050611590600083018461156c565b92915050565b61159f816113b4565b82525050565b60006020820190506115ba6000830184611596565b92915050565b6000602082840312156115d6576115d5611332565b5b60006115e484828501611455565b91505092915050565b6115f68161146a565b82525050565b600060208201905061161160008301846115ed565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61166a82611621565b810181811067ffffffffffffffff8211171561168957611688611632565b5b80604052505050565b600061169c611328565b90506116a88282611661565b919050565b600067ffffffffffffffff8211156116c8576116c7611632565b5b6116d182611621565b9050602081019050919050565b82818337600083830152505050565b60006117006116fb846116ad565b611692565b90508281526020810184848401111561171c5761171b61161c565b5b6117278482856116de565b509392505050565b600082601f83011261174457611743611617565b5b81356117548482602086016116ed565b91505092915050565b60008060006060848603121561177657611775611332565b5b6000611784868287016113dd565b93505060206117958682870161137f565b925050604084013567ffffffffffffffff8111156117b6576117b5611337565b5b6117c28682870161172f565b9150509250925092565b60006040820190506117e16000830185611596565b6117ee602083018461156c565b9392505050565b6000806040838503121561180c5761180b611332565b5b600061181a858286016113dd565b925050602061182b8582860161148b565b9150509250929050565b60006020828403121561184b5761184a611332565b5b60006118598482850161137f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106118a2576118a1611862565b5b50565b60008190506118b382611891565b919050565b60006118c3826118a5565b9050919050565b6118d3816118b8565b82525050565b6118e28161146a565b82525050565b6040820160008201516118fe60008501826118ca565b50602082015161191160208501826118d9565b50505050565b600060408201905061192c60008301846118e8565b92915050565b60008060006060848603121561194b5761194a611332565b5b6000611959868287016113dd565b935050602061196a8682870161137f565b925050604061197b8682870161148b565b9150509250925092565b6000806040838503121561199c5761199b611332565b5b60006119aa858286016113dd565b92505060206119bb8582860161137f565b9150509250929050565b6119ce816118b8565b82525050565b60006040820190506119e960008301856119c5565b6119f660208301846115ed565b9392505050565b6000819050919050565b611a10816119fd565b8114611a1b57600080fd5b50565b600081519050611a2d81611a07565b92915050565b600060208284031215611a4957611a48611332565b5b6000611a5784828501611a1e565b91505092915050565b611a698161133c565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611aa9578082015181840152602081019050611a8e565b60008484015250505050565b6000611ac082611a6f565b611aca8185611a7a565b9350611ada818560208601611a8b565b611ae381611621565b840191505092915050565b6000604082019050611b036000830185611a60565b8181036020830152611b158184611ab5565b90509392505050565b600081519050611b2d816113c6565b92915050565b600060208284031215611b4957611b48611332565b5b6000611b5784828501611b1e565b91505092915050565b600081519050611b6f81611474565b92915050565b600060208284031215611b8b57611b8a611332565b5b6000611b9984828501611b60565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bdc8261146a565b9150611be78361146a565b9250828202611bf58161146a565b91508282048414831517611c0c57611c0b611ba2565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611c4d8261146a565b9150611c588361146a565b925082611c6857611c67611c13565b5b828204905092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611ce0602683611c73565b9150611ceb82611c84565b604082019050919050565b60006020820190508181036000830152611d0f81611cd3565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611d4c602083611c73565b9150611d5782611d16565b602082019050919050565b60006020820190508181036000830152611d7b81611d3f565b905091905056fea26469706673582212207867eb8121c3357fc2b75566c6c3e15c38565bfd84b81eb0b473bc7f3ed786a164736f6c634300081c0033";

type FeeControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeController__factory extends ContractFactory {
  constructor(...args: FeeControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _oracle: AddressLike,
    _maxFeeLimits: BigNumberish[],
    _minFeesInUSD: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _oracle,
      _maxFeeLimits,
      _minFeesInUSD,
      overrides || {}
    );
  }
  override deploy(
    _oracle: AddressLike,
    _maxFeeLimits: BigNumberish[],
    _minFeesInUSD: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _oracle,
      _maxFeeLimits,
      _minFeesInUSD,
      overrides || {}
    ) as Promise<
      FeeController & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FeeController__factory {
    return super.connect(runner) as FeeController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeControllerInterface {
    return new Interface(_abi) as FeeControllerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FeeController {
    return new Contract(address, _abi, runner) as unknown as FeeController;
  }
}
