/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  StrategyBuilderPlugin,
  StrategyBuilderPluginInterface,
} from "../../contracts/StrategyBuilderPlugin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeController",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeHandler",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "AutomationAlreadyExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "condition",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "AutomationNotExecutable",
    type: "error",
  },
  {
    inputs: [],
    name: "AutomationNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "ChangeStrategyInConditionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "FeeExceedMaxFee",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAction",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "NotContractCaller",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
    ],
    name: "NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentTokenNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyAlreadyExist",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyIsInUse",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "condition",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "UpdateConditionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "changeAutomationInConditionFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "parameter",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum IStrategyBuilderPlugin.ActionType",
            name: "actionType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Action",
        name: "action",
        type: "tuple",
      },
    ],
    name: "ActionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "conditionAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "result1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "result0",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Condition",
        name: "condition",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxFeeAmount",
        type: "uint256",
      },
    ],
    name: "AutomationCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
    ],
    name: "AutomationDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInToken",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInUSD",
        type: "uint256",
      },
    ],
    name: "AutomationExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "conditionAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "id",
                    type: "uint32",
                  },
                  {
                    internalType: "uint8",
                    name: "result1",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "result0",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Condition",
                name: "condition",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "selector",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "parameter",
                    type: "bytes",
                  },
                  {
                    internalType: "address",
                    name: "target",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderPlugin.ActionType",
                    name: "actionType",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Action[]",
                name: "actions",
                type: "tuple[]",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
            name: "steps",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Strategy",
        name: "strategy",
        type: "tuple",
      },
    ],
    name: "StrategyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
    ],
    name: "StrategyDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
    ],
    name: "StrategyExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "stepId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "parameter",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum IStrategyBuilderPlugin.ActionType",
            name: "actionType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Action[]",
        name: "actions",
        type: "tuple[]",
      },
    ],
    name: "StrategyStepExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "AUTHOR",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "automation",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "conditionAddress",
                type: "address",
              },
              {
                internalType: "uint32",
                name: "id",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "result1",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "result0",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Condition",
            name: "condition",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "strategyId",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxFeeAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Automation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxFeeInUSD",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "conditionAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "result1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "result0",
            type: "uint8",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "createAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "conditionAddress",
                type: "address",
              },
              {
                internalType: "uint32",
                name: "id",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "result1",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "result0",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Condition",
            name: "condition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "selector",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "parameter",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum IStrategyBuilderPlugin.ActionType",
                name: "actionType",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Action[]",
            name: "actions",
            type: "tuple[]",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
        name: "steps",
        type: "tuple[]",
      },
    ],
    name: "createStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "deleteAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "deleteStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "beneficary",
        type: "address",
      },
    ],
    name: "executeAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "executeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeController",
    outputs: [
      {
        internalType: "contract IFeeController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeHandler",
    outputs: [
      {
        internalType: "contract IFeeHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "getStorageId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onInstall",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onUninstall",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pluginManifest",
    outputs: [
      {
        components: [
          {
            internalType: "bytes4[]",
            name: "interfaceIds",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "dependencyInterfaceIds",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "executionFunctions",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "permittedExecutionSelectors",
            type: "bytes4[]",
          },
          {
            internalType: "bool",
            name: "permitAnyExternalAddress",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "canSpendNativeToken",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "address",
                name: "externalAddress",
                type: "address",
              },
              {
                internalType: "bool",
                name: "permitAnySelector",
                type: "bool",
              },
              {
                internalType: "bytes4[]",
                name: "selectors",
                type: "bytes4[]",
              },
            ],
            internalType: "struct ManifestExternalCallPermission[]",
            name: "permittedExternalCalls",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "userOpValidationFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "runtimeValidationFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "preUserOpValidationHooks",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "preRuntimeValidationHooks",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "preExecHook",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "postExecHook",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestExecutionHook[]",
            name: "executionHooks",
            type: "tuple[]",
          },
        ],
        internalType: "struct PluginManifest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pluginMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "string",
            name: "author",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "functionSelector",
                type: "bytes4",
              },
              {
                internalType: "string",
                name: "permissionDescription",
                type: "string",
              },
            ],
            internalType: "struct SelectorPermission[]",
            name: "permissionDescriptors",
            type: "tuple[]",
          },
        ],
        internalType: "struct PluginMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "preExecHookData",
        type: "bytes",
      },
    ],
    name: "postExecutionHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "preExecutionHook",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "preRuntimeValidationHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
    ],
    name: "preUserOpValidationHook",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "runtimeValidationFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "strategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "conditionAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "id",
                    type: "uint32",
                  },
                  {
                    internalType: "uint8",
                    name: "result1",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "result0",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Condition",
                name: "condition",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "selector",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "parameter",
                    type: "bytes",
                  },
                  {
                    internalType: "address",
                    name: "target",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderPlugin.ActionType",
                    name: "actionType",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Action[]",
                name: "actions",
                type: "tuple[]",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
            name: "steps",
            type: "tuple[]",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
    ],
    name: "userOpValidationFunction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type StrategyBuilderPluginConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategyBuilderPluginConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategyBuilderPlugin__factory extends ContractFactory {
  constructor(...args: StrategyBuilderPluginConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeController: AddressLike,
    _feeHandler: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _feeController,
      _feeHandler,
      overrides || {}
    );
  }
  override deploy(
    _feeController: AddressLike,
    _feeHandler: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _feeController,
      _feeHandler,
      overrides || {}
    ) as Promise<
      StrategyBuilderPlugin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): StrategyBuilderPlugin__factory {
    return super.connect(runner) as StrategyBuilderPlugin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyBuilderPluginInterface {
    return new Interface(_abi) as StrategyBuilderPluginInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StrategyBuilderPlugin {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StrategyBuilderPlugin;
  }
}
