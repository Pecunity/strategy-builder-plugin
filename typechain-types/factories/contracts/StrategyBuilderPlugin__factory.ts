/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  StrategyBuilderPlugin,
  StrategyBuilderPluginInterface,
} from "../../contracts/StrategyBuilderPlugin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeController",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeHandler",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "AutomationAlreadyExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "condition",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "AutomationNotExecutable",
    type: "error",
  },
  {
    inputs: [],
    name: "AutomationNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "ChangeStrategyInConditionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "FeeExceedMaxFee",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAction",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidActionTarget",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCondition",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidConditionAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNextStepIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "NotContractCaller",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
    ],
    name: "NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentTokenNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "PluginExecutionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyAlreadyExist",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyIsInUse",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "condition",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "UpdateConditionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "changeAutomationInConditionFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "parameter",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum IStrategyBuilderPlugin.ActionType",
            name: "actionType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Action",
        name: "action",
        type: "tuple",
      },
    ],
    name: "ActionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "conditionAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "result1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "result0",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Condition",
        name: "condition",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxFeeAmount",
        type: "uint256",
      },
    ],
    name: "AutomationCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
    ],
    name: "AutomationDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInToken",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInUSD",
        type: "uint256",
      },
    ],
    name: "AutomationExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "conditionAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "id",
                    type: "uint32",
                  },
                  {
                    internalType: "uint8",
                    name: "result1",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "result0",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Condition",
                name: "condition",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "selector",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "parameter",
                    type: "bytes",
                  },
                  {
                    internalType: "address",
                    name: "target",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderPlugin.ActionType",
                    name: "actionType",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Action[]",
                name: "actions",
                type: "tuple[]",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
            name: "steps",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Strategy",
        name: "strategy",
        type: "tuple",
      },
    ],
    name: "StrategyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
    ],
    name: "StrategyDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
    ],
    name: "StrategyExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "stepId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "parameter",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum IStrategyBuilderPlugin.ActionType",
            name: "actionType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Action[]",
        name: "actions",
        type: "tuple[]",
      },
    ],
    name: "StrategyStepExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "AUTHOR",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "automation",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "conditionAddress",
                type: "address",
              },
              {
                internalType: "uint32",
                name: "id",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "result1",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "result0",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Condition",
            name: "condition",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "strategyId",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxFeeAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Automation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxFeeInUSD",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "conditionAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "result1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "result0",
            type: "uint8",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "createAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "conditionAddress",
                type: "address",
              },
              {
                internalType: "uint32",
                name: "id",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "result1",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "result0",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Condition",
            name: "condition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "selector",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "parameter",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum IStrategyBuilderPlugin.ActionType",
                name: "actionType",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Action[]",
            name: "actions",
            type: "tuple[]",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
        name: "steps",
        type: "tuple[]",
      },
    ],
    name: "createStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "deleteAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "deleteStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "beneficary",
        type: "address",
      },
    ],
    name: "executeAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "executeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeController",
    outputs: [
      {
        internalType: "contract IFeeController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeHandler",
    outputs: [
      {
        internalType: "contract IFeeHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "getStorageId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onInstall",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onUninstall",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pluginManifest",
    outputs: [
      {
        components: [
          {
            internalType: "bytes4[]",
            name: "interfaceIds",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "dependencyInterfaceIds",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "executionFunctions",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "permittedExecutionSelectors",
            type: "bytes4[]",
          },
          {
            internalType: "bool",
            name: "permitAnyExternalAddress",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "canSpendNativeToken",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "address",
                name: "externalAddress",
                type: "address",
              },
              {
                internalType: "bool",
                name: "permitAnySelector",
                type: "bool",
              },
              {
                internalType: "bytes4[]",
                name: "selectors",
                type: "bytes4[]",
              },
            ],
            internalType: "struct ManifestExternalCallPermission[]",
            name: "permittedExternalCalls",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "userOpValidationFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "runtimeValidationFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "preUserOpValidationHooks",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "preRuntimeValidationHooks",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "preExecHook",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "postExecHook",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestExecutionHook[]",
            name: "executionHooks",
            type: "tuple[]",
          },
        ],
        internalType: "struct PluginManifest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pluginMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "string",
            name: "author",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "functionSelector",
                type: "bytes4",
              },
              {
                internalType: "string",
                name: "permissionDescription",
                type: "string",
              },
            ],
            internalType: "struct SelectorPermission[]",
            name: "permissionDescriptors",
            type: "tuple[]",
          },
        ],
        internalType: "struct PluginMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "preExecHookData",
        type: "bytes",
      },
    ],
    name: "postExecutionHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "preExecutionHook",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "preRuntimeValidationHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
    ],
    name: "preUserOpValidationHook",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "runtimeValidationFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "strategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "conditionAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "id",
                    type: "uint32",
                  },
                  {
                    internalType: "uint8",
                    name: "result1",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "result0",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Condition",
                name: "condition",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "selector",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "parameter",
                    type: "bytes",
                  },
                  {
                    internalType: "address",
                    name: "target",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderPlugin.ActionType",
                    name: "actionType",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Action[]",
                name: "actions",
                type: "tuple[]",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
            name: "steps",
            type: "tuple[]",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
    ],
    name: "userOpValidationFunction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051614d18380380614d1883398101604081905261002f91610067565b60016000556001600160a01b039182166080521660a05261009a565b80516001600160a01b038116811461006257600080fd5b919050565b6000806040838503121561007a57600080fd5b6100838361004b565b91506100916020840161004b565b90509250929050565b60805160a051614c1a6100fe6000396000818161028001528181611de901528181612694015261283401526000818161030501528181611d550152818161260b01528181612df501528181612f170152818161307101526130fc0152614c1a6000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80636d61fe70116100de578063af87348311610097578063c776313011610071578063c7763130146103dc578063d7ec3598146103f1578063d855198a14610404578063ffa1ad741461042457600080fd5b8063af87348314610339578063ba542eae146103c9578063bfd151c11461022d57600080fd5b80636d61fe701461032757806388e18ce4146103395780638a91b0e3146103275780639478a77f1461035a578063a3f4df7e1461036d578063a7be85c6146103a357600080fd5b80633bd797b7116101305780633bd797b7146102685780633c93adee1461027b57806342ab2be1146102ba57806346d60eb2146102cd57806358949453146102ed5780636999b3771461030057600080fd5b806301ffc9a71461017857806305fe4172146101a057806308fdca32146101b55780630c7ecd841461022d5780631128186d14610240578063118a538914610253575b600080fd5b61018b6101863660046135d9565b610448565b60405190151581526020015b60405180910390f35b6101b36101ae36600461360d565b61047f565b005b6101c86101c336600461364a565b6104d7565b60408051825180516001600160a01b03908116835260208083015163ffffffff908116828601528386015160ff908116868801526060948501511684860152908601511660808401529284015190921660a082015291015160c082015260e001610197565b6101b361023b3660046136d3565b6105bc565b6101b361024e366004613745565b6105ee565b61025b610617565b60405161019791906137e9565b6101b36102763660046138ce565b6106e3565b6102a27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610197565b6101b36102c836600461360d565b610945565b6102e06102db3660046136d3565b6109a7565b604051610197919061393f565b6101b36102fb366004613952565b6109d2565b6102a27f000000000000000000000000000000000000000000000000000000000000000081565b6101b36103353660046139e8565b5050565b61034c610347366004613a29565b610cbb565b604051908152602001610197565b6101b3610368366004613a88565b610ce5565b6102e06040518060400160405280601781526020017629ba3930ba32b3bc90213ab4b63232b91028363ab3b4b760491b81525081565b6102e06040518060400160405280600781526020016633426c6f636b7360c81b81525081565b6101b36103d736600461360d565b610f31565b6103e46112aa565b6040516101979190613c9f565b61034c6103ff36600461364a565b611809565b61041761041236600461364a565b61185d565b6040516101979190613ec2565b6102e060405180604001604052806005815260200164312e312e3160d81b81525081565b60006001600160e01b0319821663f23b1ed760e01b148061047957506301ffc9a760e01b6001600160e01b03198316145b92915050565b338160006004816104908585611809565b81526020810191909152604001600020546001600160a01b0316036104c857604051630cc8721760e31b815260040160405180910390fd5b6104d23384611aae565b505050565b604080516101008101825260006080820181815260a0830182905260c0830182905260e083018290528252602082018190529181018290526060810191909152600460006105258585611809565b8152602080820192909252604090810160002081516101008101835281546001600160a01b038082166080840190815263ffffffff600160a01b8404811660a086015260ff600160c01b8504811660c0870152600160c81b90940490931660e08501528352600184015491821695830195909552640100000000900490931691830191909152600201546060820152905092915050565b6000356001600160e01b031916856040516384b9b37960e01b81526004016105e5929190613f8c565b60405180910390fd5b6000356001600160e01b031916836040516384b9b37960e01b81526004016105e5929190613f8c565b6106426040518060800160405280606081526020016060815260200160608152602001606081525090565b61066d6040518060800160405280606081526020016060815260200160608152602001606081525090565b604080518082018252601781527629ba3930ba32b3bc90213ab4b63232b91028363ab3b4b760491b602080830191909152908352815180830183526005815264312e312e3160d81b818301528382015281518083018352600781526633426c6f636b7360c81b9181019190915290820152919050565b338560006004816106f48585611809565b81526020810191909152604001600020546001600160a01b03161461072c57604051634dd7513760e11b815260040160405180910390fd5b33866001600061073c8484611809565b81526020019081526020016000206001018054905060000361077157604051635737b5dd60e01b815260040160405180910390fd5b61077a87611d33565b61079161078c368790038701876140e3565b611e7a565b6107ba336107a260208801886140ff565b6107b26040890160208a0161360d565b8c6001611f5b565b60006107c6338b611809565b90506000600460006107d8338e611809565b81526020810191909152604001600020905086816107f6828261411c565b50506001810180546001600160a01b038b16640100000000026001600160c01b031990911663ffffffff8d1617179055600281018890556000610839338c611809565b9050600260008281526020019081526020016000208c90806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff160217905550600160026000838152602001908152602001600020805490506108bd91906141e7565b6003600085815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550336001600160a01b03167fdb9e062b56198be71327d2a755449c3fe38502eff5c81468ebda215c5e3ffcea8d8d8b8e8e60405161092f9594939291906141fa565b60405180910390a2505050505050505050505050565b3381600160006109558484611809565b81526020019081526020016000206001018054905060000361098a57604051635737b5dd60e01b815260040160405180910390fd5b610992612136565b61099c338461218f565b506104d26001600055565b60606000356001600160e01b031916866040516384b9b37960e01b81526004016105e5929190613f8c565b33846000600160006109e48585611809565b81526020810191909152604001600020600101541115610a175760405163634f694f60e11b815260040160405180910390fd5b610a29610a248486614471565b6121ea565b600060016000610a39338a611809565b81526020810191909152604001600090812080546001600160a01b0319166001600160a01b03891617815591505b84811015610c6c576000868683818110610a8357610a836144e1565b9050602002810190610a9591906144f7565b610a9e90614517565b8051519091506001600160a01b031615610ad5578051610abd90611e7a565b80518051602090910151610ad59133918c6001612222565b6001838101805491820181556000908152602080822084518051600290950290910180549282015160408301516060909301516001600160a01b039096166001600160c01b031990941693909317600160a01b63ffffffff909416939093029290921761ffff60c01b1916600160c01b60ff9283160260ff60c81b191617600160c81b91909416029290921782555b826020015151811015610c6157610b9783602001518281518110610b8a57610b8a6144e1565b60200260200101516123f4565b8160010183602001518281518110610bb157610bb16144e1565b6020908102919091018101518254600180820185556000948552938390208251600590920201805463ffffffff191660e09290921c919091178155918101519092820190610bff90826145a4565b5060408201516002820180546001600160a01b0319166001600160a01b0390921691909117905560608201516003820155608082015160048201805460ff191660018381811115610c5257610c52613ba1565b02179055505050600101610b64565b505050600101610a67565b50336001600160a01b03167f6055ac00abe054259552b545157e716d05be56347e14d86c1492cc51180de26a888884604051610caa93929190614662565b60405180910390a250505050505050565b600080356001600160e01b031916846040516384b9b37960e01b81526004016105e5929190613f8c565b81836000600481610cf68585611809565b81526020810191909152604001600020546001600160a01b031603610d2e57604051630cc8721760e31b815260040160405180910390fd5b610d36612136565b6000610d428587611809565b600081815260046020908152604080832081516101008101835281546001600160a01b038082166080840190815263ffffffff600160a01b8404811660a086015260ff600160c01b8504811660c0870152600160c81b90940490931660e08501528084526001850154928316968401969096526401000000009091041692810192909252600201546060820152929350610ddd908890612510565b5090508060ff16600003610e25578151805160209091015160405163586601c960e11b81526001600160a01b03909216600483015263ffffffff1660248201526044016105e5565b6000610e3588846020015161218f565b90508260600151811115610e5c5760405163735a16a760e11b815260040160405180910390fd5b600060016000610e708b8760200151611809565b815260208101919091526040016000908120546001600160a01b0316915082610e9a576000610eab565b610eab8a8660400151858c866125e0565b9050610ebc8a86600001518d612902565b604080860151815163ffffffff8e1681526001600160a01b039182166020820152918201839052606082018590528b16907ff3b51f5934782975a42d014d05c1bcf64abdb16c56051b2b64208a610987800f9060800160405180910390a2505050505050610f2a6001600055565b5050505050565b338160016000610f418484611809565b815260200190815260200160002060010180549050600003610f7657604051635737b5dd60e01b815260040160405180910390fd5b6000610f823385611809565b60008181526002602052604090205490915015610fb257604051634c7ff9bd60e11b815260040160405180910390fd5b60008181526001602081815260408084208151808301835281546001600160a01b0316815293810180548351818602810186019094528084529193858101939290879084015b828210156111c957600084815260208082206040805160c0810182526002870290920180546001600160a01b03811684840190815263ffffffff600160a01b830416606086015260ff600160c01b830481166080870152600160c81b90920490911660a08501528352600181018054835181870281018701909452808452939591948681019491929084015b828210156111b25760008481526020908190206040805160a0810190915260058502909101805460e01b6001600160e01b031916825260018101805492939192918401916110d190614523565b80601f01602080910402602001604051908101604052809291908181526020018280546110fd90614523565b801561114a5780601f1061111f5761010080835404028352916020019161114a565b820191906000526020600020905b81548152906001019060200180831161112d57829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff16600181111561118e5761118e613ba1565b600181111561119f5761119f613ba1565b8152505081526020019060010190611084565b505050508152505081526020019060010190610ff8565b5050505081525050905060005b816020015151811015611239576000826020015182815181106111fb576111fb6144e1565b60209081029190910101515180519091506001600160a01b0316156112305761123033826000015183602001518a6000612222565b506001016111d6565b506000828152600160208190526040822080546001600160a01b0319168155919061126690830182613411565b505060405163ffffffff8616815233907fd422eb39d02e723621702475863a9c9799e4aaa0c2d76dac1ceac800e915700b9060200160405180910390a25050505050565b6112b2613432565b6112ba613432565b604080516001808252818301909252906020808301908036833750505060208201819052805163f23b1ed760e01b91906000906112f9576112f96144e1565b6001600160e01b03199290921660209283029190910182015260408051600580825260c0820190925291820160a080368337505050604082018190528051635894945360e01b9190600090611350576113506144e1565b6001600160e01b031990921660209283029190910190910152604081015180516342ab2be160e01b9190600190811061138b5761138b6144e1565b6001600160e01b03199092166020928302919091019091015260408101518051633bd797b760e01b919060029081106113c6576113c66144e1565b6001600160e01b03199092166020928302919091019091015260408101518051635d2a175760e11b91906003908110611401576114016144e1565b6001600160e01b031990921660209283029190910190910152604081015180516302ff20b960e11b9190600490811061143c5761143c6144e1565b6001600160e01b03199290921660209283029190910182015260408051606081018252600281526000928101839052808201929092528051600580825260c0820190925290816020015b61148e613497565b81526020019060019003908161148657505060e0830190815260408051808201909152635894945360e01b815260208101839052905180516000906114d5576114d56144e1565b602002602001018190525060405180604001604052806342ab2be160e01b6001600160e01b0319168152602001828152508260e0015160018151811061151d5761151d6144e1565b60200260200101819052506040518060400160405280633bd797b760e01b6001600160e01b0319168152602001828152508260e00151600281518110611565576115656144e1565b6020026020010181905250604051806040016040528063ba542eae60e01b6001600160e01b0319168152602001828152508260e001516003815181106115ad576115ad6144e1565b602002602001018190525060405180604001604052806305fe417260e01b6001600160e01b0319168152602001828152508260e001516004815181106115f5576115f56144e1565b602090810291909101015260408051600580825260c0820190925290816020015b61161e613497565b8152602001906001900390816116165750506101408301908152604080518082018252635894945360e01b815281516060810183526004815260006020808301829052938201819052928201529151805190919061167e5761167e6144e1565b6020908102919091018101919091526040805180820182526342ab2be160e01b815281516060810183526004815260008185018190529281019290925291820152610140830151805160019081106116d8576116d86144e1565b602090810291909101810191909152604080518082018252633bd797b760e01b81528151606081018352600481526000818501819052928101929092529182015261014083015180516002908110611732576117326144e1565b6020908102919091018101919091526040805180820182526302ff20b960e11b8152815160608101835260048152600081850181905292810192909252918201526101408301518051600390811061178c5761178c6144e1565b602090810291909101810191909152604080518082018252635d2a175760e11b81528151606081019092529182019080600481526000602082018190526040909101529052610140830151805160049081106117ea576117ea6144e1565b60209081029190910101525060016080820181905260a0820152919050565b6040516bffffffffffffffffffffffff19606084901b1660208201526001600160e01b031960e083901b16603482015260009060380160405160208183030381529060405280519060200120905092915050565b604080518082019091526000815260606020820152600160006118808585611809565b8152602080820192909252604090810160009081208251808401845281546001600160a01b031681526001820180548551818802810188019096528086529195929486840194909391929184015b82821015611a9f57600084815260208082206040805160c0810182526002870290920180546001600160a01b03811684840190815263ffffffff600160a01b830416606086015260ff600160c01b830481166080870152600160c81b90920490911660a08501528352600181018054835181870281018701909452808452939591948681019491929084015b82821015611a885760008481526020908190206040805160a0810190915260058502909101805460e01b6001600160e01b031916825260018101805492939192918401916119a790614523565b80601f01602080910402602001604051908101604052809291908181526020018280546119d390614523565b8015611a205780601f106119f557610100808354040283529160200191611a20565b820191906000526020600020905b815481529060010190602001808311611a0357829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff166001811115611a6457611a64613ba1565b6001811115611a7557611a75613ba1565b815250508152602001906001019061195a565b5050505081525050815260200190600101906118ce565b50505091525090949350505050565b6000611aba8383611809565b600081815260046020908152604080832081516101008101835281546001600160a01b038082166080840190815263ffffffff600160a01b8404811660a086015260ff600160c01b8504811660c0870152600160c81b90940490931660e0850152835260018401549182169583018690526401000000009091041692810192909252600290810154606083015293945092908290611b59908890611809565b815260208082019290925260409081016000908120868252600390935290812054825492935063ffffffff1691611b92906001906141e7565b9050808263ffffffff1614611c66576000838281548110611bb557611bb56144e1565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16905080848463ffffffff1681548110611bf657611bf66144e1565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff1602179055508260036000611c388b85611809565b815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550505b82805480611c7657611c76614864565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a02191690559190925585518051910151611cbd928a9291908a90611f5b565b600085815260046020908152604080832080546001600160d01b03191681556001810180546001600160c01b031916905560020192909255905163ffffffff881681526001600160a01b038916917f8c1bcc5bc952f57b9bb9ca11fcfe46e46cdcc85cfab32adaef297a52892b39019101610caa565b60405163180c930960e01b81526001600160a01b0382811660048301526001917f00000000000000000000000000000000000000000000000000000000000000009091169063180c930990602401602060405180830381865afa158015611d9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc2919061488a565b611dca575060005b604051632a90cead60e11b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000016906355219d5a90602401602060405180830381865afa158015611e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e54919061488a565b611e5c575060005b8061033557604051633177657b60e21b815260040160405180910390fd5b80516001600160a01b031615611f585780516001600160a01b03163b611eb35760405163d58d525360e01b815260040160405180910390fd5b80516040516301ffc9a760e01b815263732d321f60e01b60048201526001600160a01b03909116906301ffc9a790602401602060405180830381865afa925050508015611f1d575060408051601f3d908101601f19168201909252611f1a9181019061488a565b60015b611f3a57604051633abeb36560e21b815260040160405180910390fd5b8061033557604051633abeb36560e21b815260040160405180910390fd5b50565b6040516308455c3d60e41b81526001600160a01b03868116600483015263ffffffff8086166024840152841660448301528215159190861690638455c3d090606401602060405180830381865afa158015611fba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fde919061488a565b1503610f2a576000816120345760405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b03166345248a6160e11b179052612079565b60405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b031663023ef5a960e01b1790525b90506000866001600160a01b03166338997b11876000856040518463ffffffff1660e01b81526004016120ae939291906148a5565b6000604051808303816000875af11580156120cd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526120f59190810190614919565b905060008180602001905181019061210d919061488a565b90508061212c57604051627db9bf60e11b815260040160405180910390fd5b5050505050505050565b6002600054036121885760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105e5565b6002600055565b600061219d83836000612aaf565b60405163ffffffff841681529091506001600160a01b038416907f30bcdb9ee7609081b23f2866129f2079d711802265ba54036d4f8bf6c62229779060200160405180910390a292915050565b60005b81518110156103355761221a82828151811061220b5761220b6144e1565b60200260200101518351612d90565b6001016121ed565b60405163d8cd9c1b60e01b81526001600160a01b03868116600483015263ffffffff808616602484015284166044830152821515919086169063d8cd9c1b90606401602060405180830381865afa158015612281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122a5919061488a565b1503610f2a576000816122fb5760405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b031663014b0af760e41b179052612340565b60405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b03166339404bed60e21b1790525b90506000866001600160a01b03166338997b11876000856040518463ffffffff1660e01b8152600401612375939291906148a5565b6000604051808303816000875af1158015612394573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526123bc9190810190614919565b90506000818060200190518101906123d4919061488a565b90508061212c576040516334eb2f4560e21b815260040160405180910390fd5b60018160800151600181111561240c5761240c613ba1565b036124e55760408101516001600160a01b03163b61243d57604051630b6f131360e21b815260040160405180910390fd5b60408082015190516301ffc9a760e01b8152631e66287160e21b60048201526001600160a01b03909116906301ffc9a790602401602060405180830381865afa9250505080156124aa575060408051601f3d908101601f191682019092526124a79181019061488a565b60015b6124c757604051630b6f131360e21b815260040160405180910390fd5b8061033557604051630b6f131360e21b815260040160405180910390fd5b60408101516001600160a01b0316611f5857604051630b6f131360e21b815260040160405180910390fd5b805160009081906001600160a01b0316612536575050604081015160019060ff166125d9565b825160208401516040516389a78a0360e01b81526001600160a01b03878116600483015263ffffffff90921660248201529116906389a78a0390604401602060405180830381865afa158015612590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125b4919061494d565b91508160ff166001036125cf5750604082015160ff166125d9565b50606082015160ff165b9250929050565b60405163aac61a1f60e01b81526001600160a01b0385811660048301526024820185905260009182917f0000000000000000000000000000000000000000000000000000000000000000169063aac61a1f90604401602060405180830381865afa158015612652573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612676919061496a565b90506001600160a01b0386161561276c576040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044810182905260009060640160408051601f198184030181529181526020820180516001600160e01b031663095ea7b360e01b179052516338997b1160e01b81529091506001600160a01b038916906338997b1190612722908a9060009086906004016148a5565b6000604051808303816000875af1158015612741573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526127699190810190614919565b50505b60006001600160a01b0387166127c8576040516001600160a01b0380871660248301528516604482015260640160408051601f198184030181529190526020810180516001600160e01b031663d66672c960e01b17905261281f565b6040516001600160a01b0380891660248301526044820184905280871660648301528516608482015260a40160408051601f198184030181529190526020810180516001600160e01b0316630bceddc760e01b1790525b90506000886001600160a01b03166338997b117f000000000000000000000000000000000000000000000000000000000000000060006001600160a01b03168b6001600160a01b031614612874576000612876565b855b856040518463ffffffff1660e01b8152600401612895939291906148a5565b6000604051808303816000875af11580156128b4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526128dc9190810190614919565b90506000818060200190518101906128f4919061496a565b9a9950505050505050505050565b81516020830151604051632b8c165760e11b81526001600160a01b03868116600483015263ffffffff90921660248201529116906357182cae90604401602060405180830381865afa15801561295c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612980919061488a565b15612aa557602082015160405163ffffffff909116602482015260009060440160408051601f198184030181529181526020820180516001600160e01b03166303d049bb60e01b179052845190516338997b1160e01b81529192506000916001600160a01b038716916338997b1191612a009190859087906004016148a5565b6000604051808303816000875af1158015612a1f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612a479190810190614919565b9050600081806020019051810190612a5f919061488a565b905080612a9d5784516020860151604051637b81003760e01b81526001600160a01b03909216600483015263ffffffff1660248201526044016105e5565b505050505050565b6104d28382611aae565b60008060016000612ac08787611809565b81526020019081526020016000206001018361ffff1681548110612ae657612ae66144e1565b600091825260208083206040805160c081018252600290940290910180546001600160a01b03811685840190815263ffffffff600160a01b830416606087015260ff600160c01b830481166080880152600160c81b90920490911660a0860152845260018101805483518186028101860190945280845294959194868501949192909184015b82821015612c9a5760008481526020908190206040805160a0810190915260058502909101805460e01b6001600160e01b03191682526001810180549293919291840191612bb990614523565b80601f0160208091040260200160405190810160405280929190818152602001828054612be590614523565b8015612c325780601f10612c0757610100808354040283529160200191612c32565b820191906000526020600020905b815481529060010190602001808311612c1557829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff166001811115612c7657612c76613ba1565b6001811115612c8757612c87613ba1565b8152505081526020019060010190612b6c565b50505050815250509050600080612cb5878460000151612510565b915091508160ff16600103612d5f5760005b836020015151811015612d14576000612cfd8986602001518481518110612cf057612cf06144e1565b6020026020010151612dcb565b9050612d098187614983565b955050600101612cc7565b50866001600160a01b03167f9e69fce51107df6a8ea6c6add2311f64f842e81c07b565c38864bd16f098739f87878660200151604051612d5693929190614996565b60405180910390a25b61ffff811615612d86576000612d76888884612aaf565b9050612d828186614983565b9450505b5050509392505050565b81516060015160ff16811080612dad575081516040015160ff1681105b156103355760405163656fba4b60e01b815260040160405180910390fd5b6040808201518251602084015192516334dcc79760e01b8152600093849384936001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016936334dcc79793612e2a9392916004016149bf565b6040805180830381865afa158015612e46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e6a91906149f3565b91509150600081612e7c576000612ee6565b6040516370a0823160e01b81526001600160a01b0387811660048301528416906370a0823190602401602060405180830381865afa158015612ec2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ee6919061496a565b9050612ef286866131c0565b845160405163d659e5d160e01b81526001600160e01b031990911660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d659e5d1906024016040805180830381865afa158015612f65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f899190614a28565b51905082156130e5576040516370a0823160e01b81526001600160a01b038881166004830152600091908616906370a0823190602401602060405180830381865afa158015612fdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613000919061496a565b905060008083600281111561301757613017613ba1565b1461302b5761302684836141e7565b613035565b61303582856141e7565b885160405163f25be75360e01b81526001600160a01b0389811660048301526001600160e01b03199092166024820152604481018390529192507f0000000000000000000000000000000000000000000000000000000000000000169063f25be75390606401602060405180830381865afa1580156130b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130dc919061496a565b96505050613175565b604051638b33fc9960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638b33fc9990613131908490600401614a68565b602060405180830381865afa15801561314e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613172919061496a565b94505b866001600160a01b03167ff527f5594cdc8f8c00b64622e3fdd624abd1588919811d4f526c6b91e9288067876040516131ae9190614a82565b60405180910390a25050505092915050565b80516060906001600160e01b0319166131e85750604080516020810190915260008152613210565b81516020808401516040516131fe939201614a95565b60405160208183030381529060405290505b60008260800151600181111561322857613228613ba1565b036132b257826001600160a01b03166338997b1183604001518460600151846040518463ffffffff1660e01b8152600401613265939291906148a5565b6000604051808303816000875af1158015613284573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526132ac9190810190614919565b50505050565b600082604001516001600160a01b0316826040516132d09190614ac6565b6000604051808303816000865af19150503d806000811461330d576040519150601f19603f3d011682016040523d82523d6000602084013e613312565b606091505b5091505060008180602001905181019061332c9190614ad8565b905060005b8151811015612a9d57856001600160a01b03166338997b1183838151811061335b5761335b6144e1565b602002602001015160000151848481518110613379576133796144e1565b602002602001015160200151858581518110613397576133976144e1565b6020026020010151604001516040518463ffffffff1660e01b81526004016133c1939291906148a5565b6000604051808303816000875af11580156133e0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526134089190810190614919565b50600101613331565b5080546000825560020290600052602060002090810190611f5891906134d3565b604051806101800160405280606081526020016060815260200160608152602001606081526020016000151581526020016000151581526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6040805180820190915260008152602081016134ce6040805160608101909152806000815260006020820181905260409091015290565b905290565b808211156135015780546001600160d01b031916815560006134f86001830182613505565b506002016134d3565b5090565b5080546000825560050290600052602060002090810190611f5891905b8082111561350157805463ffffffff1916815560006135446001830182613572565b506002810180546001600160a01b03191690556000600382015560048101805460ff19169055600501613522565b50805461357e90614523565b6000825580601f1061358e575050565b601f016020900490600052602060002090810190611f5891905b8082111561350157600081556001016135a8565b80356001600160e01b0319811681146135d457600080fd5b919050565b6000602082840312156135eb57600080fd5b6135f4826135bc565b9392505050565b63ffffffff81168114611f5857600080fd5b60006020828403121561361f57600080fd5b81356135f4816135fb565b6001600160a01b0381168114611f5857600080fd5b80356135d48161362a565b6000806040838503121561365d57600080fd5b82356136688161362a565b91506020830135613678816135fb565b809150509250929050565b60ff81168114611f5857600080fd5b60008083601f8401126136a457600080fd5b5081356001600160401b038111156136bb57600080fd5b6020830191508360208285010111156125d957600080fd5b6000806000806000608086880312156136eb57600080fd5b85356136f681613683565b945060208601356137068161362a565b93506040860135925060608601356001600160401b0381111561372857600080fd5b61373488828901613692565b969995985093965092949392505050565b60008060006040848603121561375a57600080fd5b833561376581613683565b925060208401356001600160401b0381111561378057600080fd5b61378c86828701613692565b9497909650939450505050565b60005b838110156137b457818101518382015260200161379c565b50506000910152565b600081518084526137d5816020860160208601613799565b601f01601f19169290920160200192915050565b60208152600082516080602084015261380560a08401826137bd565b90506020840151601f1984830301604085015261382282826137bd565b9150506040840151601f1984830301606085015261384082826137bd565b6060860151858203601f190160808701528051808352919350602090810192508084019190600582901b85010160005b828110156138c257858203601f19018452845180516001600160e01b03191683526020908101516040918401829052906138ac908401826137bd565b6020968701969590950194925050600101613870565b50979650505050505050565b60008060008060008587036101008112156138e857600080fd5b86356138f3816135fb565b95506020870135613903816135fb565b945060408701356139138161362a565b9350606087013592506080607f198201121561392e57600080fd5b506080860190509295509295909350565b6020815260006135f460208301846137bd565b6000806000806060858703121561396857600080fd5b8435613973816135fb565b935060208501356139838161362a565b925060408501356001600160401b0381111561399e57600080fd5b8501601f810187136139af57600080fd5b80356001600160401b038111156139c557600080fd5b8760208260051b84010111156139da57600080fd5b949793965060200194505050565b600080602083850312156139fb57600080fd5b82356001600160401b03811115613a1157600080fd5b613a1d85828601613692565b90969095509350505050565b600080600060608486031215613a3e57600080fd5b8335613a4981613683565b925060208401356001600160401b03811115613a6457600080fd5b84016101608187031215613a7757600080fd5b929592945050506040919091013590565b600080600060608486031215613a9d57600080fd5b8335613aa8816135fb565b92506020840135613ab88161362a565b91506040840135613ac88161362a565b809150509250925092565b600081518084526020840193506020830160005b82811015613b0f5781516001600160e01b031916865260209586019590910190600101613ae7565b5093949350505050565b600082825180855260208501945060208160051b8301016020850160005b83811015613b9557848303601f19018852815180516001600160a01b03168452602080820151151590850152604090810151606091850182905290613b7e90850182613ad3565b6020998a0199909450929092019150600101613b37565b50909695505050505050565b634e487b7160e01b600052602160045260246000fd5b805160058110613bc957613bc9613ba1565b825260208181015160ff1690830152604090810151910152565b600081518084526020840193506020830160005b82811015613b0f57815180516001600160e01b031916875260209081015190613c2290880182613bb7565b506080959095019460209190910190600101613bf7565b600081518084526020840193506020830160005b82811015613b0f57815163ffffffff60e01b81511687526020810151613c766020890182613bb7565b5060400151613c886080880182613bb7565b5060e0959095019460209190910190600101613c4d565b60208152600082516101806020840152613cbd6101a0840182613ad3565b90506020840151601f19848303016040850152613cda8282613ad3565b9150506040840151601f19848303016060850152613cf88282613ad3565b9150506060840151601f19848303016080850152613d168282613ad3565b9150506080840151613d2c60a085018215159052565b5060a084015180151560c08501525060c0840151838203601f190160e0850152613d568282613b19565b91505060e0840151601f1984830301610100850152613d758282613be3565b915050610100840151601f1984830301610120850152613d958282613be3565b915050610120840151601f1984830301610140850152613db58282613be3565b915050610140840151601f1984830301610160850152613dd58282613be3565b915050610160840151601f1984830301610180850152613df58282613c39565b95945050505050565b60028110613e0e57613e0e613ba1565b9052565b63ffffffff60e01b81511682526000602082015160a06020850152613e3a60a08501826137bd565b905060018060a01b036040840151166040850152606083015160608501526080830151613e6a6080860182613dfe565b509392505050565b600082825180855260208501945060208160051b8301016020850160005b83811015613b9557601f19858403018852613eac838351613e12565b6020988901989093509190910190600101613e90565b602080825282516001600160a01b031682820152828101516040808401528051606084018190526000926080600583901b86018101939091019190850190845b81811015613f8057868503607f190183528351805180516001600160a01b0316875260208082015163ffffffff169088015260408082015160ff9081169189019190915260609182015116908701526020015160a060808701819052613f6a90870182613e72565b9550506020938401939290920191600101613f02565b50929695505050505050565b6001600160e01b031992909216825260ff16602082015260400190565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715613fe157613fe1613fa9565b60405290565b60405160a081016001600160401b0381118282101715613fe157613fe1613fa9565b604051606081016001600160401b0381118282101715613fe157613fe1613fa9565b604051601f8201601f191681016001600160401b038111828210171561405357614053613fa9565b604052919050565b60006080828403121561406d57600080fd5b604051608081016001600160401b038111828210171561408f5761408f613fa9565b60405290508082356140a08161362a565b815260208301356140b0816135fb565b602082015260408301356140c381613683565b604082015260608301356140d681613683565b6060919091015292915050565b6000608082840312156140f557600080fd5b6135f4838361405b565b60006020828403121561411157600080fd5b81356135f48161362a565b81356141278161362a565b81546001600160a01b031981166001600160a01b039290921691821783556020840135614153816135fb565b63ffffffff60a01b60a09190911b166001600160c01b03198216831781178455604085013561418181613683565b6001600160c81b0319929092169092179190911760c09190911b60ff60c01b16178155600060608301356141b481613683565b825460ff60c81b191660c89190911b60ff60c81b16179091555050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610479576104796141d1565b63ffffffff8681168252851660208201526101008101843561421b8161362a565b6001600160a01b031660408301526020850135614237816135fb565b63ffffffff166060830152604085013561425081613683565b60ff166080830152606085013561426681613683565b60ff1660a08301526001600160a01b039390931660c082015260e001529392505050565b60006001600160401b038211156142a3576142a3613fa9565b5060051b60200190565b60006001600160401b038211156142c6576142c6613fa9565b50601f01601f191660200190565b8035600281106135d457600080fd5b600060a082840312156142f557600080fd5b6142fd613fbf565b9050614309838361405b565b815260808201356001600160401b0381111561432457600080fd5b8201601f8101841361433557600080fd5b80356143486143438261428a565b61402b565b8082825260208201915060208360051b85010192508683111561436a57600080fd5b602084015b838110156144615780356001600160401b0381111561438d57600080fd5b850160a0818a03601f190112156143a357600080fd5b6143ab613fe7565b6143b7602083016135bc565b815260408201356001600160401b038111156143d257600080fd5b82016020810190603f018b136143e757600080fd5b80356143f5614343826142ad565b8181528c602083850101111561440a57600080fd5b816020840160208301376000602083830101528060208501525050506144326060830161363f565b60408201526080820135606082015261444d60a083016142d4565b60808201528452506020928301920161436f565b5060208501525091949350505050565b600061447f6143438461428a565b8381526020810190600585901b84013681111561449b57600080fd5b845b818110156144d65780356001600160401b038111156144bb57600080fd5b6144c7368289016142e3565b8552506020938401930161449d565b509095945050505050565b634e487b7160e01b600052603260045260246000fd5b60008235609e1983360301811261450d57600080fd5b9190910192915050565b600061047936836142e3565b600181811c9082168061453757607f821691505b60208210810361455757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104d257806000526020600020601f840160051c810160208510156145845750805b601f840160051c820191505b81811015610f2a5760008155600101614590565b81516001600160401b038111156145bd576145bd613fa9565b6145d1816145cb8454614523565b8461455d565b6020601f82116001811461460557600083156145ed5750848201515b600019600385901b1c1916600184901b178455610f2a565b600084815260208120601f198516915b828110156146355787850151825560209485019460019092019101614615565b50848210156146535786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b63ffffffff8416815260018060a01b038316602082015260606040820152600060a0820160018060a01b038454166060840152600184016040608085015281815480845260c08601915060c08160051b8701019350826000526020600020925060005b818110156148565760bf1987860301835260a08501845460018060a01b038116875263ffffffff8160a01c16602088015260ff8160c01c16604088015260ff8160c81c166060880152506001850160a0608088015281815480845260c08901915060c08160051b8a01019350826000526020600020925060005b818110156148395789850360bf19018352835460e01b6001600160e01b031916855260a0602086015260018401805460009061477a81614523565b8060a08a0152600182166000811461479957600181146147b5576147e9565b60ff19831660c08b015260c082151560051b8b010193506147e9565b84600052602060002060005b838110156147e05781548c820160c001526001909101906020016147c1565b8b0160c0019450505b50505060028601546001600160a01b0316604088015260038601546060880152600486015460ff1691506148206080880183613dfe565b955050600593909301926020929092019160010161473f565b5092975050506002949094019350602092909201916001016146c5565b509298975050505050505050565b634e487b7160e01b600052603160045260246000fd5b805180151581146135d457600080fd5b60006020828403121561489c57600080fd5b6135f48261487a565b60018060a01b0384168152826020820152606060408201526000613df560608301846137bd565b600082601f8301126148dd57600080fd5b81516148eb614343826142ad565b81815284602083860101111561490057600080fd5b614911826020830160208701613799565b949350505050565b60006020828403121561492b57600080fd5b81516001600160401b0381111561494157600080fd5b614911848285016148cc565b60006020828403121561495f57600080fd5b81516135f481613683565b60006020828403121561497c57600080fd5b5051919050565b80820180821115610479576104796141d1565b63ffffffff8416815261ffff83166020820152606060408201526000613df56060830184613e72565b6001600160a01b03841681526001600160e01b031983166020820152606060408201819052600090613df5908301846137bd565b60008060408385031215614a0657600080fd5b8251614a118161362a565b9150614a1f6020840161487a565b90509250929050565b60006040828403128015614a3b57600080fd5b50614a44613fbf565b825160038110614a5357600080fd5b81526020928301519281019290925250919050565b6020810160038310614a7c57614a7c613ba1565b91905290565b6020815260006135f46020830184613e12565b6001600160e01b0319831681528151600090614ab8816004850160208701613799565b919091016004019392505050565b6000825161450d818460208701613799565b600060208284031215614aea57600080fd5b81516001600160401b03811115614b0057600080fd5b8201601f81018413614b1157600080fd5b8051614b1f6143438261428a565b8082825260208201915060208360051b850101925086831115614b4157600080fd5b602084015b83811015614bd95780516001600160401b03811115614b6457600080fd5b85016060818a03601f19011215614b7a57600080fd5b614b82614009565b6020820151614b908161362a565b81526040820151602082015260608201516001600160401b03811115614bb557600080fd5b614bc48b6020838601016148cc565b60408301525084525060209283019201614b46565b50969550505050505056fea26469706673582212202963d1dd19adc2f07e91ebc41c44e273bc8b6c918e0dd5fb117d96db396dcd7664736f6c634300081c0033";

type StrategyBuilderPluginConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategyBuilderPluginConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategyBuilderPlugin__factory extends ContractFactory {
  constructor(...args: StrategyBuilderPluginConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeController: AddressLike,
    _feeHandler: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _feeController,
      _feeHandler,
      overrides || {}
    );
  }
  override deploy(
    _feeController: AddressLike,
    _feeHandler: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _feeController,
      _feeHandler,
      overrides || {}
    ) as Promise<
      StrategyBuilderPlugin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): StrategyBuilderPlugin__factory {
    return super.connect(runner) as StrategyBuilderPlugin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyBuilderPluginInterface {
    return new Interface(_abi) as StrategyBuilderPluginInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StrategyBuilderPlugin {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StrategyBuilderPlugin;
  }
}
