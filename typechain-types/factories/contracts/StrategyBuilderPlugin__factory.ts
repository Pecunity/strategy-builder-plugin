/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  StrategyBuilderPlugin,
  StrategyBuilderPluginInterface,
} from "../../contracts/StrategyBuilderPlugin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeController",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeHandler",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "AutomationAlreadyExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "condition",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "AutomationNotExecutable",
    type: "error",
  },
  {
    inputs: [],
    name: "AutomationNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "ChangeStrategyInConditionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "FeeExceedMaxFee",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAction",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidActionTarget",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCondition",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidConditionAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNextStepIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "NotContractCaller",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
    ],
    name: "NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentTokenNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyAlreadyExist",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyIsInUse",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "condition",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "UpdateConditionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "changeAutomationInConditionFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "parameter",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum IStrategyBuilderPlugin.ActionType",
            name: "actionType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Action",
        name: "action",
        type: "tuple",
      },
    ],
    name: "ActionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "conditionAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "result1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "result0",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Condition",
        name: "condition",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxFeeAmount",
        type: "uint256",
      },
    ],
    name: "AutomationCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
    ],
    name: "AutomationDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInToken",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInUSD",
        type: "uint256",
      },
    ],
    name: "AutomationExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "conditionAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "id",
                    type: "uint32",
                  },
                  {
                    internalType: "uint8",
                    name: "result1",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "result0",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Condition",
                name: "condition",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "selector",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "parameter",
                    type: "bytes",
                  },
                  {
                    internalType: "address",
                    name: "target",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderPlugin.ActionType",
                    name: "actionType",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Action[]",
                name: "actions",
                type: "tuple[]",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
            name: "steps",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Strategy",
        name: "strategy",
        type: "tuple",
      },
    ],
    name: "StrategyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
    ],
    name: "StrategyDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
    ],
    name: "StrategyExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "stepId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "parameter",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum IStrategyBuilderPlugin.ActionType",
            name: "actionType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Action[]",
        name: "actions",
        type: "tuple[]",
      },
    ],
    name: "StrategyStepExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "AUTHOR",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "automation",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "conditionAddress",
                type: "address",
              },
              {
                internalType: "uint32",
                name: "id",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "result1",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "result0",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Condition",
            name: "condition",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "strategyId",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxFeeAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Automation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxFeeInUSD",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "conditionAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "result1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "result0",
            type: "uint8",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "createAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "conditionAddress",
                type: "address",
              },
              {
                internalType: "uint32",
                name: "id",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "result1",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "result0",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Condition",
            name: "condition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "selector",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "parameter",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum IStrategyBuilderPlugin.ActionType",
                name: "actionType",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Action[]",
            name: "actions",
            type: "tuple[]",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
        name: "steps",
        type: "tuple[]",
      },
    ],
    name: "createStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "deleteAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "deleteStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "beneficary",
        type: "address",
      },
    ],
    name: "executeAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "executeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeController",
    outputs: [
      {
        internalType: "contract IFeeController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeHandler",
    outputs: [
      {
        internalType: "contract IFeeHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "getStorageId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onInstall",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onUninstall",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pluginManifest",
    outputs: [
      {
        components: [
          {
            internalType: "bytes4[]",
            name: "interfaceIds",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "dependencyInterfaceIds",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "executionFunctions",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "permittedExecutionSelectors",
            type: "bytes4[]",
          },
          {
            internalType: "bool",
            name: "permitAnyExternalAddress",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "canSpendNativeToken",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "address",
                name: "externalAddress",
                type: "address",
              },
              {
                internalType: "bool",
                name: "permitAnySelector",
                type: "bool",
              },
              {
                internalType: "bytes4[]",
                name: "selectors",
                type: "bytes4[]",
              },
            ],
            internalType: "struct ManifestExternalCallPermission[]",
            name: "permittedExternalCalls",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "userOpValidationFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "runtimeValidationFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "preUserOpValidationHooks",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "preRuntimeValidationHooks",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "preExecHook",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "postExecHook",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestExecutionHook[]",
            name: "executionHooks",
            type: "tuple[]",
          },
        ],
        internalType: "struct PluginManifest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pluginMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "string",
            name: "author",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "functionSelector",
                type: "bytes4",
              },
              {
                internalType: "string",
                name: "permissionDescription",
                type: "string",
              },
            ],
            internalType: "struct SelectorPermission[]",
            name: "permissionDescriptors",
            type: "tuple[]",
          },
        ],
        internalType: "struct PluginMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "preExecHookData",
        type: "bytes",
      },
    ],
    name: "postExecutionHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "preExecutionHook",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "preRuntimeValidationHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
    ],
    name: "preUserOpValidationHook",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "runtimeValidationFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "strategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "conditionAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "id",
                    type: "uint32",
                  },
                  {
                    internalType: "uint8",
                    name: "result1",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "result0",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Condition",
                name: "condition",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "selector",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "parameter",
                    type: "bytes",
                  },
                  {
                    internalType: "address",
                    name: "target",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderPlugin.ActionType",
                    name: "actionType",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Action[]",
                name: "actions",
                type: "tuple[]",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
            name: "steps",
            type: "tuple[]",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
    ],
    name: "userOpValidationFunction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051614cab380380614cab83398101604081905261002f91610067565b60016000556001600160a01b039182166080521660a05261009a565b80516001600160a01b038116811461006257600080fd5b919050565b6000806040838503121561007a57600080fd5b6100838361004b565b91506100916020840161004b565b90509250929050565b60805160a051614bad6100fe6000396000818161028001528181611de901528181612663015261280101526000818161030501528181611d55015281816125da01528181612da901528181612ecb0152818161302501526130b00152614bad6000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80636d61fe70116100de578063af87348311610097578063c776313011610071578063c7763130146103dc578063d7ec3598146103f1578063d855198a14610404578063ffa1ad741461042457600080fd5b8063af87348314610339578063ba542eae146103c9578063bfd151c11461022d57600080fd5b80636d61fe701461032757806388e18ce4146103395780638a91b0e3146103275780639478a77f1461035a578063a3f4df7e1461036d578063a7be85c6146103a357600080fd5b80633bd797b7116101305780633bd797b7146102685780633c93adee1461027b57806342ab2be1146102ba57806346d60eb2146102cd57806358949453146102ed5780636999b3771461030057600080fd5b806301ffc9a71461017857806305fe4172146101a057806308fdca32146101b55780630c7ecd841461022d5780631128186d14610240578063118a538914610253575b600080fd5b61018b61018636600461356c565b610448565b60405190151581526020015b60405180910390f35b6101b36101ae3660046135a0565b61047f565b005b6101c86101c33660046135dd565b6104d7565b60408051825180516001600160a01b03908116835260208083015163ffffffff908116828601528386015160ff908116868801526060948501511684860152908601511660808401529284015190921660a082015291015160c082015260e001610197565b6101b361023b366004613666565b6105bc565b6101b361024e3660046136d8565b6105ee565b61025b610617565b604051610197919061377c565b6101b3610276366004613861565b6106e3565b6102a27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610197565b6101b36102c83660046135a0565b610945565b6102e06102db366004613666565b6109a7565b60405161019791906138d2565b6101b36102fb3660046138e5565b6109d2565b6102a27f000000000000000000000000000000000000000000000000000000000000000081565b6101b361033536600461397b565b5050565b61034c6103473660046139bc565b610cbb565b604051908152602001610197565b6101b3610368366004613a1b565b610ce5565b6102e06040518060400160405280601781526020017629ba3930ba32b3bc90213ab4b63232b91028363ab3b4b760491b81525081565b6102e06040518060400160405280600781526020016633426c6f636b7360c81b81525081565b6101b36103d73660046135a0565b610f31565b6103e46112aa565b6040516101979190613c32565b61034c6103ff3660046135dd565b611809565b6104176104123660046135dd565b61185d565b6040516101979190613e55565b6102e0604051806040016040528060058152602001640312e302e360dc1b81525081565b60006001600160e01b0319821663f23b1ed760e01b148061047957506301ffc9a760e01b6001600160e01b03198316145b92915050565b338160006004816104908585611809565b81526020810191909152604001600020546001600160a01b0316036104c857604051630cc8721760e31b815260040160405180910390fd5b6104d23384611aae565b505050565b604080516101008101825260006080820181815260a0830182905260c0830182905260e083018290528252602082018190529181018290526060810191909152600460006105258585611809565b8152602080820192909252604090810160002081516101008101835281546001600160a01b038082166080840190815263ffffffff600160a01b8404811660a086015260ff600160c01b8504811660c0870152600160c81b90940490931660e08501528352600184015491821695830195909552640100000000900490931691830191909152600201546060820152905092915050565b6000356001600160e01b031916856040516384b9b37960e01b81526004016105e5929190613f1f565b60405180910390fd5b6000356001600160e01b031916836040516384b9b37960e01b81526004016105e5929190613f1f565b6106426040518060800160405280606081526020016060815260200160608152602001606081525090565b61066d6040518060800160405280606081526020016060815260200160608152602001606081525090565b604080518082018252601781527629ba3930ba32b3bc90213ab4b63232b91028363ab3b4b760491b6020808301919091529083528151808301835260058152640312e302e360dc1b818301528382015281518083018352600781526633426c6f636b7360c81b9181019190915290820152919050565b338560006004816106f48585611809565b81526020810191909152604001600020546001600160a01b03161461072c57604051634dd7513760e11b815260040160405180910390fd5b33866001600061073c8484611809565b81526020019081526020016000206001018054905060000361077157604051635737b5dd60e01b815260040160405180910390fd5b61077a87611d33565b61079161078c36879003870187614076565b611e7a565b6107ba336107a26020880188614092565b6107b26040890160208a016135a0565b8c6001611f45565b60006107c6338b611809565b90506000600460006107d8338e611809565b81526020810191909152604001600020905086816107f682826140af565b50506001810180546001600160a01b038b16640100000000026001600160c01b031990911663ffffffff8d1617179055600281018890556000610839338c611809565b9050600260008281526020019081526020016000208c90806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff160217905550600160026000838152602001908152602001600020805490506108bd919061417a565b6003600085815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550336001600160a01b03167fdb9e062b56198be71327d2a755449c3fe38502eff5c81468ebda215c5e3ffcea8d8d8b8e8e60405161092f95949392919061418d565b60405180910390a2505050505050505050505050565b3381600160006109558484611809565b81526020019081526020016000206001018054905060000361098a57604051635737b5dd60e01b815260040160405180910390fd5b610992612120565b61099c3384612179565b506104d26001600055565b60606000356001600160e01b031916866040516384b9b37960e01b81526004016105e5929190613f1f565b33846000600160006109e48585611809565b81526020810191909152604001600020600101541115610a175760405163634f694f60e11b815260040160405180910390fd5b610a29610a248486614404565b6121d4565b600060016000610a39338a611809565b81526020810191909152604001600090812080546001600160a01b0319166001600160a01b03891617815591505b84811015610c6c576000868683818110610a8357610a83614474565b9050602002810190610a95919061448a565b610a9e906144aa565b8051519091506001600160a01b031615610ad5578051610abd90611e7a565b80518051602090910151610ad59133918c600161220c565b6001838101805491820181556000908152602080822084518051600290950290910180549282015160408301516060909301516001600160a01b039096166001600160c01b031990941693909317600160a01b63ffffffff909416939093029290921761ffff60c01b1916600160c01b60ff9283160260ff60c81b191617600160c81b91909416029290921782555b826020015151811015610c6157610b9783602001518281518110610b8a57610b8a614474565b60200260200101516123de565b8160010183602001518281518110610bb157610bb1614474565b6020908102919091018101518254600180820185556000948552938390208251600590920201805463ffffffff191660e09290921c919091178155918101519092820190610bff9082614537565b5060408201516002820180546001600160a01b0319166001600160a01b0390921691909117905560608201516003820155608082015160048201805460ff191660018381811115610c5257610c52613b34565b02179055505050600101610b64565b505050600101610a67565b50336001600160a01b03167f6055ac00abe054259552b545157e716d05be56347e14d86c1492cc51180de26a888884604051610caa939291906145f5565b60405180910390a250505050505050565b600080356001600160e01b031916846040516384b9b37960e01b81526004016105e5929190613f1f565b81836000600481610cf68585611809565b81526020810191909152604001600020546001600160a01b031603610d2e57604051630cc8721760e31b815260040160405180910390fd5b610d36612120565b6000610d428587611809565b600081815260046020908152604080832081516101008101835281546001600160a01b038082166080840190815263ffffffff600160a01b8404811660a086015260ff600160c01b8504811660c0870152600160c81b90940490931660e08501528084526001850154928316968401969096526401000000009091041692810192909252600201546060820152929350610ddd9088906124df565b5090508060ff16600003610e25578151805160209091015160405163586601c960e11b81526001600160a01b03909216600483015263ffffffff1660248201526044016105e5565b6000610e35888460200151612179565b90508260600151811115610e5c5760405163735a16a760e11b815260040160405180910390fd5b600060016000610e708b8760200151611809565b815260208101919091526040016000908120546001600160a01b0316915082610e9a576000610eab565b610eab8a8660400151858c866125af565b9050610ebc8a86600001518d6128b6565b604080860151815163ffffffff8e1681526001600160a01b039182166020820152918201839052606082018590528b16907ff3b51f5934782975a42d014d05c1bcf64abdb16c56051b2b64208a610987800f9060800160405180910390a2505050505050610f2a6001600055565b5050505050565b338160016000610f418484611809565b815260200190815260200160002060010180549050600003610f7657604051635737b5dd60e01b815260040160405180910390fd5b6000610f823385611809565b60008181526002602052604090205490915015610fb257604051634c7ff9bd60e11b815260040160405180910390fd5b60008181526001602081815260408084208151808301835281546001600160a01b0316815293810180548351818602810186019094528084529193858101939290879084015b828210156111c957600084815260208082206040805160c0810182526002870290920180546001600160a01b03811684840190815263ffffffff600160a01b830416606086015260ff600160c01b830481166080870152600160c81b90920490911660a08501528352600181018054835181870281018701909452808452939591948681019491929084015b828210156111b25760008481526020908190206040805160a0810190915260058502909101805460e01b6001600160e01b031916825260018101805492939192918401916110d1906144b6565b80601f01602080910402602001604051908101604052809291908181526020018280546110fd906144b6565b801561114a5780601f1061111f5761010080835404028352916020019161114a565b820191906000526020600020905b81548152906001019060200180831161112d57829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff16600181111561118e5761118e613b34565b600181111561119f5761119f613b34565b8152505081526020019060010190611084565b505050508152505081526020019060010190610ff8565b5050505081525050905060005b816020015151811015611239576000826020015182815181106111fb576111fb614474565b60209081029190910101515180519091506001600160a01b0316156112305761123033826000015183602001518a600061220c565b506001016111d6565b506000828152600160208190526040822080546001600160a01b03191681559190611266908301826133a4565b505060405163ffffffff8616815233907fd422eb39d02e723621702475863a9c9799e4aaa0c2d76dac1ceac800e915700b9060200160405180910390a25050505050565b6112b26133c5565b6112ba6133c5565b604080516001808252818301909252906020808301908036833750505060208201819052805163f23b1ed760e01b91906000906112f9576112f9614474565b6001600160e01b03199290921660209283029190910182015260408051600580825260c0820190925291820160a080368337505050604082018190528051635894945360e01b919060009061135057611350614474565b6001600160e01b031990921660209283029190910190910152604081015180516342ab2be160e01b9190600190811061138b5761138b614474565b6001600160e01b03199092166020928302919091019091015260408101518051633bd797b760e01b919060029081106113c6576113c6614474565b6001600160e01b03199092166020928302919091019091015260408101518051635d2a175760e11b9190600390811061140157611401614474565b6001600160e01b031990921660209283029190910190910152604081015180516302ff20b960e11b9190600490811061143c5761143c614474565b6001600160e01b03199290921660209283029190910182015260408051606081018252600281526000928101839052808201929092528051600580825260c0820190925290816020015b61148e61342a565b81526020019060019003908161148657505060e0830190815260408051808201909152635894945360e01b815260208101839052905180516000906114d5576114d5614474565b602002602001018190525060405180604001604052806342ab2be160e01b6001600160e01b0319168152602001828152508260e0015160018151811061151d5761151d614474565b60200260200101819052506040518060400160405280633bd797b760e01b6001600160e01b0319168152602001828152508260e0015160028151811061156557611565614474565b6020026020010181905250604051806040016040528063ba542eae60e01b6001600160e01b0319168152602001828152508260e001516003815181106115ad576115ad614474565b602002602001018190525060405180604001604052806305fe417260e01b6001600160e01b0319168152602001828152508260e001516004815181106115f5576115f5614474565b602090810291909101015260408051600580825260c0820190925290816020015b61161e61342a565b8152602001906001900390816116165750506101408301908152604080518082018252635894945360e01b815281516060810183526004815260006020808301829052938201819052928201529151805190919061167e5761167e614474565b6020908102919091018101919091526040805180820182526342ab2be160e01b815281516060810183526004815260008185018190529281019290925291820152610140830151805160019081106116d8576116d8614474565b602090810291909101810191909152604080518082018252633bd797b760e01b8152815160608101835260048152600081850181905292810192909252918201526101408301518051600290811061173257611732614474565b6020908102919091018101919091526040805180820182526302ff20b960e11b8152815160608101835260048152600081850181905292810192909252918201526101408301518051600390811061178c5761178c614474565b602090810291909101810191909152604080518082018252635d2a175760e11b81528151606081019092529182019080600481526000602082018190526040909101529052610140830151805160049081106117ea576117ea614474565b60209081029190910101525060016080820181905260a0820152919050565b6040516bffffffffffffffffffffffff19606084901b1660208201526001600160e01b031960e083901b16603482015260009060380160405160208183030381529060405280519060200120905092915050565b604080518082019091526000815260606020820152600160006118808585611809565b8152602080820192909252604090810160009081208251808401845281546001600160a01b031681526001820180548551818802810188019096528086529195929486840194909391929184015b82821015611a9f57600084815260208082206040805160c0810182526002870290920180546001600160a01b03811684840190815263ffffffff600160a01b830416606086015260ff600160c01b830481166080870152600160c81b90920490911660a08501528352600181018054835181870281018701909452808452939591948681019491929084015b82821015611a885760008481526020908190206040805160a0810190915260058502909101805460e01b6001600160e01b031916825260018101805492939192918401916119a7906144b6565b80601f01602080910402602001604051908101604052809291908181526020018280546119d3906144b6565b8015611a205780601f106119f557610100808354040283529160200191611a20565b820191906000526020600020905b815481529060010190602001808311611a0357829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff166001811115611a6457611a64613b34565b6001811115611a7557611a75613b34565b815250508152602001906001019061195a565b5050505081525050815260200190600101906118ce565b50505091525090949350505050565b6000611aba8383611809565b600081815260046020908152604080832081516101008101835281546001600160a01b038082166080840190815263ffffffff600160a01b8404811660a086015260ff600160c01b8504811660c0870152600160c81b90940490931660e0850152835260018401549182169583018690526401000000009091041692810192909252600290810154606083015293945092908290611b59908890611809565b815260208082019290925260409081016000908120868252600390935290812054825492935063ffffffff1691611b929060019061417a565b9050808263ffffffff1614611c66576000838281548110611bb557611bb5614474565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16905080848463ffffffff1681548110611bf657611bf6614474565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff1602179055508260036000611c388b85611809565b815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550505b82805480611c7657611c766147f7565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a02191690559190925585518051910151611cbd928a9291908a90611f45565b600085815260046020908152604080832080546001600160d01b03191681556001810180546001600160c01b031916905560020192909255905163ffffffff881681526001600160a01b038916917f8c1bcc5bc952f57b9bb9ca11fcfe46e46cdcc85cfab32adaef297a52892b39019101610caa565b60405163180c930960e01b81526001600160a01b0382811660048301526001917f00000000000000000000000000000000000000000000000000000000000000009091169063180c930990602401602060405180830381865afa158015611d9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc2919061481d565b611dca575060005b604051632a90cead60e11b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000016906355219d5a90602401602060405180830381865afa158015611e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e54919061481d565b611e5c575060005b8061033557604051633177657b60e21b815260040160405180910390fd5b80516001600160a01b031615611f425780516001600160a01b03163b611eb35760405163d58d525360e01b815260040160405180910390fd5b80516040516301ffc9a760e01b815263732d321f60e01b60048201526001600160a01b03909116906301ffc9a790602401602060405180830381865afa158015611f01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f25919061481d565b611f4257604051633abeb36560e21b815260040160405180910390fd5b50565b6040516308455c3d60e41b81526001600160a01b03868116600483015263ffffffff8086166024840152841660448301528215159190861690638455c3d090606401602060405180830381865afa158015611fa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc8919061481d565b1503610f2a5760008161201e5760405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b03166345248a6160e11b179052612063565b60405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b031663023ef5a960e01b1790525b90506000866001600160a01b03166338997b11876000856040518463ffffffff1660e01b815260040161209893929190614838565b6000604051808303816000875af11580156120b7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526120df91908101906148ac565b90506000818060200190518101906120f7919061481d565b90508061211657604051627db9bf60e11b815260040160405180910390fd5b5050505050505050565b6002600054036121725760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105e5565b6002600055565b600061218783836000612a63565b60405163ffffffff841681529091506001600160a01b038416907f30bcdb9ee7609081b23f2866129f2079d711802265ba54036d4f8bf6c62229779060200160405180910390a292915050565b60005b8151811015610335576122048282815181106121f5576121f5614474565b60200260200101518351612d44565b6001016121d7565b60405163d8cd9c1b60e01b81526001600160a01b03868116600483015263ffffffff808616602484015284166044830152821515919086169063d8cd9c1b90606401602060405180830381865afa15801561226b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228f919061481d565b1503610f2a576000816122e55760405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b031663014b0af760e41b17905261232a565b60405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b03166339404bed60e21b1790525b90506000866001600160a01b03166338997b11876000856040518463ffffffff1660e01b815260040161235f93929190614838565b6000604051808303816000875af115801561237e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526123a691908101906148ac565b90506000818060200190518101906123be919061481d565b905080612116576040516334eb2f4560e21b815260040160405180910390fd5b6001816080015160018111156123f6576123f6613b34565b036124b45760408101516001600160a01b03163b61242757604051630b6f131360e21b815260040160405180910390fd5b60408082015190516301ffc9a760e01b8152600060048201526001600160a01b03909116906301ffc9a790602401602060405180830381865afa158015612472573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612496919061481d565b15611f4257604051630b6f131360e21b815260040160405180910390fd5b60408101516001600160a01b0316611f4257604051630b6f131360e21b815260040160405180910390fd5b805160009081906001600160a01b0316612505575050604081015160019060ff166125a8565b825160208401516040516389a78a0360e01b81526001600160a01b03878116600483015263ffffffff90921660248201529116906389a78a0390604401602060405180830381865afa15801561255f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061258391906148e0565b91508160ff1660010361259e5750604082015160ff166125a8565b50606082015160ff165b9250929050565b60405163aac61a1f60e01b81526001600160a01b0385811660048301526024820185905260009182917f0000000000000000000000000000000000000000000000000000000000000000169063aac61a1f90604401602060405180830381865afa158015612621573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061264591906148fd565b90506001600160a01b0386161561273b576040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044810182905260009060640160408051601f198184030181529181526020820180516001600160e01b031663095ea7b360e01b179052516338997b1160e01b81529091506001600160a01b038916906338997b11906126f1908a906000908690600401614838565b6000604051808303816000875af1158015612710573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261273891908101906148ac565b50505b60006001600160a01b038716612797576040516001600160a01b0380871660248301528516604482015260640160408051601f198184030181529190526020810180516001600160e01b031663d66672c960e01b1790526127ee565b6040516001600160a01b0380891660248301526044820184905280871660648301528516608482015260a40160408051601f198184030181529190526020810180516001600160e01b0316630bceddc760e01b1790525b9050876001600160a01b03166338997b117f000000000000000000000000000000000000000000000000000000000000000060006001600160a01b03168a6001600160a01b031614612841576000612843565b845b846040518463ffffffff1660e01b815260040161286293929190614838565b6000604051808303816000875af1158015612881573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526128a991908101906148ac565b5090979650505050505050565b81516020830151604051632b8c165760e11b81526001600160a01b03868116600483015263ffffffff90921660248201529116906357182cae90604401602060405180830381865afa158015612910573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612934919061481d565b15612a5957602082015160405163ffffffff909116602482015260009060440160408051601f198184030181529181526020820180516001600160e01b03166303d049bb60e01b179052845190516338997b1160e01b81529192506000916001600160a01b038716916338997b11916129b4919085908790600401614838565b6000604051808303816000875af11580156129d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526129fb91908101906148ac565b9050600081806020019051810190612a13919061481d565b905080612a515784516020860151604051637b81003760e01b81526001600160a01b03909216600483015263ffffffff1660248201526044016105e5565b505050505050565b6104d28382611aae565b60008060016000612a748787611809565b81526020019081526020016000206001018361ffff1681548110612a9a57612a9a614474565b600091825260208083206040805160c081018252600290940290910180546001600160a01b03811685840190815263ffffffff600160a01b830416606087015260ff600160c01b830481166080880152600160c81b90920490911660a0860152845260018101805483518186028101860190945280845294959194868501949192909184015b82821015612c4e5760008481526020908190206040805160a0810190915260058502909101805460e01b6001600160e01b03191682526001810180549293919291840191612b6d906144b6565b80601f0160208091040260200160405190810160405280929190818152602001828054612b99906144b6565b8015612be65780601f10612bbb57610100808354040283529160200191612be6565b820191906000526020600020905b815481529060010190602001808311612bc957829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff166001811115612c2a57612c2a613b34565b6001811115612c3b57612c3b613b34565b8152505081526020019060010190612b20565b50505050815250509050600080612c698784600001516124df565b915091508160ff16600103612d135760005b836020015151811015612cc8576000612cb18986602001518481518110612ca457612ca4614474565b6020026020010151612d7f565b9050612cbd8187614916565b955050600101612c7b565b50866001600160a01b03167f9e69fce51107df6a8ea6c6add2311f64f842e81c07b565c38864bd16f098739f87878660200151604051612d0a93929190614929565b60405180910390a25b61ffff811615612d3a576000612d2a888884612a63565b9050612d368186614916565b9450505b5050509392505050565b81516060015160ff16811080612d61575081516040015160ff1681105b156103355760405163656fba4b60e01b815260040160405180910390fd5b6040808201518251602084015192516334dcc79760e01b8152600093849384936001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016936334dcc79793612dde939291600401614952565b6040805180830381865afa158015612dfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e1e9190614986565b91509150600081612e30576000612e9a565b6040516370a0823160e01b81526001600160a01b0387811660048301528416906370a0823190602401602060405180830381865afa158015612e76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e9a91906148fd565b9050612ea68686613174565b845160405163d659e5d160e01b81526001600160e01b031990911660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d659e5d1906024016040805180830381865afa158015612f19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f3d91906149bb565b5190508215613099576040516370a0823160e01b81526001600160a01b038881166004830152600091908616906370a0823190602401602060405180830381865afa158015612f90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fb491906148fd565b9050600080836002811115612fcb57612fcb613b34565b14612fdf57612fda848361417a565b612fe9565b612fe9828561417a565b885160405163f25be75360e01b81526001600160a01b0389811660048301526001600160e01b03199092166024820152604481018390529192507f0000000000000000000000000000000000000000000000000000000000000000169063f25be75390606401602060405180830381865afa15801561306c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061309091906148fd565b96505050613129565b604051638b33fc9960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638b33fc99906130e59084906004016149fb565b602060405180830381865afa158015613102573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061312691906148fd565b94505b866001600160a01b03167ff527f5594cdc8f8c00b64622e3fdd624abd1588919811d4f526c6b91e9288067876040516131629190614a15565b60405180910390a25050505092915050565b600081600001518260200151604051602001613191929190614a28565b60408051601f1981840301815291905290506000826080015160018111156131bb576131bb613b34565b0361324557826001600160a01b03166338997b1183604001518460600151846040518463ffffffff1660e01b81526004016131f893929190614838565b6000604051808303816000875af1158015613217573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261323f91908101906148ac565b50505050565b600082604001516001600160a01b0316826040516132639190614a59565b6000604051808303816000865af19150503d80600081146132a0576040519150601f19603f3d011682016040523d82523d6000602084013e6132a5565b606091505b509150506000818060200190518101906132bf9190614a6b565b905060005b8151811015612a5157856001600160a01b03166338997b118383815181106132ee576132ee614474565b60200260200101516000015184848151811061330c5761330c614474565b60200260200101516020015185858151811061332a5761332a614474565b6020026020010151604001516040518463ffffffff1660e01b815260040161335493929190614838565b6000604051808303816000875af1158015613373573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261339b91908101906148ac565b506001016132c4565b5080546000825560020290600052602060002090810190611f429190613466565b604051806101800160405280606081526020016060815260200160608152602001606081526020016000151581526020016000151581526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6040805180820190915260008152602081016134616040805160608101909152806000815260006020820181905260409091015290565b905290565b808211156134945780546001600160d01b0319168155600061348b6001830182613498565b50600201613466565b5090565b5080546000825560050290600052602060002090810190611f4291905b8082111561349457805463ffffffff1916815560006134d76001830182613505565b506002810180546001600160a01b03191690556000600382015560048101805460ff191690556005016134b5565b508054613511906144b6565b6000825580601f10613521575050565b601f016020900490600052602060002090810190611f4291905b80821115613494576000815560010161353b565b80356001600160e01b03198116811461356757600080fd5b919050565b60006020828403121561357e57600080fd5b6135878261354f565b9392505050565b63ffffffff81168114611f4257600080fd5b6000602082840312156135b257600080fd5b81356135878161358e565b6001600160a01b0381168114611f4257600080fd5b8035613567816135bd565b600080604083850312156135f057600080fd5b82356135fb816135bd565b9150602083013561360b8161358e565b809150509250929050565b60ff81168114611f4257600080fd5b60008083601f84011261363757600080fd5b5081356001600160401b0381111561364e57600080fd5b6020830191508360208285010111156125a857600080fd5b60008060008060006080868803121561367e57600080fd5b853561368981613616565b94506020860135613699816135bd565b93506040860135925060608601356001600160401b038111156136bb57600080fd5b6136c788828901613625565b969995985093965092949392505050565b6000806000604084860312156136ed57600080fd5b83356136f881613616565b925060208401356001600160401b0381111561371357600080fd5b61371f86828701613625565b9497909650939450505050565b60005b8381101561374757818101518382015260200161372f565b50506000910152565b6000815180845261376881602086016020860161372c565b601f01601f19169290920160200192915050565b60208152600082516080602084015261379860a0840182613750565b90506020840151601f198483030160408501526137b58282613750565b9150506040840151601f198483030160608501526137d38282613750565b6060860151858203601f190160808701528051808352919350602090810192508084019190600582901b85010160005b8281101561385557858203601f19018452845180516001600160e01b031916835260209081015160409184018290529061383f90840182613750565b6020968701969590950194925050600101613803565b50979650505050505050565b600080600080600085870361010081121561387b57600080fd5b86356138868161358e565b955060208701356138968161358e565b945060408701356138a6816135bd565b9350606087013592506080607f19820112156138c157600080fd5b506080860190509295509295909350565b6020815260006135876020830184613750565b600080600080606085870312156138fb57600080fd5b84356139068161358e565b93506020850135613916816135bd565b925060408501356001600160401b0381111561393157600080fd5b8501601f8101871361394257600080fd5b80356001600160401b0381111561395857600080fd5b8760208260051b840101111561396d57600080fd5b949793965060200194505050565b6000806020838503121561398e57600080fd5b82356001600160401b038111156139a457600080fd5b6139b085828601613625565b90969095509350505050565b6000806000606084860312156139d157600080fd5b83356139dc81613616565b925060208401356001600160401b038111156139f757600080fd5b84016101608187031215613a0a57600080fd5b929592945050506040919091013590565b600080600060608486031215613a3057600080fd5b8335613a3b8161358e565b92506020840135613a4b816135bd565b91506040840135613a5b816135bd565b809150509250925092565b600081518084526020840193506020830160005b82811015613aa25781516001600160e01b031916865260209586019590910190600101613a7a565b5093949350505050565b600082825180855260208501945060208160051b8301016020850160005b83811015613b2857848303601f19018852815180516001600160a01b03168452602080820151151590850152604090810151606091850182905290613b1190850182613a66565b6020998a0199909450929092019150600101613aca565b50909695505050505050565b634e487b7160e01b600052602160045260246000fd5b805160058110613b5c57613b5c613b34565b825260208181015160ff1690830152604090810151910152565b600081518084526020840193506020830160005b82811015613aa257815180516001600160e01b031916875260209081015190613bb590880182613b4a565b506080959095019460209190910190600101613b8a565b600081518084526020840193506020830160005b82811015613aa257815163ffffffff60e01b81511687526020810151613c096020890182613b4a565b5060400151613c1b6080880182613b4a565b5060e0959095019460209190910190600101613be0565b60208152600082516101806020840152613c506101a0840182613a66565b90506020840151601f19848303016040850152613c6d8282613a66565b9150506040840151601f19848303016060850152613c8b8282613a66565b9150506060840151601f19848303016080850152613ca98282613a66565b9150506080840151613cbf60a085018215159052565b5060a084015180151560c08501525060c0840151838203601f190160e0850152613ce98282613aac565b91505060e0840151601f1984830301610100850152613d088282613b76565b915050610100840151601f1984830301610120850152613d288282613b76565b915050610120840151601f1984830301610140850152613d488282613b76565b915050610140840151601f1984830301610160850152613d688282613b76565b915050610160840151601f1984830301610180850152613d888282613bcc565b95945050505050565b60028110613da157613da1613b34565b9052565b63ffffffff60e01b81511682526000602082015160a06020850152613dcd60a0850182613750565b905060018060a01b036040840151166040850152606083015160608501526080830151613dfd6080860182613d91565b509392505050565b600082825180855260208501945060208160051b8301016020850160005b83811015613b2857601f19858403018852613e3f838351613da5565b6020988901989093509190910190600101613e23565b602080825282516001600160a01b031682820152828101516040808401528051606084018190526000926080600583901b86018101939091019190850190845b81811015613f1357868503607f190183528351805180516001600160a01b0316875260208082015163ffffffff169088015260408082015160ff9081169189019190915260609182015116908701526020015160a060808701819052613efd90870182613e05565b9550506020938401939290920191600101613e95565b50929695505050505050565b6001600160e01b031992909216825260ff16602082015260400190565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715613f7457613f74613f3c565b60405290565b60405160a081016001600160401b0381118282101715613f7457613f74613f3c565b604051606081016001600160401b0381118282101715613f7457613f74613f3c565b604051601f8201601f191681016001600160401b0381118282101715613fe657613fe6613f3c565b604052919050565b60006080828403121561400057600080fd5b604051608081016001600160401b038111828210171561402257614022613f3c565b6040529050808235614033816135bd565b815260208301356140438161358e565b6020820152604083013561405681613616565b6040820152606083013561406981613616565b6060919091015292915050565b60006080828403121561408857600080fd5b6135878383613fee565b6000602082840312156140a457600080fd5b8135613587816135bd565b81356140ba816135bd565b81546001600160a01b031981166001600160a01b0392909216918217835560208401356140e68161358e565b63ffffffff60a01b60a09190911b166001600160c01b03198216831781178455604085013561411481613616565b6001600160c81b0319929092169092179190911760c09190911b60ff60c01b161781556000606083013561414781613616565b825460ff60c81b191660c89190911b60ff60c81b16179091555050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561047957610479614164565b63ffffffff868116825285166020820152610100810184356141ae816135bd565b6001600160a01b0316604083015260208501356141ca8161358e565b63ffffffff16606083015260408501356141e381613616565b60ff16608083015260608501356141f981613616565b60ff1660a08301526001600160a01b039390931660c082015260e001529392505050565b60006001600160401b0382111561423657614236613f3c565b5060051b60200190565b60006001600160401b0382111561425957614259613f3c565b50601f01601f191660200190565b80356002811061356757600080fd5b600060a0828403121561428857600080fd5b614290613f52565b905061429c8383613fee565b815260808201356001600160401b038111156142b757600080fd5b8201601f810184136142c857600080fd5b80356142db6142d68261421d565b613fbe565b8082825260208201915060208360051b8501019250868311156142fd57600080fd5b602084015b838110156143f45780356001600160401b0381111561432057600080fd5b850160a0818a03601f1901121561433657600080fd5b61433e613f7a565b61434a6020830161354f565b815260408201356001600160401b0381111561436557600080fd5b82016020810190603f018b1361437a57600080fd5b80356143886142d682614240565b8181528c602083850101111561439d57600080fd5b816020840160208301376000602083830101528060208501525050506143c5606083016135d2565b6040820152608082013560608201526143e060a08301614267565b608082015284525060209283019201614302565b5060208501525091949350505050565b60006144126142d68461421d565b8381526020810190600585901b84013681111561442e57600080fd5b845b818110156144695780356001600160401b0381111561444e57600080fd5b61445a36828901614276565b85525060209384019301614430565b509095945050505050565b634e487b7160e01b600052603260045260246000fd5b60008235609e198336030181126144a057600080fd5b9190910192915050565b60006104793683614276565b600181811c908216806144ca57607f821691505b6020821081036144ea57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104d257806000526020600020601f840160051c810160208510156145175750805b601f840160051c820191505b81811015610f2a5760008155600101614523565b81516001600160401b0381111561455057614550613f3c565b6145648161455e84546144b6565b846144f0565b6020601f82116001811461459857600083156145805750848201515b600019600385901b1c1916600184901b178455610f2a565b600084815260208120601f198516915b828110156145c857878501518255602094850194600190920191016145a8565b50848210156145e65786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b63ffffffff8416815260018060a01b038316602082015260606040820152600060a0820160018060a01b038454166060840152600184016040608085015281815480845260c08601915060c08160051b8701019350826000526020600020925060005b818110156147e95760bf1987860301835260a08501845460018060a01b038116875263ffffffff8160a01c16602088015260ff8160c01c16604088015260ff8160c81c166060880152506001850160a0608088015281815480845260c08901915060c08160051b8a01019350826000526020600020925060005b818110156147cc5789850360bf19018352835460e01b6001600160e01b031916855260a0602086015260018401805460009061470d816144b6565b8060a08a0152600182166000811461472c57600181146147485761477c565b60ff19831660c08b015260c082151560051b8b0101935061477c565b84600052602060002060005b838110156147735781548c820160c00152600190910190602001614754565b8b0160c0019450505b50505060028601546001600160a01b0316604088015260038601546060880152600486015460ff1691506147b36080880183613d91565b95505060059390930192602092909201916001016146d2565b509297505050600294909401935060209290920191600101614658565b509298975050505050505050565b634e487b7160e01b600052603160045260246000fd5b8051801515811461356757600080fd5b60006020828403121561482f57600080fd5b6135878261480d565b60018060a01b0384168152826020820152606060408201526000613d886060830184613750565b600082601f83011261487057600080fd5b815161487e6142d682614240565b81815284602083860101111561489357600080fd5b6148a482602083016020870161372c565b949350505050565b6000602082840312156148be57600080fd5b81516001600160401b038111156148d457600080fd5b6148a48482850161485f565b6000602082840312156148f257600080fd5b815161358781613616565b60006020828403121561490f57600080fd5b5051919050565b8082018082111561047957610479614164565b63ffffffff8416815261ffff83166020820152606060408201526000613d886060830184613e05565b6001600160a01b03841681526001600160e01b031983166020820152606060408201819052600090613d8890830184613750565b6000806040838503121561499957600080fd5b82516149a4816135bd565b91506149b26020840161480d565b90509250929050565b600060408284031280156149ce57600080fd5b506149d7613f52565b8251600381106149e657600080fd5b81526020928301519281019290925250919050565b6020810160038310614a0f57614a0f613b34565b91905290565b6020815260006135876020830184613da5565b6001600160e01b0319831681528151600090614a4b81600485016020870161372c565b919091016004019392505050565b600082516144a081846020870161372c565b600060208284031215614a7d57600080fd5b81516001600160401b03811115614a9357600080fd5b8201601f81018413614aa457600080fd5b8051614ab26142d68261421d565b8082825260208201915060208360051b850101925086831115614ad457600080fd5b602084015b83811015614b6c5780516001600160401b03811115614af757600080fd5b85016060818a03601f19011215614b0d57600080fd5b614b15613f9c565b6020820151614b23816135bd565b81526040820151602082015260608201516001600160401b03811115614b4857600080fd5b614b578b60208386010161485f565b60408301525084525060209283019201614ad9565b50969550505050505056fea2646970667358221220f13ea13d32f3aabbbec3bfac913fd5b8c6b8a93dbad5553ffb5ee580000981a464736f6c634300081c0033";

type StrategyBuilderPluginConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategyBuilderPluginConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategyBuilderPlugin__factory extends ContractFactory {
  constructor(...args: StrategyBuilderPluginConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeController: AddressLike,
    _feeHandler: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _feeController,
      _feeHandler,
      overrides || {}
    );
  }
  override deploy(
    _feeController: AddressLike,
    _feeHandler: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _feeController,
      _feeHandler,
      overrides || {}
    ) as Promise<
      StrategyBuilderPlugin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): StrategyBuilderPlugin__factory {
    return super.connect(runner) as StrategyBuilderPlugin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyBuilderPluginInterface {
    return new Interface(_abi) as StrategyBuilderPluginInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StrategyBuilderPlugin {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StrategyBuilderPlugin;
  }
}
