/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  StrategyBuilderPlugin,
  StrategyBuilderPluginInterface,
} from "../../contracts/StrategyBuilderPlugin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeController",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeHandler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_actionRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "AutomationAlreadyExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "condition",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "AutomationNotExecutable",
    type: "error",
  },
  {
    inputs: [],
    name: "AutomationNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "ChangeStrategyInConditionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "FeeExceedMaxFee",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAction",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidActionTarget",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCondition",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidConditionAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNextStepIndex",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStepArrayLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stepIndex",
        type: "uint256",
      },
    ],
    name: "NoConditionOrActions",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "NotContractCaller",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
    ],
    name: "NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentTokenNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "PluginExecutionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyAlreadyExist",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyIsInUse",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "condition",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "UpdateConditionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "changeAutomationInConditionFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "parameter",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum IStrategyBuilderPlugin.ActionType",
            name: "actionType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Action",
        name: "action",
        type: "tuple",
      },
    ],
    name: "ActionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "conditionAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "result1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "result0",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Condition",
        name: "condition",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxFeeAmount",
        type: "uint256",
      },
    ],
    name: "AutomationCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
    ],
    name: "AutomationDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInToken",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInUSD",
        type: "uint256",
      },
    ],
    name: "AutomationExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "conditionAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "id",
                    type: "uint32",
                  },
                  {
                    internalType: "uint8",
                    name: "result1",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "result0",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Condition",
                name: "condition",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "selector",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "parameter",
                    type: "bytes",
                  },
                  {
                    internalType: "address",
                    name: "target",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderPlugin.ActionType",
                    name: "actionType",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Action[]",
                name: "actions",
                type: "tuple[]",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
            name: "steps",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Strategy",
        name: "strategy",
        type: "tuple",
      },
    ],
    name: "StrategyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
    ],
    name: "StrategyDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
    ],
    name: "StrategyExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "stepId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "parameter",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum IStrategyBuilderPlugin.ActionType",
            name: "actionType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Action[]",
        name: "actions",
        type: "tuple[]",
      },
    ],
    name: "StrategyStepExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "AUTHOR",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "actionRegistry",
    outputs: [
      {
        internalType: "contract IActionRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "automation",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "conditionAddress",
                type: "address",
              },
              {
                internalType: "uint32",
                name: "id",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "result1",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "result0",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Condition",
            name: "condition",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "strategyId",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxFeeAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Automation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxFeeInUSD",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "conditionAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "result1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "result0",
            type: "uint8",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "createAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "conditionAddress",
                type: "address",
              },
              {
                internalType: "uint32",
                name: "id",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "result1",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "result0",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Condition",
            name: "condition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "selector",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "parameter",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum IStrategyBuilderPlugin.ActionType",
                name: "actionType",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Action[]",
            name: "actions",
            type: "tuple[]",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
        name: "steps",
        type: "tuple[]",
      },
    ],
    name: "createStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "deleteAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "deleteStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "beneficary",
        type: "address",
      },
    ],
    name: "executeAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "executeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeController",
    outputs: [
      {
        internalType: "contract IFeeController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeHandler",
    outputs: [
      {
        internalType: "contract IFeeHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "getStorageId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onInstall",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onUninstall",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pluginManifest",
    outputs: [
      {
        components: [
          {
            internalType: "bytes4[]",
            name: "interfaceIds",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "dependencyInterfaceIds",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "executionFunctions",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "permittedExecutionSelectors",
            type: "bytes4[]",
          },
          {
            internalType: "bool",
            name: "permitAnyExternalAddress",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "canSpendNativeToken",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "address",
                name: "externalAddress",
                type: "address",
              },
              {
                internalType: "bool",
                name: "permitAnySelector",
                type: "bool",
              },
              {
                internalType: "bytes4[]",
                name: "selectors",
                type: "bytes4[]",
              },
            ],
            internalType: "struct ManifestExternalCallPermission[]",
            name: "permittedExternalCalls",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "userOpValidationFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "runtimeValidationFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "preUserOpValidationHooks",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "preRuntimeValidationHooks",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "preExecHook",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "postExecHook",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestExecutionHook[]",
            name: "executionHooks",
            type: "tuple[]",
          },
        ],
        internalType: "struct PluginManifest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pluginMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "string",
            name: "author",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "functionSelector",
                type: "bytes4",
              },
              {
                internalType: "string",
                name: "permissionDescription",
                type: "string",
              },
            ],
            internalType: "struct SelectorPermission[]",
            name: "permissionDescriptors",
            type: "tuple[]",
          },
        ],
        internalType: "struct PluginMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "preExecHookData",
        type: "bytes",
      },
    ],
    name: "postExecutionHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "preExecutionHook",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "preRuntimeValidationHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
    ],
    name: "preUserOpValidationHook",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "runtimeValidationFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "strategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "conditionAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "id",
                    type: "uint32",
                  },
                  {
                    internalType: "uint8",
                    name: "result1",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "result0",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Condition",
                name: "condition",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "selector",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "parameter",
                    type: "bytes",
                  },
                  {
                    internalType: "address",
                    name: "target",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderPlugin.ActionType",
                    name: "actionType",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Action[]",
                name: "actions",
                type: "tuple[]",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
            name: "steps",
            type: "tuple[]",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
    ],
    name: "userOpValidationFunction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051614e90380380614e9083398101604081905261002f9161006d565b60016000556001600160a01b0392831660805290821660a0521660c0526100b0565b80516001600160a01b038116811461006857600080fd5b919050565b60008060006060848603121561008257600080fd5b61008b84610051565b925061009960208501610051565b91506100a760408501610051565b90509250925092565b60805160a05160c051614d6b61012560003960008181610444015261249901526000818161029b01528181611e2a015281816127a6015261294601526000818161032001528181611d960152818161271d01528181612f4601528181613068015281816131c2015261324d0152614d6b6000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806388e18ce4116100de578063ba542eae11610097578063d7ec359811610071578063d7ec35981461040c578063d855198a1461041f578063e4e396781461043f578063ffa1ad741461046657600080fd5b8063ba542eae146103e4578063bfd151c114610248578063c7763130146103f757600080fd5b806388e18ce4146103545780638a91b0e3146103425780639478a77f14610375578063a3f4df7e14610388578063a7be85c6146103be578063af8734831461035457600080fd5b80633bd797b71161014b57806346d60eb21161012557806346d60eb2146102e857806358949453146103085780636999b3771461031b5780636d61fe701461034257600080fd5b80633bd797b7146102835780633c93adee1461029657806342ab2be1146102d557600080fd5b806301ffc9a71461019357806305fe4172146101bb57806308fdca32146101d05780630c7ecd84146102485780631128186d1461025b578063118a53891461026e575b600080fd5b6101a66101a136600461372a565b61048a565b60405190151581526020015b60405180910390f35b6101ce6101c936600461375e565b6104c1565b005b6101e36101de36600461379b565b610519565b60408051825180516001600160a01b03908116835260208083015163ffffffff908116828601528386015160ff908116868801526060948501511684860152908601511660808401529284015190921660a082015291015160c082015260e0016101b2565b6101ce610256366004613824565b6105fe565b6101ce610269366004613896565b610630565b610276610659565b6040516101b2919061393a565b6101ce610291366004613a1f565b610725565b6102bd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101b2565b6101ce6102e336600461375e565b610974565b6102fb6102f6366004613824565b6109d6565b6040516101b29190613a90565b6101ce610316366004613aa3565b610a01565b6102bd7f000000000000000000000000000000000000000000000000000000000000000081565b6101ce610350366004613b39565b5050565b610367610362366004613b7a565b610cea565b6040519081526020016101b2565b6101ce610383366004613bd9565b610d14565b6102fb6040518060400160405280601781526020017629ba3930ba32b3bc90213ab4b63232b91028363ab3b4b760491b81525081565b6102fb6040518060400160405280600781526020016633426c6f636b7360c81b81525081565b6101ce6103f236600461375e565b610f60565b6103ff6112d9565b6040516101b29190613df0565b61036761041a36600461379b565b611838565b61043261042d36600461379b565b61188c565b6040516101b29190614013565b6102bd7f000000000000000000000000000000000000000000000000000000000000000081565b6102fb60405180604001604052806005815260200164312e312e3160d81b81525081565b60006001600160e01b0319821663f23b1ed760e01b14806104bb57506301ffc9a760e01b6001600160e01b03198316145b92915050565b338160006004816104d28585611838565b81526020810191909152604001600020546001600160a01b03160361050a57604051630cc8721760e31b815260040160405180910390fd5b6105143384611add565b505050565b604080516101008101825260006080820181815260a0830182905260c0830182905260e083018290528252602082018190529181018290526060810191909152600460006105678585611838565b8152602080820192909252604090810160002081516101008101835281546001600160a01b038082166080840190815263ffffffff600160a01b8404811660a086015260ff600160c01b8504811660c0870152600160c81b90940490931660e08501528352600184015491821695830195909552640100000000900490931691830191909152600201546060820152905092915050565b6000356001600160e01b031916856040516384b9b37960e01b81526004016106279291906140dd565b60405180910390fd5b6000356001600160e01b031916836040516384b9b37960e01b81526004016106279291906140dd565b6106846040518060800160405280606081526020016060815260200160608152602001606081525090565b6106af6040518060800160405280606081526020016060815260200160608152602001606081525090565b604080518082018252601781527629ba3930ba32b3bc90213ab4b63232b91028363ab3b4b760491b602080830191909152908352815180830183526005815264312e312e3160d81b818301528382015281518083018352600781526633426c6f636b7360c81b9181019190915290820152919050565b338560006004816107368585611838565b81526020810191909152604001600020546001600160a01b03161461076e57604051634dd7513760e11b815260040160405180910390fd5b33866001600061077e8484611838565b8152602001908152602001600020600101805490506000036107b357604051635737b5dd60e01b815260040160405180910390fd5b6107bc87611d74565b6107d36107ce36879003870187614234565b611ebb565b6107fc336107e46020880188614250565b6107f46040890160208a0161375e565b8c6001611f9c565b6000610808338b611838565b60008181526004602052604090209091508681610825828261426d565b50506001810180546001600160a01b038b16640100000000026001600160c01b031990911663ffffffff8d1617179055600281018890556000610868338c611838565b9050600260008281526020019081526020016000208c90806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff160217905550600160026000838152602001908152602001600020805490506108ec9190614338565b6003600085815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550336001600160a01b03167fdb9e062b56198be71327d2a755449c3fe38502eff5c81468ebda215c5e3ffcea8d8d8b8e8e60405161095e95949392919061434b565b60405180910390a2505050505050505050505050565b3381600160006109848484611838565b8152602001908152602001600020600101805490506000036109b957604051635737b5dd60e01b815260040160405180910390fd5b6109c1612177565b6109cb33846121d0565b506105146001600055565b60606000356001600160e01b031916866040516384b9b37960e01b81526004016106279291906140dd565b3384600060016000610a138585611838565b81526020810191909152604001600020600101541115610a465760405163634f694f60e11b815260040160405180910390fd5b610a58610a5384866145c2565b61222b565b600060016000610a68338a611838565b81526020810191909152604001600090812080546001600160a01b0319166001600160a01b03891617815591505b84811015610c9b576000868683818110610ab257610ab2614632565b9050602002810190610ac49190614648565b610acd90614668565b8051519091506001600160a01b031615610b04578051610aec90611ebb565b80518051602090910151610b049133918c6001612286565b6001838101805491820181556000908152602080822084518051600290950290910180549282015160408301516060909301516001600160a01b039096166001600160c01b031990941693909317600160a01b63ffffffff909416939093029290921761ffff60c01b1916600160c01b60ff9283160260ff60c81b191617600160c81b91909416029290921782555b826020015151811015610c9057610bc683602001518281518110610bb957610bb9614632565b6020026020010151612458565b8160010183602001518281518110610be057610be0614632565b6020908102919091018101518254600180820185556000948552938390208251600590920201805463ffffffff191660e09290921c919091178155918101519092820190610c2e90826146f5565b5060408201516002820180546001600160a01b0319166001600160a01b0390921691909117905560608201516003820155608082015160048201805460ff191660018381811115610c8157610c81613cf2565b02179055505050600101610b93565b505050600101610a96565b50336001600160a01b03167f6055ac00abe054259552b545157e716d05be56347e14d86c1492cc51180de26a888884604051610cd9939291906147b3565b60405180910390a250505050505050565b600080356001600160e01b031916846040516384b9b37960e01b81526004016106279291906140dd565b81836000600481610d258585611838565b81526020810191909152604001600020546001600160a01b031603610d5d57604051630cc8721760e31b815260040160405180910390fd5b610d65612177565b6000610d718587611838565b600081815260046020908152604080832081516101008101835281546001600160a01b038082166080840190815263ffffffff600160a01b8404811660a086015260ff600160c01b8504811660c0870152600160c81b90940490931660e08501528084526001850154928316968401969096526401000000009091041692810192909252600201546060820152929350610e0c908890612622565b5090508060ff16600003610e54578151805160209091015160405163586601c960e11b81526001600160a01b03909216600483015263ffffffff166024820152604401610627565b6000610e648884602001516121d0565b90508260600151811115610e8b5760405163735a16a760e11b815260040160405180910390fd5b600060016000610e9f8b8760200151611838565b815260208101919091526040016000908120546001600160a01b0316915082610ec9576000610eda565b610eda8a8660400151858c866126f2565b9050610eeb8a86600001518d612a14565b604080860151815163ffffffff8e1681526001600160a01b039182166020820152918201839052606082018590528b16907ff3b51f5934782975a42d014d05c1bcf64abdb16c56051b2b64208a610987800f9060800160405180910390a2505050505050610f596001600055565b5050505050565b338160016000610f708484611838565b815260200190815260200160002060010180549050600003610fa557604051635737b5dd60e01b815260040160405180910390fd5b6000610fb13385611838565b60008181526002602052604090205490915015610fe157604051634c7ff9bd60e11b815260040160405180910390fd5b60008181526001602081815260408084208151808301835281546001600160a01b0316815293810180548351818602810186019094528084529193858101939290879084015b828210156111f857600084815260208082206040805160c0810182526002870290920180546001600160a01b03811684840190815263ffffffff600160a01b830416606086015260ff600160c01b830481166080870152600160c81b90920490911660a08501528352600181018054835181870281018701909452808452939591948681019491929084015b828210156111e15760008481526020908190206040805160a0810190915260058502909101805460e01b6001600160e01b0319168252600181018054929391929184019161110090614674565b80601f016020809104026020016040519081016040528092919081815260200182805461112c90614674565b80156111795780601f1061114e57610100808354040283529160200191611179565b820191906000526020600020905b81548152906001019060200180831161115c57829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff1660018111156111bd576111bd613cf2565b60018111156111ce576111ce613cf2565b81525050815260200190600101906110b3565b505050508152505081526020019060010190611027565b5050505081525050905060005b8160200151518110156112685760008260200151828151811061122a5761122a614632565b60209081029190910101515180519091506001600160a01b03161561125f5761125f33826000015183602001518a6000612286565b50600101611205565b506000828152600160208190526040822080546001600160a01b0319168155919061129590830182613562565b505060405163ffffffff8616815233907fd422eb39d02e723621702475863a9c9799e4aaa0c2d76dac1ceac800e915700b9060200160405180910390a25050505050565b6112e1613583565b6112e9613583565b604080516001808252818301909252906020808301908036833750505060208201819052805163f23b1ed760e01b919060009061132857611328614632565b6001600160e01b03199290921660209283029190910182015260408051600580825260c0820190925291820160a080368337505050604082018190528051635894945360e01b919060009061137f5761137f614632565b6001600160e01b031990921660209283029190910190910152604081015180516342ab2be160e01b919060019081106113ba576113ba614632565b6001600160e01b03199092166020928302919091019091015260408101518051633bd797b760e01b919060029081106113f5576113f5614632565b6001600160e01b03199092166020928302919091019091015260408101518051635d2a175760e11b9190600390811061143057611430614632565b6001600160e01b031990921660209283029190910190910152604081015180516302ff20b960e11b9190600490811061146b5761146b614632565b6001600160e01b03199290921660209283029190910182015260408051606081018252600281526000928101839052808201929092528051600580825260c0820190925290816020015b6114bd6135e8565b8152602001906001900390816114b557505060e0830190815260408051808201909152635894945360e01b8152602081018390529051805160009061150457611504614632565b602002602001018190525060405180604001604052806342ab2be160e01b6001600160e01b0319168152602001828152508260e0015160018151811061154c5761154c614632565b60200260200101819052506040518060400160405280633bd797b760e01b6001600160e01b0319168152602001828152508260e0015160028151811061159457611594614632565b6020026020010181905250604051806040016040528063ba542eae60e01b6001600160e01b0319168152602001828152508260e001516003815181106115dc576115dc614632565b602002602001018190525060405180604001604052806305fe417260e01b6001600160e01b0319168152602001828152508260e0015160048151811061162457611624614632565b602090810291909101015260408051600580825260c0820190925290816020015b61164d6135e8565b8152602001906001900390816116455750506101408301908152604080518082018252635894945360e01b81528151606081018352600481526000602080830182905293820181905292820152915180519091906116ad576116ad614632565b6020908102919091018101919091526040805180820182526342ab2be160e01b8152815160608101835260048152600081850181905292810192909252918201526101408301518051600190811061170757611707614632565b602090810291909101810191909152604080518082018252633bd797b760e01b8152815160608101835260048152600081850181905292810192909252918201526101408301518051600290811061176157611761614632565b6020908102919091018101919091526040805180820182526302ff20b960e11b815281516060810183526004815260008185018190529281019290925291820152610140830151805160039081106117bb576117bb614632565b602090810291909101810191909152604080518082018252635d2a175760e11b815281516060810190925291820190806004815260006020820181905260409091015290526101408301518051600490811061181957611819614632565b60209081029190910101525060016080820181905260a0820152919050565b6040516bffffffffffffffffffffffff19606084901b1660208201526001600160e01b031960e083901b16603482015260009060380160405160208183030381529060405280519060200120905092915050565b604080518082019091526000815260606020820152600160006118af8585611838565b8152602080820192909252604090810160009081208251808401845281546001600160a01b031681526001820180548551818802810188019096528086529195929486840194909391929184015b82821015611ace57600084815260208082206040805160c0810182526002870290920180546001600160a01b03811684840190815263ffffffff600160a01b830416606086015260ff600160c01b830481166080870152600160c81b90920490911660a08501528352600181018054835181870281018701909452808452939591948681019491929084015b82821015611ab75760008481526020908190206040805160a0810190915260058502909101805460e01b6001600160e01b031916825260018101805492939192918401916119d690614674565b80601f0160208091040260200160405190810160405280929190818152602001828054611a0290614674565b8015611a4f5780601f10611a2457610100808354040283529160200191611a4f565b820191906000526020600020905b815481529060010190602001808311611a3257829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff166001811115611a9357611a93613cf2565b6001811115611aa457611aa4613cf2565b8152505081526020019060010190611989565b5050505081525050815260200190600101906118fd565b50505091525090949350505050565b6000611ae98383611838565b600081815260046020908152604080832081516101008101835281546001600160a01b038082166080840190815263ffffffff600160a01b8404811660a086015260ff600160c01b8504811660c0870152600160c81b90940490931660e0850152835260018401549182169583018690526401000000009091041692810192909252600290810154606083015293945092908290611b88908890611838565b815260208082019290925260409081016000908120868252600390935290812054825492935063ffffffff1691611bc190600190614338565b9050808263ffffffff1614611c95576000838281548110611be457611be4614632565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16905080848463ffffffff1681548110611c2557611c25614632565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff1602179055508260036000611c678b85611838565b815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550505b82805480611ca557611ca56149b5565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a02191690559190925585518051910151611cec928a9291908a90611f9c565b600085815260046020908152604080832080546001600160d01b03191681556001810180546001600160c01b03191690556002018390556003825291829020805463ffffffff19169055905163ffffffff881681526001600160a01b038916917f8c1bcc5bc952f57b9bb9ca11fcfe46e46cdcc85cfab32adaef297a52892b39019101610cd9565b60405163180c930960e01b81526001600160a01b0382811660048301526001917f00000000000000000000000000000000000000000000000000000000000000009091169063180c930990602401602060405180830381865afa158015611ddf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0391906149db565b611e0b575060005b604051632a90cead60e11b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000016906355219d5a90602401602060405180830381865afa158015611e71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e9591906149db565b611e9d575060005b8061035057604051633177657b60e21b815260040160405180910390fd5b80516001600160a01b031615611f995780516001600160a01b03163b611ef45760405163d58d525360e01b815260040160405180910390fd5b80516040516301ffc9a760e01b815263732d321f60e01b60048201526001600160a01b03909116906301ffc9a790602401602060405180830381865afa925050508015611f5e575060408051601f3d908101601f19168201909252611f5b918101906149db565b60015b611f7b57604051633abeb36560e21b815260040160405180910390fd5b8061035057604051633abeb36560e21b815260040160405180910390fd5b50565b6040516308455c3d60e41b81526001600160a01b03868116600483015263ffffffff8086166024840152841660448301528215159190861690638455c3d090606401602060405180830381865afa158015611ffb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061201f91906149db565b1503610f59576000816120755760405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b03166345248a6160e11b1790526120ba565b60405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b031663023ef5a960e01b1790525b90506000866001600160a01b03166338997b11876000856040518463ffffffff1660e01b81526004016120ef939291906149f6565b6000604051808303816000875af115801561210e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526121369190810190614a6a565b905060008180602001905181019061214e91906149db565b90508061216d57604051627db9bf60e11b815260040160405180910390fd5b5050505050505050565b6002600054036121c95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610627565b6002600055565b60006121de83836000612bc1565b60405163ffffffff841681529091506001600160a01b038416907f30bcdb9ee7609081b23f2866129f2079d711802265ba54036d4f8bf6c62229779060200160405180910390a292915050565b8051600081900361224f5760405163a3472cd760e01b815260040160405180910390fd5b60005b818110156105145761227e83828151811061226f5761226f614632565b60200260200101518383612ea2565b600101612252565b60405163d8cd9c1b60e01b81526001600160a01b03868116600483015263ffffffff808616602484015284166044830152821515919086169063d8cd9c1b90606401602060405180830381865afa1580156122e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061230991906149db565b1503610f595760008161235f5760405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b031663014b0af760e41b1790526123a4565b60405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b03166339404bed60e21b1790525b90506000866001600160a01b03166338997b11876000856040518463ffffffff1660e01b81526004016123d9939291906149f6565b6000604051808303816000875af11580156123f8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124209190810190614a6a565b905060008180602001905181019061243891906149db565b90508061216d576040516334eb2f4560e21b815260040160405180910390fd5b60018160800151600181111561247057612470613cf2565b036125f757604081810151905163babcc53960e01b81526001600160a01b0391821660048201527f00000000000000000000000000000000000000000000000000000000000000009091169063babcc53990602401602060405180830381865afa1580156124e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061250691906149db565b61252357604051630b6f131360e21b815260040160405180910390fd5b60408101516001600160a01b03163b61254f57604051630b6f131360e21b815260040160405180910390fd5b60408082015190516301ffc9a760e01b8152631e66287160e21b60048201526001600160a01b03909116906301ffc9a790602401602060405180830381865afa9250505080156125bc575060408051601f3d908101601f191682019092526125b9918101906149db565b60015b6125d957604051630b6f131360e21b815260040160405180910390fd5b8061035057604051630b6f131360e21b815260040160405180910390fd5b60408101516001600160a01b0316611f9957604051630b6f131360e21b815260040160405180910390fd5b805160009081906001600160a01b0316612648575050604081015160019060ff166126eb565b825160208401516040516389a78a0360e01b81526001600160a01b03878116600483015263ffffffff90921660248201529116906389a78a0390604401602060405180830381865afa1580156126a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126c69190614a9e565b91508160ff166001036126e15750604082015160ff166126eb565b50606082015160ff165b9250929050565b60405163aac61a1f60e01b81526001600160a01b0385811660048301526024820185905260009182917f0000000000000000000000000000000000000000000000000000000000000000169063aac61a1f90604401602060405180830381865afa158015612764573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127889190614abb565b90506001600160a01b0386161561287e576040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044810182905260009060640160408051601f198184030181529181526020820180516001600160e01b031663095ea7b360e01b179052516338997b1160e01b81529091506001600160a01b038916906338997b1190612834908a9060009086906004016149f6565b6000604051808303816000875af1158015612853573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261287b9190810190614a6a565b50505b60006001600160a01b0387166128da576040516001600160a01b0380871660248301528516604482015260640160408051601f198184030181529190526020810180516001600160e01b031663d66672c960e01b179052612931565b6040516001600160a01b0380891660248301526044820184905280871660648301528516608482015260a40160408051601f198184030181529190526020810180516001600160e01b0316630bceddc760e01b1790525b90506000886001600160a01b03166338997b117f000000000000000000000000000000000000000000000000000000000000000060006001600160a01b03168b6001600160a01b031614612986576000612988565b855b856040518463ffffffff1660e01b81526004016129a7939291906149f6565b6000604051808303816000875af11580156129c6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526129ee9190810190614a6a565b9050600081806020019051810190612a069190614abb565b9a9950505050505050505050565b81516020830151604051632b8c165760e11b81526001600160a01b03868116600483015263ffffffff90921660248201529116906357182cae90604401602060405180830381865afa158015612a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a9291906149db565b15612bb757602082015160405163ffffffff909116602482015260009060440160408051601f198184030181529181526020820180516001600160e01b03166303d049bb60e01b179052845190516338997b1160e01b81529192506000916001600160a01b038716916338997b1191612b129190859087906004016149f6565b6000604051808303816000875af1158015612b31573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612b599190810190614a6a565b9050600081806020019051810190612b7191906149db565b905080612baf5784516020860151604051637b81003760e01b81526001600160a01b03909216600483015263ffffffff166024820152604401610627565b505050505050565b6105148382611add565b60008060016000612bd28787611838565b81526020019081526020016000206001018361ffff1681548110612bf857612bf8614632565b600091825260208083206040805160c081018252600290940290910180546001600160a01b03811685840190815263ffffffff600160a01b830416606087015260ff600160c01b830481166080880152600160c81b90920490911660a0860152845260018101805483518186028101860190945280845294959194868501949192909184015b82821015612dac5760008481526020908190206040805160a0810190915260058502909101805460e01b6001600160e01b03191682526001810180549293919291840191612ccb90614674565b80601f0160208091040260200160405190810160405280929190818152602001828054612cf790614674565b8015612d445780601f10612d1957610100808354040283529160200191612d44565b820191906000526020600020905b815481529060010190602001808311612d2757829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff166001811115612d8857612d88613cf2565b6001811115612d9957612d99613cf2565b8152505081526020019060010190612c7e565b50505050815250509050600080612dc7878460000151612622565b915091508160ff16600103612e715760005b836020015151811015612e26576000612e0f8986602001518481518110612e0257612e02614632565b6020026020010151612f1c565b9050612e1b8187614ad4565b955050600101612dd9565b50866001600160a01b03167f9e69fce51107df6a8ea6c6add2311f64f842e81c07b565c38864bd16f098739f87878660200151604051612e6893929190614ae7565b60405180910390a25b61ffff811615612e98576000612e88888884612bc1565b9050612e948186614ad4565b9450505b5050509392505050565b82516060015160ff1682111580612ec1575082516040015160ff168211155b15612edf5760405163656fba4b60e01b815260040160405180910390fd5b8251516001600160a01b0316158015612efb5750602083015151155b15610514576040516322f90e1760e11b815260048101829052602401610627565b6040808201518251602084015192516334dcc79760e01b8152600093849384936001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016936334dcc79793612f7b939291600401614b10565b6040805180830381865afa158015612f97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fbb9190614b44565b91509150600081612fcd576000613037565b6040516370a0823160e01b81526001600160a01b0387811660048301528416906370a0823190602401602060405180830381865afa158015613013573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130379190614abb565b90506130438686613311565b845160405163d659e5d160e01b81526001600160e01b031990911660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d659e5d1906024016040805180830381865afa1580156130b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130da9190614b79565b5190508215613236576040516370a0823160e01b81526001600160a01b038881166004830152600091908616906370a0823190602401602060405180830381865afa15801561312d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131519190614abb565b905060008083600281111561316857613168613cf2565b1461317c576131778483614338565b613186565b6131868285614338565b885160405163f25be75360e01b81526001600160a01b0389811660048301526001600160e01b03199092166024820152604481018390529192507f0000000000000000000000000000000000000000000000000000000000000000169063f25be75390606401602060405180830381865afa158015613209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061322d9190614abb565b965050506132c6565b604051638b33fc9960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638b33fc9990613282908490600401614bb9565b602060405180830381865afa15801561329f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132c39190614abb565b94505b866001600160a01b03167ff527f5594cdc8f8c00b64622e3fdd624abd1588919811d4f526c6b91e9288067876040516132ff9190614bd3565b60405180910390a25050505092915050565b80516060906001600160e01b0319166133395750604080516020810190915260008152613361565b815160208084015160405161334f939201614be6565b60405160208183030381529060405290505b60008260800151600181111561337957613379613cf2565b0361340357826001600160a01b03166338997b1183604001518460600151846040518463ffffffff1660e01b81526004016133b6939291906149f6565b6000604051808303816000875af11580156133d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526133fd9190810190614a6a565b50505050565b600082604001516001600160a01b0316826040516134219190614c17565b6000604051808303816000865af19150503d806000811461345e576040519150601f19603f3d011682016040523d82523d6000602084013e613463565b606091505b5091505060008180602001905181019061347d9190614c29565b905060005b8151811015612baf57856001600160a01b03166338997b118383815181106134ac576134ac614632565b6020026020010151600001518484815181106134ca576134ca614632565b6020026020010151602001518585815181106134e8576134e8614632565b6020026020010151604001516040518463ffffffff1660e01b8152600401613512939291906149f6565b6000604051808303816000875af1158015613531573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526135599190810190614a6a565b50600101613482565b5080546000825560020290600052602060002090810190611f999190613624565b604051806101800160405280606081526020016060815260200160608152602001606081526020016000151581526020016000151581526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b60408051808201909152600081526020810161361f6040805160608101909152806000815260006020820181905260409091015290565b905290565b808211156136525780546001600160d01b031916815560006136496001830182613656565b50600201613624565b5090565b5080546000825560050290600052602060002090810190611f9991905b8082111561365257805463ffffffff19168155600061369560018301826136c3565b506002810180546001600160a01b03191690556000600382015560048101805460ff19169055600501613673565b5080546136cf90614674565b6000825580601f106136df575050565b601f016020900490600052602060002090810190611f9991905b8082111561365257600081556001016136f9565b80356001600160e01b03198116811461372557600080fd5b919050565b60006020828403121561373c57600080fd5b6137458261370d565b9392505050565b63ffffffff81168114611f9957600080fd5b60006020828403121561377057600080fd5b81356137458161374c565b6001600160a01b0381168114611f9957600080fd5b80356137258161377b565b600080604083850312156137ae57600080fd5b82356137b98161377b565b915060208301356137c98161374c565b809150509250929050565b60ff81168114611f9957600080fd5b60008083601f8401126137f557600080fd5b5081356001600160401b0381111561380c57600080fd5b6020830191508360208285010111156126eb57600080fd5b60008060008060006080868803121561383c57600080fd5b8535613847816137d4565b945060208601356138578161377b565b93506040860135925060608601356001600160401b0381111561387957600080fd5b613885888289016137e3565b969995985093965092949392505050565b6000806000604084860312156138ab57600080fd5b83356138b6816137d4565b925060208401356001600160401b038111156138d157600080fd5b6138dd868287016137e3565b9497909650939450505050565b60005b838110156139055781810151838201526020016138ed565b50506000910152565b600081518084526139268160208601602086016138ea565b601f01601f19169290920160200192915050565b60208152600082516080602084015261395660a084018261390e565b90506020840151601f19848303016040850152613973828261390e565b9150506040840151601f19848303016060850152613991828261390e565b6060860151858203601f190160808701528051808352919350602090810192508084019190600582901b85010160005b82811015613a1357858203601f19018452845180516001600160e01b03191683526020908101516040918401829052906139fd9084018261390e565b60209687019695909501949250506001016139c1565b50979650505050505050565b6000806000806000858703610100811215613a3957600080fd5b8635613a448161374c565b95506020870135613a548161374c565b94506040870135613a648161377b565b9350606087013592506080607f1982011215613a7f57600080fd5b506080860190509295509295909350565b602081526000613745602083018461390e565b60008060008060608587031215613ab957600080fd5b8435613ac48161374c565b93506020850135613ad48161377b565b925060408501356001600160401b03811115613aef57600080fd5b8501601f81018713613b0057600080fd5b80356001600160401b03811115613b1657600080fd5b8760208260051b8401011115613b2b57600080fd5b949793965060200194505050565b60008060208385031215613b4c57600080fd5b82356001600160401b03811115613b6257600080fd5b613b6e858286016137e3565b90969095509350505050565b600080600060608486031215613b8f57600080fd5b8335613b9a816137d4565b925060208401356001600160401b03811115613bb557600080fd5b84016101608187031215613bc857600080fd5b929592945050506040919091013590565b600080600060608486031215613bee57600080fd5b8335613bf98161374c565b92506020840135613c098161377b565b91506040840135613c198161377b565b809150509250925092565b600081518084526020840193506020830160005b82811015613c605781516001600160e01b031916865260209586019590910190600101613c38565b5093949350505050565b600082825180855260208501945060208160051b8301016020850160005b83811015613ce657848303601f19018852815180516001600160a01b03168452602080820151151590850152604090810151606091850182905290613ccf90850182613c24565b6020998a0199909450929092019150600101613c88565b50909695505050505050565b634e487b7160e01b600052602160045260246000fd5b805160058110613d1a57613d1a613cf2565b825260208181015160ff1690830152604090810151910152565b600081518084526020840193506020830160005b82811015613c6057815180516001600160e01b031916875260209081015190613d7390880182613d08565b506080959095019460209190910190600101613d48565b600081518084526020840193506020830160005b82811015613c6057815163ffffffff60e01b81511687526020810151613dc76020890182613d08565b5060400151613dd96080880182613d08565b5060e0959095019460209190910190600101613d9e565b60208152600082516101806020840152613e0e6101a0840182613c24565b90506020840151601f19848303016040850152613e2b8282613c24565b9150506040840151601f19848303016060850152613e498282613c24565b9150506060840151601f19848303016080850152613e678282613c24565b9150506080840151613e7d60a085018215159052565b5060a084015180151560c08501525060c0840151838203601f190160e0850152613ea78282613c6a565b91505060e0840151601f1984830301610100850152613ec68282613d34565b915050610100840151601f1984830301610120850152613ee68282613d34565b915050610120840151601f1984830301610140850152613f068282613d34565b915050610140840151601f1984830301610160850152613f268282613d34565b915050610160840151601f1984830301610180850152613f468282613d8a565b95945050505050565b60028110613f5f57613f5f613cf2565b9052565b63ffffffff60e01b81511682526000602082015160a06020850152613f8b60a085018261390e565b905060018060a01b036040840151166040850152606083015160608501526080830151613fbb6080860182613f4f565b509392505050565b600082825180855260208501945060208160051b8301016020850160005b83811015613ce657601f19858403018852613ffd838351613f63565b6020988901989093509190910190600101613fe1565b602080825282516001600160a01b031682820152828101516040808401528051606084018190526000926080600583901b86018101939091019190850190845b818110156140d157868503607f190183528351805180516001600160a01b0316875260208082015163ffffffff169088015260408082015160ff9081169189019190915260609182015116908701526020015160a0608087018190526140bb90870182613fc3565b9550506020938401939290920191600101614053565b50929695505050505050565b6001600160e01b031992909216825260ff16602082015260400190565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715614132576141326140fa565b60405290565b60405160a081016001600160401b0381118282101715614132576141326140fa565b604051606081016001600160401b0381118282101715614132576141326140fa565b604051601f8201601f191681016001600160401b03811182821017156141a4576141a46140fa565b604052919050565b6000608082840312156141be57600080fd5b604051608081016001600160401b03811182821017156141e0576141e06140fa565b60405290508082356141f18161377b565b815260208301356142018161374c565b60208201526040830135614214816137d4565b60408201526060830135614227816137d4565b6060919091015292915050565b60006080828403121561424657600080fd5b61374583836141ac565b60006020828403121561426257600080fd5b81356137458161377b565b81356142788161377b565b81546001600160a01b031981166001600160a01b0392909216918217835560208401356142a48161374c565b63ffffffff60a01b60a09190911b166001600160c01b0319821683178117845560408501356142d2816137d4565b6001600160c81b0319929092169092179190911760c09190911b60ff60c01b1617815560006060830135614305816137d4565b825460ff60c81b191660c89190911b60ff60c81b16179091555050565b634e487b7160e01b600052601160045260246000fd5b818103818111156104bb576104bb614322565b63ffffffff8681168252851660208201526101008101843561436c8161377b565b6001600160a01b0316604083015260208501356143888161374c565b63ffffffff16606083015260408501356143a1816137d4565b60ff16608083015260608501356143b7816137d4565b60ff1660a08301526001600160a01b039390931660c082015260e001529392505050565b60006001600160401b038211156143f4576143f46140fa565b5060051b60200190565b60006001600160401b03821115614417576144176140fa565b50601f01601f191660200190565b80356002811061372557600080fd5b600060a0828403121561444657600080fd5b61444e614110565b905061445a83836141ac565b815260808201356001600160401b0381111561447557600080fd5b8201601f8101841361448657600080fd5b8035614499614494826143db565b61417c565b8082825260208201915060208360051b8501019250868311156144bb57600080fd5b602084015b838110156145b25780356001600160401b038111156144de57600080fd5b850160a0818a03601f190112156144f457600080fd5b6144fc614138565b6145086020830161370d565b815260408201356001600160401b0381111561452357600080fd5b82016020810190603f018b1361453857600080fd5b8035614546614494826143fe565b8181528c602083850101111561455b57600080fd5b8160208401602083013760006020838301015280602085015250505061458360608301613790565b60408201526080820135606082015261459e60a08301614425565b6080820152845250602092830192016144c0565b5060208501525091949350505050565b60006145d0614494846143db565b8381526020810190600585901b8401368111156145ec57600080fd5b845b818110156146275780356001600160401b0381111561460c57600080fd5b61461836828901614434565b855250602093840193016145ee565b509095945050505050565b634e487b7160e01b600052603260045260246000fd5b60008235609e1983360301811261465e57600080fd5b9190910192915050565b60006104bb3683614434565b600181811c9082168061468857607f821691505b6020821081036146a857634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561051457806000526020600020601f840160051c810160208510156146d55750805b601f840160051c820191505b81811015610f5957600081556001016146e1565b81516001600160401b0381111561470e5761470e6140fa565b6147228161471c8454614674565b846146ae565b6020601f821160018114614756576000831561473e5750848201515b600019600385901b1c1916600184901b178455610f59565b600084815260208120601f198516915b828110156147865787850151825560209485019460019092019101614766565b50848210156147a45786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b63ffffffff8416815260018060a01b038316602082015260606040820152600060a0820160018060a01b038454166060840152600184016040608085015281815480845260c08601915060c08160051b8701019350826000526020600020925060005b818110156149a75760bf1987860301835260a08501845460018060a01b038116875263ffffffff8160a01c16602088015260ff8160c01c16604088015260ff8160c81c166060880152506001850160a0608088015281815480845260c08901915060c08160051b8a01019350826000526020600020925060005b8181101561498a5789850360bf19018352835460e01b6001600160e01b031916855260a060208601526001840180546000906148cb81614674565b8060a08a015260018216600081146148ea57600181146149065761493a565b60ff19831660c08b015260c082151560051b8b0101935061493a565b84600052602060002060005b838110156149315781548c820160c00152600190910190602001614912565b8b0160c0019450505b50505060028601546001600160a01b0316604088015260038601546060880152600486015460ff1691506149716080880183613f4f565b9550506005939093019260209290920191600101614890565b509297505050600294909401935060209290920191600101614816565b509298975050505050505050565b634e487b7160e01b600052603160045260246000fd5b8051801515811461372557600080fd5b6000602082840312156149ed57600080fd5b613745826149cb565b60018060a01b0384168152826020820152606060408201526000613f46606083018461390e565b600082601f830112614a2e57600080fd5b8151614a3c614494826143fe565b818152846020838601011115614a5157600080fd5b614a628260208301602087016138ea565b949350505050565b600060208284031215614a7c57600080fd5b81516001600160401b03811115614a9257600080fd5b614a6284828501614a1d565b600060208284031215614ab057600080fd5b8151613745816137d4565b600060208284031215614acd57600080fd5b5051919050565b808201808211156104bb576104bb614322565b63ffffffff8416815261ffff83166020820152606060408201526000613f466060830184613fc3565b6001600160a01b03841681526001600160e01b031983166020820152606060408201819052600090613f469083018461390e565b60008060408385031215614b5757600080fd5b8251614b628161377b565b9150614b70602084016149cb565b90509250929050565b60006040828403128015614b8c57600080fd5b50614b95614110565b825160038110614ba457600080fd5b81526020928301519281019290925250919050565b6020810160038310614bcd57614bcd613cf2565b91905290565b6020815260006137456020830184613f63565b6001600160e01b0319831681528151600090614c098160048501602087016138ea565b919091016004019392505050565b6000825161465e8184602087016138ea565b600060208284031215614c3b57600080fd5b81516001600160401b03811115614c5157600080fd5b8201601f81018413614c6257600080fd5b8051614c70614494826143db565b8082825260208201915060208360051b850101925086831115614c9257600080fd5b602084015b83811015614d2a5780516001600160401b03811115614cb557600080fd5b85016060818a03601f19011215614ccb57600080fd5b614cd361415a565b6020820151614ce18161377b565b81526040820151602082015260608201516001600160401b03811115614d0657600080fd5b614d158b602083860101614a1d565b60408301525084525060209283019201614c97565b50969550505050505056fea2646970667358221220bbaeeb12becbd7d46cd36bbfcd2882b892ae2d25f83ba0bd7c766d5dd31d6e9b64736f6c634300081c0033";

type StrategyBuilderPluginConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategyBuilderPluginConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategyBuilderPlugin__factory extends ContractFactory {
  constructor(...args: StrategyBuilderPluginConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeController: AddressLike,
    _feeHandler: AddressLike,
    _actionRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _feeController,
      _feeHandler,
      _actionRegistry,
      overrides || {}
    );
  }
  override deploy(
    _feeController: AddressLike,
    _feeHandler: AddressLike,
    _actionRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _feeController,
      _feeHandler,
      _actionRegistry,
      overrides || {}
    ) as Promise<
      StrategyBuilderPlugin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): StrategyBuilderPlugin__factory {
    return super.connect(runner) as StrategyBuilderPlugin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyBuilderPluginInterface {
    return new Interface(_abi) as StrategyBuilderPluginInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StrategyBuilderPlugin {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StrategyBuilderPlugin;
  }
}
