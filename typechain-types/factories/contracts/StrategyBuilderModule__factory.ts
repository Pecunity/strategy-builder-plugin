/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  StrategyBuilderModule,
  StrategyBuilderModuleInterface,
} from "../../contracts/StrategyBuilderModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeController",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeHandler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_actionRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AutomationAlreadyExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "condition",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "AutomationNotExecutable",
    type: "error",
  },
  {
    inputs: [],
    name: "AutomationNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "ChangeStrategyInConditionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "FeeExceedMaxFee",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidActionTarget",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCondition",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidConditionAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNextStepIndex",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStepArrayLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stepIndex",
        type: "uint256",
      },
    ],
    name: "NoConditionOrActions",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentTokenNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "PluginExecutionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyAlreadyExist",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyIsInUse",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "condition",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "UpdateConditionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "changeAutomationInConditionFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "parameter",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum IStrategyBuilderModule.ActionType",
            name: "actionType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "offset",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "length",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderModule.ParamType",
                    name: "paramType",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderModule.Parameter",
                name: "parameterReplacement",
                type: "tuple",
              },
            ],
            internalType: "struct IStrategyBuilderModule.ContextKey[]",
            name: "inputs",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "offset",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "length",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderModule.ParamType",
                    name: "paramType",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderModule.Parameter",
                name: "parameterReplacement",
                type: "tuple",
              },
            ],
            internalType: "struct IStrategyBuilderModule.ContextKey",
            name: "output",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "result",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderModule.Action",
        name: "action",
        type: "tuple",
      },
    ],
    name: "ActionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "conditionAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "result1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "result0",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderModule.Condition",
        name: "condition",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxFeeAmount",
        type: "uint256",
      },
    ],
    name: "AutomationCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
    ],
    name: "AutomationDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInToken",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInUSD",
        type: "uint256",
      },
    ],
    name: "AutomationExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "contextId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    name: "ContextVariableStored",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "contextId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "conditionAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "id",
                    type: "uint32",
                  },
                  {
                    internalType: "uint8",
                    name: "result1",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "result0",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderModule.Condition",
                name: "condition",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "selector",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "parameter",
                    type: "bytes",
                  },
                  {
                    internalType: "address",
                    name: "target",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderModule.ActionType",
                    name: "actionType",
                    type: "uint8",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "key",
                        type: "string",
                      },
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "offset",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "length",
                            type: "uint256",
                          },
                          {
                            internalType:
                              "enum IStrategyBuilderModule.ParamType",
                            name: "paramType",
                            type: "uint8",
                          },
                        ],
                        internalType: "struct IStrategyBuilderModule.Parameter",
                        name: "parameterReplacement",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct IStrategyBuilderModule.ContextKey[]",
                    name: "inputs",
                    type: "tuple[]",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "key",
                        type: "string",
                      },
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "offset",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "length",
                            type: "uint256",
                          },
                          {
                            internalType:
                              "enum IStrategyBuilderModule.ParamType",
                            name: "paramType",
                            type: "uint8",
                          },
                        ],
                        internalType: "struct IStrategyBuilderModule.Parameter",
                        name: "parameterReplacement",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct IStrategyBuilderModule.ContextKey",
                    name: "output",
                    type: "tuple",
                  },
                  {
                    internalType: "uint8",
                    name: "result",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderModule.Action[]",
                name: "actions",
                type: "tuple[]",
              },
            ],
            internalType: "struct IStrategyBuilderModule.StrategyStep[]",
            name: "steps",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "contextId",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderModule.Strategy",
        name: "strategy",
        type: "tuple",
      },
    ],
    name: "StrategyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
    ],
    name: "StrategyDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
    ],
    name: "StrategyExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "stepId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "parameter",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum IStrategyBuilderModule.ActionType",
            name: "actionType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "offset",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "length",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderModule.ParamType",
                    name: "paramType",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderModule.Parameter",
                name: "parameterReplacement",
                type: "tuple",
              },
            ],
            internalType: "struct IStrategyBuilderModule.ContextKey[]",
            name: "inputs",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "offset",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "length",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderModule.ParamType",
                    name: "paramType",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderModule.Parameter",
                name: "parameterReplacement",
                type: "tuple",
              },
            ],
            internalType: "struct IStrategyBuilderModule.ContextKey",
            name: "output",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "result",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderModule.Action[]",
        name: "actions",
        type: "tuple[]",
      },
    ],
    name: "StrategyStepExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "actionRegistry",
    outputs: [
      {
        internalType: "contract IActionRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "automation",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "conditionAddress",
                type: "address",
              },
              {
                internalType: "uint32",
                name: "id",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "result1",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "result0",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderModule.Condition",
            name: "condition",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "strategyId",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxFeeAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IStrategyBuilderModule.Automation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxFeeInUSD",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "conditionAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "result1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "result0",
            type: "uint8",
          },
        ],
        internalType: "struct IStrategyBuilderModule.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "createAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "conditionAddress",
                type: "address",
              },
              {
                internalType: "uint32",
                name: "id",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "result1",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "result0",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderModule.Condition",
            name: "condition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "selector",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "parameter",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum IStrategyBuilderModule.ActionType",
                name: "actionType",
                type: "uint8",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "offset",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "length",
                        type: "uint256",
                      },
                      {
                        internalType: "enum IStrategyBuilderModule.ParamType",
                        name: "paramType",
                        type: "uint8",
                      },
                    ],
                    internalType: "struct IStrategyBuilderModule.Parameter",
                    name: "parameterReplacement",
                    type: "tuple",
                  },
                ],
                internalType: "struct IStrategyBuilderModule.ContextKey[]",
                name: "inputs",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "offset",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "length",
                        type: "uint256",
                      },
                      {
                        internalType: "enum IStrategyBuilderModule.ParamType",
                        name: "paramType",
                        type: "uint8",
                      },
                    ],
                    internalType: "struct IStrategyBuilderModule.Parameter",
                    name: "parameterReplacement",
                    type: "tuple",
                  },
                ],
                internalType: "struct IStrategyBuilderModule.ContextKey",
                name: "output",
                type: "tuple",
              },
              {
                internalType: "uint8",
                name: "result",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderModule.Action[]",
            name: "actions",
            type: "tuple[]",
          },
        ],
        internalType: "struct IStrategyBuilderModule.StrategyStep[]",
        name: "steps",
        type: "tuple[]",
      },
    ],
    name: "createStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "conditionAddress",
                type: "address",
              },
              {
                internalType: "uint32",
                name: "id",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "result1",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "result0",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderModule.Condition",
            name: "condition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "selector",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "parameter",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum IStrategyBuilderModule.ActionType",
                name: "actionType",
                type: "uint8",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "offset",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "length",
                        type: "uint256",
                      },
                      {
                        internalType: "enum IStrategyBuilderModule.ParamType",
                        name: "paramType",
                        type: "uint8",
                      },
                    ],
                    internalType: "struct IStrategyBuilderModule.Parameter",
                    name: "parameterReplacement",
                    type: "tuple",
                  },
                ],
                internalType: "struct IStrategyBuilderModule.ContextKey[]",
                name: "inputs",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "offset",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "length",
                        type: "uint256",
                      },
                      {
                        internalType: "enum IStrategyBuilderModule.ParamType",
                        name: "paramType",
                        type: "uint8",
                      },
                    ],
                    internalType: "struct IStrategyBuilderModule.Parameter",
                    name: "parameterReplacement",
                    type: "tuple",
                  },
                ],
                internalType: "struct IStrategyBuilderModule.ContextKey",
                name: "output",
                type: "tuple",
              },
              {
                internalType: "uint8",
                name: "result",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderModule.Action[]",
            name: "actions",
            type: "tuple[]",
          },
        ],
        internalType: "struct IStrategyBuilderModule.StrategyStep[]",
        name: "steps",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "contextId",
        type: "bytes32",
      },
    ],
    name: "createStrategyWithExistingContext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "deleteAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "deleteStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "beneficary",
        type: "address",
      },
    ],
    name: "executeAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "executeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "executionManifest",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                internalType: "bool",
                name: "skipRuntimeValidation",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "allowGlobalValidation",
                type: "bool",
              },
            ],
            internalType: "struct ManifestExecutionFunction[]",
            name: "executionFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                internalType: "uint32",
                name: "entityId",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "isPreHook",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isPostHook",
                type: "bool",
              },
            ],
            internalType: "struct ManifestExecutionHook[]",
            name: "executionHooks",
            type: "tuple[]",
          },
          {
            internalType: "bytes4[]",
            name: "interfaceIds",
            type: "bytes4[]",
          },
        ],
        internalType: "struct ExecutionManifest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "feeController",
    outputs: [
      {
        internalType: "contract IFeeController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeHandler",
    outputs: [
      {
        internalType: "contract IFeeHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "getStorageId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onInstall",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onUninstall",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "strategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "conditionAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "id",
                    type: "uint32",
                  },
                  {
                    internalType: "uint8",
                    name: "result1",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "result0",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderModule.Condition",
                name: "condition",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "selector",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "parameter",
                    type: "bytes",
                  },
                  {
                    internalType: "address",
                    name: "target",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderModule.ActionType",
                    name: "actionType",
                    type: "uint8",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "key",
                        type: "string",
                      },
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "offset",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "length",
                            type: "uint256",
                          },
                          {
                            internalType:
                              "enum IStrategyBuilderModule.ParamType",
                            name: "paramType",
                            type: "uint8",
                          },
                        ],
                        internalType: "struct IStrategyBuilderModule.Parameter",
                        name: "parameterReplacement",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct IStrategyBuilderModule.ContextKey[]",
                    name: "inputs",
                    type: "tuple[]",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "key",
                        type: "string",
                      },
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "offset",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "length",
                            type: "uint256",
                          },
                          {
                            internalType:
                              "enum IStrategyBuilderModule.ParamType",
                            name: "paramType",
                            type: "uint8",
                          },
                        ],
                        internalType: "struct IStrategyBuilderModule.Parameter",
                        name: "parameterReplacement",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct IStrategyBuilderModule.ContextKey",
                    name: "output",
                    type: "tuple",
                  },
                  {
                    internalType: "uint8",
                    name: "result",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderModule.Action[]",
                name: "actions",
                type: "tuple[]",
              },
            ],
            internalType: "struct IStrategyBuilderModule.StrategyStep[]",
            name: "steps",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "contextId",
            type: "bytes32",
          },
        ],
        internalType: "struct IStrategyBuilderModule.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051615d2e380380615d2e83398101604081905261002f9161006d565b60016000556001600160a01b0392831660805290821660a0521660c0526100b0565b80516001600160a01b038116811461006857600080fd5b919050565b60008060006060848603121561008257600080fd5b61008b84610051565b925061009960208501610051565b91506100a760408501610051565b90509250925092565b60805160a05160c051615c096101256000396000818161036501526131610152600081816101f901528181611b50015281816120b3015261225301526000818161024b01528181611abc0152818161202a015281816133170152818161343a01528181613594015261361f0152615c096000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80639478a77f116100a2578063ba542eae11610071578063ba542eae146102f9578063d7ec35981461030c578063d855198a1461032d578063dfd19da11461034d578063e4e396781461036057600080fd5b80639478a77f1461027f578063a1308f2714610292578063ae5628c6146102d1578063b70e197f146102e657600080fd5b80633c93adee116100e95780633c93adee146101f457806342ab2be1146102335780636999b377146102465780636d61fe701461026d5780638a91b0e31461026d57600080fd5b806301ffc9a71461011b57806305fe41721461015457806308fdca32146101695780633bd797b7146101e1575b600080fd5b61013f6101293660046144c5565b6001600160e01b03191663228ec3dd60e21b1490565b60405190151581526020015b60405180910390f35b6101676101623660046144f2565b610387565b005b61017c61017736600461452f565b6103df565b60408051825180516001600160a01b03908116835260208083015163ffffffff908116828601528386015160ff908116868801526060948501511684860152908601511660808401529284015190921660a082015291015160c082015260e00161014b565b6101676101ef366004614568565b6104c5565b61021b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161014b565b6101676102413660046144f2565b610714565b61021b7f000000000000000000000000000000000000000000000000000000000000000081565b61016761027b3660046145d9565b5050565b61016761028d36600461464b565b610776565b60408051808201825260208082527f706563756e6974792e73747261746567792d6275696c6465722d6d6f64756c6590820152905161014b91906146e6565b6102d96109c7565b60405161014b91906147a8565b6101676102f436600461489f565b610c2d565b6101676103073660046144f2565b610c88565b61031f61031a36600461452f565b61127b565b60405190815260200161014b565b61034061033b36600461452f565b6112cf565b60405161014b9190614adf565b61016761035b366004614bb6565b61179c565b61021b7f000000000000000000000000000000000000000000000000000000000000000081565b33816000600481610398858561127b565b81526020810191909152604001600020546001600160a01b0316036103d057604051630cc8721760e31b815260040160405180910390fd5b6103da33846117f7565b505050565b604080516101008101825260006080820181815260a0830182905260c0830182905260e0830182905282526020820181905291810182905260608101919091526004600061042d858561127b565b8152602080820192909252604090810160002081516101008101835281546001600160a01b038082166080840190815263ffffffff600160a01b8404811660a086015260ff600160c01b8504811660c0870152600160c81b90940490931660e0850152835260018401549182169583019590955264010000000090049093169183019190915260020154606082015290505b92915050565b338560006004816104d6858561127b565b81526020810191909152604001600020546001600160a01b03161461050e57604051634dd7513760e11b815260040160405180910390fd5b33866001600061051e848461127b565b81526020019081526020016000206001018054905060000361055357604051635737b5dd60e01b815260040160405180910390fd5b61055c87611a9a565b61057361056e36879003870187614d6f565b611be1565b61059c336105846020880188614d8b565b6105946040890160208a016144f2565b8c6001611cc5565b60006105a8338b61127b565b600081815260046020526040902090915086816105c58282614da8565b50506001810180546001600160a01b038b16640100000000026001600160c01b031990911663ffffffff8d1617179055600281018890556000610608338c61127b565b9050600260008281526020019081526020016000208c90806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff1602179055506001600260008381526020019081526020016000208054905061068c9190614e73565b6003600085815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550336001600160a01b03167fdb9e062b56198be71327d2a755449c3fe38502eff5c81468ebda215c5e3ffcea8d8d8b8e8e6040516106fe959493929190614e86565b60405180910390a2505050505050505050505050565b338160016000610724848461127b565b81526020019081526020016000206001018054905060000361075957604051635737b5dd60e01b815260040160405180910390fd5b610761611ea0565b61076b3384611eca565b506103da6001600055565b81836000600481610787858561127b565b81526020810191909152604001600020546001600160a01b0316036107bf57604051630cc8721760e31b815260040160405180910390fd5b6107c7611ea0565b60006107d3858761127b565b600081815260046020908152604080832081516101008101835281546001600160a01b038082166080840190815263ffffffff600160a01b8404811660a086015260ff600160c01b8504811660c0870152600160c81b90940490931660e0850152808452600185015492831696840196909652640100000000909104169281019290925260020154606082015292935061086e908890611f2f565b5090508060ff166000036108bb578151805160209091015160405163586601c960e11b81526001600160a01b03909216600483015263ffffffff1660248201526044015b60405180910390fd5b60006108cb888460200151611eca565b905082606001518111156108f25760405163735a16a760e11b815260040160405180910390fd5b6000600160006109068b876020015161127b565b815260208101919091526040016000908120546001600160a01b0316915082610930576000610941565b6109418a8660400151858c86611fff565b90506109528a86600001518d612321565b604080860151815163ffffffff8e1681526001600160a01b039182166020820152918201839052606082018590528b16907ff3b51f5934782975a42d014d05c1bcf64abdb16c56051b2b64208a610987800f9060800160405180910390a25050505050506109c06001600055565b5050505050565b6109eb60405180606001604052806060815260200160608152602001606081525090565b610a0f60405180606001604052806060815260200160608152602001606081525090565b60408051600680825260e08201909252600091816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610a2757505060408051606081018252639478a77f60e01b8152600160208201526000918101829052825192935091839190610a8b57610a8b614f16565b6020026020010181905250604051806060016040528063dfd19da160e01b6001600160e01b03191681526020016000151581526020016001151581525081600181518110610adb57610adb614f16565b6020026020010181905250604051806060016040528063ba542eae60e01b6001600160e01b03191681526020016000151581526020016001151581525081600281518110610b2b57610b2b614f16565b60200260200101819052506040518060600160405280633bd797b760e01b6001600160e01b03191681526020016000151581526020016001151581525081600381518110610b7b57610b7b614f16565b602002602001018190525060405180606001604052806305fe417260e01b6001600160e01b03191681526020016000151581526020016001151581525081600481518110610bcb57610bcb614f16565b602002602001018190525060405180606001604052806342ab2be160e01b6001600160e01b03191681526020016000151581526020016001151581525081600581518110610c1b57610c1b614f16565b60209081029190910101528152919050565b3385600060016000610c3f858561127b565b81526020810191909152604001600020600101541115610c725760405163634f694f60e11b815260040160405180910390fd5b610c7f87878787876124c6565b50505050505050565b338160016000610c98848461127b565b815260200190815260200160002060010180549050600003610ccd57604051635737b5dd60e01b815260040160405180910390fd5b6000610cd9338561127b565b60008181526002602052604090205490915015610d0957604051634c7ff9bd60e11b815260040160405180910390fd5b6000818152600160208181526040808420815160608101835281546001600160a01b0316815293810180548351818602810186019094528084529193858101939290879084015b8282101561118757600084815260208082206040805160c0810182526002870290920180546001600160a01b03811684840190815263ffffffff600160a01b830416606086015260ff600160c01b830481166080870152600160c81b90920490911660a08501528352600181018054835181870281018701909452808452939591948681019491929084015b82821015611170576000848152602090819020604080516101008101909152600b8502909101805460e01b6001600160e01b03191682526001810180549293919291840191610e2a90614f2c565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5690614f2c565b8015610ea35780601f10610e7857610100808354040283529160200191610ea3565b820191906000526020600020905b815481529060010190602001808311610e8657829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff166001811115610ee757610ee761490b565b6001811115610ef857610ef861490b565b815260200160058201805480602002602001604051908101604052809291908181526020016000905b828210156110455783829060005260206000209060040201604051806040016040529081600082018054610f5490614f2c565b80601f0160208091040260200160405190810160405280929190818152602001828054610f8090614f2c565b8015610fcd5780601f10610fa257610100808354040283529160200191610fcd565b820191906000526020600020905b815481529060010190602001808311610fb057829003601f168201915b505050505081526020016001820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16600381111561101e5761101e61490b565b600381111561102f5761102f61490b565b9052509052508152600190910190602001610f21565b5050505081526020016006820160405180604001604052908160008201805461106d90614f2c565b80601f016020809104026020016040519081016040528092919081815260200182805461109990614f2c565b80156110e65780601f106110bb576101008083540402835291602001916110e6565b820191906000526020600020905b8154815290600101906020018083116110c957829003601f168201915b505050505081526020016001820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1660038111156111375761113761490b565b60038111156111485761114861490b565b9052509052508152600a919091015460ff166020918201529082526001929092019101610ddc565b505050508152505081526020019060010190610d50565b505050508152602001600282015481525050905060005b816020015151811015611201576000826020015182815181106111c3576111c3614f16565b60209081029190910101515180519091506001600160a01b0316156111f8576111f833826000015183602001518a60006129a0565b5060010161119e565b506000828152600160208190526040822080546001600160a01b0319168155919061122e908301826142fd565b5060006002919091015560405163ffffffff8616815233907fd422eb39d02e723621702475863a9c9799e4aaa0c2d76dac1ceac800e915700b906020015b60405180910390a25050505050565b6040516bffffffffffffffffffffffff19606084901b1660208201526001600160e01b031960e083901b16603482015260009060380160405160208183030381529060405280519060200120905092915050565b60408051606080820183526000808352602083019190915291810191909152600160006112fc858561127b565b815260208082019290925260409081016000908120825160608101845281546001600160a01b031681526001820180548551818802810188019096528086529195929486840194909391929184015b8282101561178257600084815260208082206040805160c0810182526002870290920180546001600160a01b03811684840190815263ffffffff600160a01b830416606086015260ff600160c01b830481166080870152600160c81b90920490911660a08501528352600181018054835181870281018701909452808452939591948681019491929084015b8282101561176b576000848152602090819020604080516101008101909152600b8502909101805460e01b6001600160e01b0319168252600181018054929391929184019161142590614f2c565b80601f016020809104026020016040519081016040528092919081815260200182805461145190614f2c565b801561149e5780601f106114735761010080835404028352916020019161149e565b820191906000526020600020905b81548152906001019060200180831161148157829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff1660018111156114e2576114e261490b565b60018111156114f3576114f361490b565b815260200160058201805480602002602001604051908101604052809291908181526020016000905b82821015611640578382906000526020600020906004020160405180604001604052908160008201805461154f90614f2c565b80601f016020809104026020016040519081016040528092919081815260200182805461157b90614f2c565b80156115c85780601f1061159d576101008083540402835291602001916115c8565b820191906000526020600020905b8154815290600101906020018083116115ab57829003601f168201915b505050505081526020016001820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1660038111156116195761161961490b565b600381111561162a5761162a61490b565b905250905250815260019091019060200161151c565b5050505081526020016006820160405180604001604052908160008201805461166890614f2c565b80601f016020809104026020016040519081016040528092919081815260200182805461169490614f2c565b80156116e15780601f106116b6576101008083540402835291602001916116e1565b820191906000526020600020905b8154815290600101906020018083116116c457829003601f168201915b505050505081526020016001820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1660038111156117325761173261490b565b60038111156117435761174361490b565b9052509052508152600a919091015460ff1660209182015290825260019290920191016113d7565b50505050815250508152602001906001019061134b565b505050508152602001600282015481525050905092915050565b33846000600160006117ae858561127b565b815260208101919091526040016000206001015411156117e15760405163634f694f60e11b815260040160405180910390fd5b6117ef8686868660006124c6565b505050505050565b6000611803838361127b565b600081815260046020908152604080832081516101008101835281546001600160a01b038082166080840190815263ffffffff600160a01b8404811660a086015260ff600160c01b8504811660c0870152600160c81b90940490931660e08501528352600184015491821695830186905264010000000090910416928101929092526002908101546060830152939450929082906118a290889061127b565b815260208082019290925260409081016000908120868252600390935290812054825492935063ffffffff16916118db90600190614e73565b9050808263ffffffff16146119af5760008382815481106118fe576118fe614f16565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16905080848463ffffffff168154811061193f5761193f614f16565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555082600360006119818b8561127b565b815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550505b828054806119bf576119bf614f66565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a02191690559190925585518051910151611a06928a9291908a90611cc5565b600085815260046020908152604080832080546001600160d01b03191681556001810180546001600160c01b03191690556002018390556003825291829020805463ffffffff19169055905163ffffffff881681526001600160a01b038916917f8c1bcc5bc952f57b9bb9ca11fcfe46e46cdcc85cfab32adaef297a52892b3901910160405180910390a250505050505050565b60405163180c930960e01b81526001600160a01b0382811660048301526001917f00000000000000000000000000000000000000000000000000000000000000009091169063180c930990602401602060405180830381865afa158015611b05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b299190614f8c565b611b31575060005b604051632a90cead60e11b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000016906355219d5a90602401602060405180830381865afa158015611b97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bbb9190614f8c565b611bc3575060005b8061027b57604051633177657b60e21b815260040160405180910390fd5b80516001600160a01b031615611cc25780516001600160a01b03163b600003611c1d5760405163d58d525360e01b815260040160405180910390fd5b80516040516301ffc9a760e01b815263732d321f60e01b60048201526001600160a01b03909116906301ffc9a790602401602060405180830381865afa925050508015611c87575060408051601f3d908101601f19168201909252611c8491810190614f8c565b60015b611ca457604051633abeb36560e21b815260040160405180910390fd5b8061027b57604051633abeb36560e21b815260040160405180910390fd5b50565b6040516308455c3d60e41b81526001600160a01b03868116600483015263ffffffff8086166024840152841660448301528215159190861690638455c3d090606401602060405180830381865afa158015611d24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d489190614f8c565b15036109c057600081611d9e5760405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b03166345248a6160e11b179052611de3565b60405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b031663023ef5a960e01b1790525b90506000866001600160a01b031663b61d27f6876000856040518463ffffffff1660e01b8152600401611e1893929190614fa7565b6000604051808303816000875af1158015611e37573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611e5f919081019061503f565b9050600081806020019051810190611e779190614f8c565b905080611e9657604051627db9bf60e11b815260040160405180910390fd5b5050505050505050565b600260005403611ec357604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6000611ee283836000611edd878761127b565b612b72565b60405163ffffffff841681529091506001600160a01b038416907f30bcdb9ee7609081b23f2866129f2079d711802265ba54036d4f8bf6c62229779060200160405180910390a292915050565b805160009081906001600160a01b0316611f55575050604081015160019060ff16611ff8565b825160208401516040516389a78a0360e01b81526001600160a01b03878116600483015263ffffffff90921660248201529116906389a78a0390604401602060405180830381865afa158015611faf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd39190615073565b91508160ff16600103611fee5750604082015160ff16611ff8565b50606082015160ff165b9250929050565b60405163aac61a1f60e01b81526001600160a01b0385811660048301526024820185905260009182917f0000000000000000000000000000000000000000000000000000000000000000169063aac61a1f90604401602060405180830381865afa158015612071573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120959190615090565b90506001600160a01b0386161561218b576040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044810182905260009060640160408051601f198184030181529181526020820180516001600160e01b031663095ea7b360e01b17905251635b0e93fb60e11b81529091506001600160a01b0389169063b61d27f690612141908a906000908690600401614fa7565b6000604051808303816000875af1158015612160573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612188919081019061503f565b50505b60006001600160a01b0387166121e7576040516001600160a01b0380871660248301528516604482015260640160408051601f198184030181529190526020810180516001600160e01b031663d66672c960e01b17905261223e565b6040516001600160a01b0380891660248301526044820184905280871660648301528516608482015260a40160408051601f198184030181529190526020810180516001600160e01b0316630bceddc760e01b1790525b90506000886001600160a01b031663b61d27f67f000000000000000000000000000000000000000000000000000000000000000060006001600160a01b03168b6001600160a01b031614612293576000612295565b855b856040518463ffffffff1660e01b81526004016122b493929190614fa7565b6000604051808303816000875af11580156122d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526122fb919081019061503f565b90506000818060200190518101906123139190615090565b9a9950505050505050505050565b81516020830151604051632b8c165760e11b81526001600160a01b03868116600483015263ffffffff90921660248201529116906357182cae90604401602060405180830381865afa15801561237b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061239f9190614f8c565b156124bc57602082015160405163ffffffff909116602482015260009060440160408051601f198184030181529181526020820180516001600160e01b03166303d049bb60e01b17905284519051635b0e93fb60e11b81529192506000916001600160a01b0387169163b61d27f69161241f919085908790600401614fa7565b6000604051808303816000875af115801561243e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612466919081019061503f565b905060008180602001905181019061247e9190614f8c565b9050806117ef5784516020860151604051637b81003760e01b81526001600160a01b03909216600483015263ffffffff1660248201526044016108b2565b6103da83826117f7565b33856000600160006124d8858561127b565b8152602081019190915260400160002060010154111561250b5760405163634f694f60e11b815260040160405180910390fd5b61251d612518858761541d565b6130c5565b60006001600061252d338b61127b565b8152602081019190915260400160002080546001600160a01b0319166001600160a01b0389161781559050831561256457836125b9565b6040516bffffffffffffffffffffffff193360601b1660208201526001600160e01b031960e08a901b166034820152426038820152436058820152607801604051602081830303815290604052805190602001205b600282015560005b8581101561294a5760008787838181106125dd576125dd614f16565b90506020028101906125ef919061548d565b6125f8906154ad565b8051519091506001600160a01b03161561262f57805161261790611be1565b8051805160209091015161262f9133918d60016129a0565b6001838101805491820181556000908152602080822084518051600290950290910180549282015160408301516060909301516001600160a01b039096166001600160c01b031990941693909317600160a01b63ffffffff909416939093029290921761ffff60c01b1916600160c01b60ff9283160260ff60c81b191617600160c81b91909416029290921782555b82602001515181101561293f576126f1836020015182815181106126e4576126e4614f16565b6020026020010151613120565b60008360200151828151811061270957612709614f16565b6020908102919091018101516001858101805480830182556000918252908490206040840151600b909202016002810180546001600160a01b0319166001600160a01b03909316929092179091559282015191935082019061276b9082615500565b50606082015160038201558151815463ffffffff191660e09190911c178155608082015160048201805460ff1916600183818111156127ac576127ac61490b565b021790555060c08201518051600683019081906127c99082615500565b50602082015181600101600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908360038111156128115761281161490b565b021790555050505060e0830151600a8301805460ff191660ff9092169190911790555060208501518051600091908590811061284f5761284f614f16565b602002602001015160a0015151905060005b8181101561292f57826005018760200151868151811061288357612883614f16565b602002602001015160a0015182815181106128a0576128a0614f16565b602090810291909101810151825460018101845560009384529190922082516004909202019081906128d29082615500565b50602082015181600101600082015181600001556020820151816001015560408201518160020160006101000a81548160ff0219169083600381111561291a5761291a61490b565b02179055505060019093019250612861915050565b5050600190920191506126be9050565b5050506001016125c1565b50336001600160a01b03167f2f88e9e67f30855e7d026e329f671147f5cfefd996892d7094c7ee7c6e131912898984600201548560405161298e94939291906156d3565b60405180910390a25050505050505050565b60405163d8cd9c1b60e01b81526001600160a01b03868116600483015263ffffffff808616602484015284166044830152821515919086169063d8cd9c1b90606401602060405180830381865afa1580156129ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a239190614f8c565b15036109c057600081612a795760405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b031663014b0af760e41b179052612abe565b60405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b03166339404bed60e21b1790525b90506000866001600160a01b031663b61d27f6876000856040518463ffffffff1660e01b8152600401612af393929190614fa7565b6000604051808303816000875af1158015612b12573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612b3a919081019061503f565b9050600081806020019051810190612b529190614f8c565b905080611e96576040516334eb2f4560e21b815260040160405180910390fd5b6000818152600160208190526040822001805482919061ffff8616908110612b9c57612b9c614f16565b600091825260208083206040805160c081018252600290940290910180546001600160a01b03811685840190815263ffffffff600160a01b830416606087015260ff600160c01b830481166080880152600160c81b90920490911660a0860152845260018101805483518186028101860190945280845294959194868501949192909184015b82821015612fb6576000848152602090819020604080516101008101909152600b8502909101805460e01b6001600160e01b03191682526001810180549293919291840191612c7090614f2c565b80601f0160208091040260200160405190810160405280929190818152602001828054612c9c90614f2c565b8015612ce95780601f10612cbe57610100808354040283529160200191612ce9565b820191906000526020600020905b815481529060010190602001808311612ccc57829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff166001811115612d2d57612d2d61490b565b6001811115612d3e57612d3e61490b565b815260200160058201805480602002602001604051908101604052809291908181526020016000905b82821015612e8b5783829060005260206000209060040201604051806040016040529081600082018054612d9a90614f2c565b80601f0160208091040260200160405190810160405280929190818152602001828054612dc690614f2c565b8015612e135780601f10612de857610100808354040283529160200191612e13565b820191906000526020600020905b815481529060010190602001808311612df657829003601f168201915b505050505081526020016001820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff166003811115612e6457612e6461490b565b6003811115612e7557612e7561490b565b9052509052508152600190910190602001612d67565b50505050815260200160068201604051806040016040529081600082018054612eb390614f2c565b80601f0160208091040260200160405190810160405280929190818152602001828054612edf90614f2c565b8015612f2c5780601f10612f0157610100808354040283529160200191612f2c565b820191906000526020600020905b815481529060010190602001808311612f0f57829003601f168201915b505050505081526020016001820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff166003811115612f7d57612f7d61490b565b6003811115612f8e57612f8e61490b565b9052509052508152600a919091015460ff166020918201529082526001929092019101612c22565b50505050815250509050600080612fd1888460000151611f2f565b915091508160ff166001036130925760005b8360200151518110156130475760006130308a8660200151848151811061300c5761300c614f16565b6020026020010151600160008b8152602001908152602001600020600201546132ed565b905061303c81876158c8565b955050600101612fe3565b50876001600160a01b03167f1d636ffa25313f69c1bcc8c22b2d92f9bd61c0a5e5ae17c992c745e6325c240b88888660200151604051613089939291906158db565b60405180910390a25b61ffff8116156130ba5760006130aa89898489612b72565b90506130b681866158c8565b9450505b505050949350505050565b805160008190036130e95760405163a3472cd760e01b815260040160405180910390fd5b60005b818110156103da5761311883828151811061310957613109614f16565b602002602001015183836136e4565b6001016130ec565b6001816080015160018111156131385761313861490b565b036132c257604081810151905163babcc53960e01b81526001600160a01b0391821660048201527f00000000000000000000000000000000000000000000000000000000000000009091169063babcc53990602401602060405180830381865afa1580156131aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131ce9190614f8c565b6131eb57604051630b6f131360e21b815260040160405180910390fd5b80604001516001600160a01b03163b60000361321a57604051630b6f131360e21b815260040160405180910390fd5b60408082015190516301ffc9a760e01b8152631e66287160e21b60048201526001600160a01b03909116906301ffc9a790602401602060405180830381865afa925050508015613287575060408051601f3d908101601f1916820190925261328491810190614f8c565b60015b6132a457604051630b6f131360e21b815260040160405180910390fd5b8061027b57604051630b6f131360e21b815260040160405180910390fd5b60408101516001600160a01b0316611cc257604051630b6f131360e21b815260040160405180910390fd5b6040808301518351602085015192516334dcc79760e01b8152600093849384936001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016936334dcc7979361334c939291600401615904565b6040805180830381865afa158015613368573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061338c9190615938565b9150915060008161339e576000613408565b6040516370a0823160e01b81526001600160a01b0388811660048301528416906370a0823190602401602060405180830381865afa1580156133e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134089190615090565b905061341587878761375e565b855160405163d659e5d160e01b81526001600160e01b031990911660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d659e5d1906024016040805180830381865afa158015613488573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134ac919061596d565b5190508215613608576040516370a0823160e01b81526001600160a01b038981166004830152600091908616906370a0823190602401602060405180830381865afa1580156134ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135239190615090565b905060008083600281111561353a5761353a61490b565b1461354e576135498483614e73565b613558565b6135588285614e73565b895160405163f25be75360e01b81526001600160a01b0389811660048301526001600160e01b03199092166024820152604481018390529192507f0000000000000000000000000000000000000000000000000000000000000000169063f25be75390606401602060405180830381865afa1580156135db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135ff9190615090565b96505050613698565b604051638b33fc9960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638b33fc99906136549084906004016159ad565b602060405180830381865afa158015613671573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136959190615090565b94505b876001600160a01b03167f62a4ac0c6cd3887157b4aa27d6d41ae659de8f4c0c06df4154add9fb2845f34d886040516136d191906159c7565b60405180910390a2505050509392505050565b82516060015160ff1682111580613703575082516040015160ff168211155b156137215760405163656fba4b60e01b815260040160405180910390fd5b8251516001600160a01b031615801561373d5750602083015151155b156103da576040516322f90e1760e11b8152600481018290526024016108b2565b602082015160a0830151511561379f576001600160a01b0384166000908152600560209081526040808320858452909152902061379c90849061399e565b90505b82516000906001600160e01b031916156137db5783516040516137c7919084906020016159da565b6040516020818303038152906040526137ec565b604051806020016040528060008152505b905060606000856080015160018111156138085761380861490b565b0361389357856001600160a01b031663b61d27f686604001518760600151856040518463ffffffff1660e01b815260040161384593929190614fa7565b6000604051808303816000875af1158015613864573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261388c919081019061503f565b9050613982565b600085604001516001600160a01b0316836040516138b19190615a0b565b6000604051808303816000865af19150503d80600081146138ee576040519150601f19603f3d011682016040523d82523d6000602084013e6138f3565b606091505b50915050600061390282613a4a565b9050801561394157600080838060200190518101906139219190615af6565b915091506139388a838b60e0015160ff1684613a7e565b9450505061397f565b6000828060200190518101906139579190615b5d565b905061397b89828a60e0015160ff1660405180602001604052806000815250613a7e565b9350505b50505b60c08501515151156117ef576117ef86858760c0015184613be8565b60608260a00151516000036139b8575060208201516104bf565b602083015160005b8460a0015151811015613a425760008560a0015182815181106139e5576139e5614f16565b602002602001015190506139fd816000015151151590565b15613a39576000613a1b868360000151846020015160400151613df8565b805190915015613a3757613a34848360200151836141d7565b93505b505b506001016139c0565b509392505050565b6000604082511015613a5e57506000919050565b602082015160408301518115801590613a7657508181115b949350505050565b60608351831115613ad15760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420657865637574696f6e20696e64657800000000000000000060448201526064016108b2565b606060005b8551811015613bcf576000876001600160a01b031663b61d27f6888481518110613b0257613b02614f16565b602002602001015160000151898581518110613b2057613b20614f16565b6020026020010151602001518a8681518110613b3e57613b3e614f16565b6020026020010151604001516040518463ffffffff1660e01b8152600401613b6893929190614fa7565b6000604051808303816000875af1158015613b87573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613baf919081019061503f565b9050613bbc8260016158c8565b8603613bc6578092505b50600101613ad6565b508315613bdc5780613bde565b825b9695505050505050565b81515115613df2576001600160a01b03841660009081526005602090815260408083208684529091529081902083519151909183918391613c2891615a0b565b90815260200160405180910390209081613c429190615500565b5060008360200151604001516003811115613c5f57613c5f61490b565b03613cb3576020825110613cae57600082806020019051810190613c839190615090565b905080826002018560000151604051613c9c9190615a0b565b90815260405190819003602001902055505b613dbc565b60018360200151604001516003811115613ccf57613ccf61490b565b03613d41576020825110613cae57600082806020019051810190613cf39190615b91565b905080826001018560000151604051613d0c9190615a0b565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550613dbc565b60038360200151604001516003811115613d5d57613d5d61490b565b03613dbc576020825110613dbc57600082806020019051810190613d819190614f8c565b905080826003018560000151604051613d9a9190615a0b565b908152604051908190036020019020805491151560ff19909216919091179055505b837f595a20674d837f48b50301bdce85978fb9794b008dd7077c776aafc94a06074484600001518460405161126c929190615bae565b50505050565b60606000826003811115613e0e57613e0e61490b565b03613f575760008460020184604051613e279190615a0b565b90815260200160405180910390205490506000811180613e73575060008560000185604051613e569190615a0b565b90815260200160405180910390208054613e6f90614f2c565b9050115b15613f515760008111613f2c576040518590613e90908690615a0b565b90815260200160405180910390208054613ea990614f2c565b80601f0160208091040260200160405190810160405280929190818152602001828054613ed590614f2c565b8015613f225780601f10613ef757610100808354040283529160200191613f22565b820191906000526020600020905b815481529060010190602001808311613f0557829003601f168201915b5050505050613f49565b6040805160208101839052015b6040516020818303038152906040525b9150506141d0565b50614126565b6001826003811115613f6b57613f6b61490b565b03613fbe5760008460010184604051613f849190615a0b565b908152604051908190036020019020546001600160a01b031690508015613f5157604080516001600160a01b038316602082015201613f39565b6003826003811115613fd257613fd261490b565b0361404e5760008460000184604051613feb9190615a0b565b9081526020016040518091039020805461400490614f2c565b9050111561404957600084600301846040516140209190615a0b565b90815260405190819003602090810182205460ff169250613f3991839101901515815260200190565b614126565b60028260038111156140625761406261490b565b03614126576000846000018460405161407b9190615a0b565b9081526020016040518091039020805461409490614f2c565b80601f01602080910402602001604051908101604052809291908181526020018280546140c090614f2c565b801561410d5780601f106140e25761010080835404028352916020019161410d565b820191906000526020600020905b8154815290600101906020018083116140f057829003601f168201915b5050505050905060208151106141245790506141d0565b505b6040518490614136908590615a0b565b9081526020016040518091039020805461414f90614f2c565b80601f016020809104026020016040519081016040528092919081815260200182805461417b90614f2c565b80156141c85780601f1061419d576101008083540402835291602001916141c8565b820191906000526020600020905b8154815290600101906020018083116141ab57829003601f168201915b505050505090505b9392505050565b825160208301518351606092916141ed916158c8565b111561423b5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420706172616d65746572206f6666736574000000000000000060448201526064016108b2565b8260200151825110156142885760405162461bcd60e51b815260206004820152601560248201527414995c1b1858d95b595b9d081d1bdbc81cda1bdc9d605a1b60448201526064016108b2565b60005b83602001518110156142f4578281815181106142a9576142a9614f16565b602001015160f81c60f81b858286600001516142c591906158c8565b815181106142d5576142d5614f16565b60200101906001600160f81b031916908160001a90535060010161428b565b50929392505050565b5080546000825560020290600052602060002090810190611cc291905b808211156143485780546001600160d01b0319168155600061433f600183018261434c565b5060020161431a565b5090565b50805460008255600b0290600052602060002090810190611cc291905b8082111561434857805463ffffffff19168155600061438b6001830182614401565b6002820180546001600160a01b031916905560006003830181905560048301805460ff191690556143c090600584019061443b565b6006820160006143d08282614401565b506000600182018190556002820155600301805460ff19908116909155600a83018054909116905550600b01614369565b50805461440d90614f2c565b6000825580601f1061441d575050565b601f016020900490600052602060002090810190611cc2919061445c565b5080546000825560040290600052602060002090810190611cc29190614471565b5b80821115614348576000815560010161445d565b808211156143485760006144858282614401565b50600060018201819055600282015560038101805460ff19169055600401614471565b80356001600160e01b0319811681146144c057600080fd5b919050565b6000602082840312156144d757600080fd5b6141d0826144a8565b63ffffffff81168114611cc257600080fd5b60006020828403121561450457600080fd5b81356141d0816144e0565b6001600160a01b0381168114611cc257600080fd5b80356144c08161450f565b6000806040838503121561454257600080fd5b823561454d8161450f565b9150602083013561455d816144e0565b809150509250929050565b600080600080600085870361010081121561458257600080fd5b863561458d816144e0565b9550602087013561459d816144e0565b945060408701356145ad8161450f565b9350606087013592506080607f19820112156145c857600080fd5b506080860190509295509295909350565b600080602083850312156145ec57600080fd5b82356001600160401b0381111561460257600080fd5b8301601f8101851361461357600080fd5b80356001600160401b0381111561462957600080fd5b85602082840101111561463b57600080fd5b6020919091019590945092505050565b60008060006060848603121561466057600080fd5b833561466b816144e0565b9250602084013561467b8161450f565b9150604084013561468b8161450f565b809150509250925092565b60005b838110156146b1578181015183820152602001614699565b50506000910152565b600081518084526146d2816020860160208601614696565b601f01601f19169290920160200192915050565b6020815260006141d060208301846146ba565b600081518084526020840193506020830160005b8281101561476257815180516001600160e01b031916875260208082015163ffffffff16818901526040808301511515908901526060918201511515918801919091526080909601959091019060010161470d565b5093949350505050565b600081518084526020840193506020830160005b828110156147625781516001600160e01b031916865260209586019590910190600101614780565b602080825282516060838301528051608084018190526000929190910190829060a08501905b8083101561481557835163ffffffff60e01b8151168352602081015115156020840152604081015115156040840152506060820191506020840193506001830192506147ce565b506020860151858203601f19016040870152925061483381846146f9565b925050506040840151601f19848303016060850152614852828261476c565b95945050505050565b60008083601f84011261486d57600080fd5b5081356001600160401b0381111561488457600080fd5b6020830191508360208260051b8501011115611ff857600080fd5b6000806000806000608086880312156148b757600080fd5b85356148c2816144e0565b945060208601356148d28161450f565b935060408601356001600160401b038111156148ed57600080fd5b6148f98882890161485b565b96999598509660600135949350505050565b634e487b7160e01b600052602160045260246000fd5b600281106149315761493161490b565b9052565b600481106149315761493161490b565b600081516080845261495a60808501826146ba565b90506020830151805160208601526020810151604086015260408101519050613a426060860182614935565b600082825180855260208501945060208160051b8301016020850160005b838110156149d657601f198584030188526149c0838351614945565b60209889019890935091909101906001016149a4565b50909695505050505050565b80516001600160e01b0319168252600060208201516101006020850152614a0d6101008501826146ba565b90506040830151614a2960408601826001600160a01b03169052565b50606083015160608501526080830151614a466080860182614921565b5060a083015184820360a0860152614a5e8282614986565b91505060c083015184820360c0860152614a788282614945565b91505060e0830151613a4260e086018260ff169052565b600082825180855260208501945060208160051b8301016020850160005b838110156149d657601f19858403018852614ac98383516149e2565b6020988901989093509190910190600101614aad565b602080825282516001600160a01b031682820152828101516060604084015280516080840181905260009260a0600583901b86018101939091019190850190845b81811015614b9e57868503609f190183528351805180516001600160a01b0316875260208082015163ffffffff169088015260408082015160ff9081169189019190915260609182015116908701526020015160a060808701819052614b8890870182614a8f565b9550506020938401939290920191600101614b20565b50505050604084015160608401528091505092915050565b60008060008060608587031215614bcc57600080fd5b8435614bd7816144e0565b93506020850135614be78161450f565b925060408501356001600160401b03811115614c0257600080fd5b614c0e8782880161485b565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715614c5257614c52614c1a565b60405290565b604051606081016001600160401b0381118282101715614c5257614c52614c1a565b60405161010081016001600160401b0381118282101715614c5257614c52614c1a565b604051601f8201601f191681016001600160401b0381118282101715614cc557614cc5614c1a565b604052919050565b60ff81168114611cc257600080fd5b80356144c081614ccd565b600060808284031215614cf957600080fd5b604051608081016001600160401b0381118282101715614d1b57614d1b614c1a565b6040529050808235614d2c8161450f565b81526020830135614d3c816144e0565b60208201526040830135614d4f81614ccd565b60408201526060830135614d6281614ccd565b6060919091015292915050565b600060808284031215614d8157600080fd5b6141d08383614ce7565b600060208284031215614d9d57600080fd5b81356141d08161450f565b8135614db38161450f565b81546001600160a01b031981166001600160a01b039290921691821783556020840135614ddf816144e0565b63ffffffff60a01b60a09190911b166001600160c01b031982168317811784556040850135614e0d81614ccd565b6001600160c81b0319929092169092179190911760c09190911b60ff60c01b1617815560006060830135614e4081614ccd565b825460ff60c81b191660c89190911b60ff60c81b16179091555050565b634e487b7160e01b600052601160045260246000fd5b818103818111156104bf576104bf614e5d565b63ffffffff86811682528516602082015261010081018435614ea78161450f565b6001600160a01b031660408301526020850135614ec3816144e0565b63ffffffff1660608301526040850135614edc81614ccd565b60ff1660808301526060850135614ef281614ccd565b60ff1660a08301526001600160a01b039390931660c082015260e001529392505050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680614f4057607f821691505b602082108103614f6057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603160045260246000fd5b805180151581146144c057600080fd5b600060208284031215614f9e57600080fd5b6141d082614f7c565b60018060a01b038416815282602082015260606040820152600061485260608301846146ba565b60006001600160401b03821115614fe757614fe7614c1a565b50601f01601f191660200190565b600082601f83011261500657600080fd5b815161501961501482614fce565b614c9d565b81815284602083860101111561502e57600080fd5b613a76826020830160208701614696565b60006020828403121561505157600080fd5b81516001600160401b0381111561506757600080fd5b613a7684828501614ff5565b60006020828403121561508557600080fd5b81516141d081614ccd565b6000602082840312156150a257600080fd5b5051919050565b60006001600160401b038211156150c2576150c2614c1a565b5060051b60200190565b60006150da61501484614fce565b90508281528383830111156150ee57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261511657600080fd5b6141d0838335602085016150cc565b8035600281106144c057600080fd5b6000818303608081121561514757600080fd5b61514f614c30565b915082356001600160401b0381111561516757600080fd5b8301601f8101851361517857600080fd5b615187858235602084016150cc565b8352506060601f198201121561519c57600080fd5b506151a5614c58565b60208381013582526040840135908201526060830135600481106151c857600080fd5b6040820152602082015292915050565b600082601f8301126151e957600080fd5b81356151f7615014826150a9565b8082825260208201915060208360051b86010192508583111561521957600080fd5b602085015b8381101561525a5780356001600160401b0381111561523c57600080fd5b61524b886020838a0101615134565b8452506020928301920161521e565b5095945050505050565b600060a0828403121561527657600080fd5b61527e614c30565b905061528a8383614ce7565b815260808201356001600160401b038111156152a557600080fd5b8201601f810184136152b657600080fd5b80356152c4615014826150a9565b8082825260208201915060208360051b8501019250868311156152e657600080fd5b602084015b8381101561540d5780356001600160401b0381111561530957600080fd5b8501610100818a03601f1901121561532057600080fd5b615328614c7a565b615334602083016144a8565b815260408201356001600160401b0381111561534f57600080fd5b61535e8b602083860101615105565b60208301525061537060608301614524565b60408201526080820135606082015261538b60a08301615125565b608082015260c08201356001600160401b038111156153a957600080fd5b6153b88b6020838601016151d8565b60a08301525060e08201356001600160401b038111156153d757600080fd5b6153e68b602083860101615134565b60c0830152506153f96101008301614cdc565b60e0820152845250602092830192016152eb565b5060208501525091949350505050565b600061542b615014846150a9565b8381526020810190600585901b84013681111561544757600080fd5b845b818110156154825780356001600160401b0381111561546757600080fd5b61547336828901615264565b85525060209384019301615449565b509095945050505050565b60008235609e198336030181126154a357600080fd5b9190910192915050565b60006104bf3683615264565b601f8211156103da57806000526020600020601f840160051c810160208510156154e05750805b601f840160051c820191505b818110156109c057600081556001016154ec565b81516001600160401b0381111561551957615519614c1a565b61552d816155278454614f2c565b846154b9565b6020601f82116001811461556157600083156155495750848201515b600019600385901b1c1916600184901b1784556109c0565b600084815260208120601f198516915b828110156155915787850151825560209485019460019092019101615571565b50848210156155af5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b600081546155cb81614f2c565b8085526001821680156155e5576001811461560157615638565b60ff1983166020870152602082151560051b8701019350615638565b84600052602060002060005b8381101561562f5781546020828a01015260018201915060208101905061560d565b87016020019450505b50505092915050565b60808252600061565460808401836155be565b600183015460208501526002830154604085015260ff600384015416613a426060860182614935565b600082825480855260208501945060208160051b83010184600052602060002060005b838110156149d657848303601f190188526156bb8383615641565b602098909801979250600491909101906001016156a0565b63ffffffff8516815260018060a01b038416602082015282604082015260806060820152600060e0820160018060a01b03845416608084015260018401606060a0850152818154808452610100860191506101008160051b8701019350826000526020600020925060005b818110156158ad5760ff1987860301835260a08501845460018060a01b038116875263ffffffff8160a01c16602088015260ff8160c01c16604088015260ff8160c81c166060880152506001850160a0608088015281815480845260c08901915060c08160051b8a01019350826000526020600020925060005b818110156158905760bf198a86030183526157e6856157d8865460e01b90565b6001600160e01b0319169052565b61010060208601526157ff6101008601600186016155be565b60028501546001600160a01b0316604087015260038501546060870152600485015460ff166158316080880182614921565b5085810360a0870152615847816005870161567d565b905085810360c087015261585e8160068701615641565b905061586e600a86015460ff1690565b60ff811660e0880152509450600b9390930192602092909201916001016157b8565b50929750505060029490940193506020929092019160010161573e565b50505050600284015460c08401528091505095945050505050565b808201808211156104bf576104bf614e5d565b63ffffffff8416815261ffff831660208201526060604082015260006148526060830184614a8f565b6001600160a01b03841681526001600160e01b031983166020820152606060408201819052600090614852908301846146ba565b6000806040838503121561594b57600080fd5b82516159568161450f565b915061596460208401614f7c565b90509250929050565b6000604082840312801561598057600080fd5b50615989614c30565b82516003811061599857600080fd5b81526020928301519281019290925250919050565b60208101600383106159c1576159c161490b565b91905290565b6020815260006141d060208301846149e2565b6001600160e01b03198316815281516000906159fd816004850160208701614696565b919091016004019392505050565b600082516154a3818460208701614696565b600082601f830112615a2e57600080fd5b8151615a3c615014826150a9565b8082825260208201915060208360051b860101925085831115615a5e57600080fd5b602085015b8381101561525a5780516001600160401b03811115615a8157600080fd5b86016060818903601f19011215615a9757600080fd5b615a9f614c58565b6020820151615aad8161450f565b81526040820151602082015260608201516001600160401b03811115615ad257600080fd5b615ae18a602083860101614ff5565b60408301525084525060209283019201615a63565b60008060408385031215615b0957600080fd5b82516001600160401b03811115615b1f57600080fd5b615b2b85828601615a1d565b92505060208301516001600160401b03811115615b4757600080fd5b615b5385828601614ff5565b9150509250929050565b600060208284031215615b6f57600080fd5b81516001600160401b03811115615b8557600080fd5b613a7684828501615a1d565b600060208284031215615ba357600080fd5b81516141d08161450f565b604081526000615bc160408301856146ba565b828103602084015261485281856146ba56fea2646970667358221220166f2721c1e41b823ddb7377feb6d6a7fd952bb042f7ad215dfdd175ee47c98c64736f6c634300081c0033";

type StrategyBuilderModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategyBuilderModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategyBuilderModule__factory extends ContractFactory {
  constructor(...args: StrategyBuilderModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeController: AddressLike,
    _feeHandler: AddressLike,
    _actionRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _feeController,
      _feeHandler,
      _actionRegistry,
      overrides || {}
    );
  }
  override deploy(
    _feeController: AddressLike,
    _feeHandler: AddressLike,
    _actionRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _feeController,
      _feeHandler,
      _actionRegistry,
      overrides || {}
    ) as Promise<
      StrategyBuilderModule & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): StrategyBuilderModule__factory {
    return super.connect(runner) as StrategyBuilderModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyBuilderModuleInterface {
    return new Interface(_abi) as StrategyBuilderModuleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StrategyBuilderModule {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StrategyBuilderModule;
  }
}
