/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TimeCondition,
  TimeConditionInterface,
} from "../../../src/condition/TimeCondition";

const _abi = [
  {
    inputs: [],
    name: "BaseCondition__ConditionAlreadyExist",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseCondition__ConditionDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseCondition__ConditionIsInUse",
    type: "error",
  },
  {
    inputs: [],
    name: "TimeCondition__ConditionsIsNotUpdateable",
    type: "error",
  },
  {
    inputs: [],
    name: "TimeCondition__DeltaNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "TimeCondition__ExecutionTimeNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "execution",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "delta",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct TimeCondition.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "ConditionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "ConditionDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newExecution",
        type: "uint256",
      },
    ],
    name: "ConditionUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "action",
        type: "uint16",
      },
    ],
    name: "actionValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "action",
        type: "uint16",
      },
    ],
    name: "addAutomationToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_id",
        type: "uint16",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "execution",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "delta",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        internalType: "struct TimeCondition.Condition",
        name: "_condition",
        type: "tuple",
      },
    ],
    name: "addCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "strategy",
        type: "uint16",
      },
    ],
    name: "addStrategyToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
    ],
    name: "automations",
    outputs: [
      {
        internalType: "uint16[]",
        name: "",
        type: "uint16[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_id",
        type: "uint16",
      },
    ],
    name: "checkCondition",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_id",
        type: "uint16",
      },
    ],
    name: "conditionActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_id",
        type: "uint16",
      },
    ],
    name: "deleteCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_id",
        type: "uint16",
      },
    ],
    name: "isUpdateable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "automation",
        type: "uint16",
      },
    ],
    name: "removeAutomationFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "strategy",
        type: "uint16",
      },
    ],
    name: "removeStrategyFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
    ],
    name: "strategies",
    outputs: [
      {
        internalType: "uint16[]",
        name: "",
        type: "uint16[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "strategy",
        type: "uint16",
      },
    ],
    name: "strategyValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_id",
        type: "uint16",
      },
    ],
    name: "updateCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_id",
        type: "uint16",
      },
    ],
    name: "walletCondition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "execution",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "delta",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        internalType: "struct TimeCondition.Condition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ee6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806379cae4f411610097578063b77ecaf111610066578063b77ecaf114610242578063c01e748814610255578063dce982141461027a578063e49ffc6b146102bb57600080fd5b806379cae4f4146101d257806383c05512146101e55780639aaf7dd31461021c578063a95f105d1461022f57600080fd5b80633d392a4b116100d35780633d392a4b1461014a578063412140b51461016a5780634680ecca146101ac57806370f1783d146101bf57600080fd5b80630556540a146100fa5780630ebb9c3414610122578063372dce0714610137575b600080fd5b61010d610108366004610c6c565b6102fc565b60405190151581526020015b60405180910390f35b610135610130366004610c6c565b610436565b005b61010d610145366004610c87565b6104da565b61015d610158366004610cd1565b61066b565b6040516101199190610ced565b61010d610178366004610cd1565b6001600160a01b038216600090815260046020908152604080832061ffff8516845290915290206002015460ff1692915050565b61015d6101ba366004610cd1565b61070c565b6101356101cd366004610d35565b610785565b61010d6101e0366004610c87565b610866565b6101f86101f3366004610cd1565b610900565b60408051825181526020808401519082015291810151151590820152606001610119565b61010d61022a366004610c87565b61097d565b61010d61023d366004610c87565b610a92565b61010d610250366004610cd1565b610b2b565b610268610263366004610cd1565b610b3e565b60405160ff9091168152602001610119565b61010d610288366004610d74565b6001600160a01b0392909216600090815260026020908152604080832061ffff9586168452909152902054821691161490565b61010d6102c9366004610d74565b6001600160a01b0392909216600090815260036020908152604080832061ffff9586168452909152902054821691161490565b6000816103093382610bbd565b61032657604051630453eefd60e11b815260040160405180910390fd5b33600090815260046020908152604080832061ffff871684528252918290208251606081018452815480825260018301549382019390935260029091015460ff1615159281019290925242101561039057604051635b2c6ddd60e01b815260040160405180910390fd5b6020810151815182906103a4908390610dcd565b90525033600081815260046020908152604080832061ffff8916808552908352928190208551808255868401516001830155868301516002909201805460ff1916921515929092179091558151938452918301939093528183015290517fcc902ba3dfe95154a11d06aec1e494eea84a572cd39a2ad1dfb932d955c0ec91916060908290030190a15060019392505050565b806104413382610bbd565b61045e57604051630453eefd60e11b815260040160405180910390fd5b61046782610bed565b33600081815260046020908152604080832061ffff871680855290835281842084815560018101949094556002909301805460ff191690558051928352908201929092527fb531a130762437d9ffb40981068ab54699e15200181ef7509152a604df3dad64910160405180910390a15050565b33600081815260016020908152604080832061ffff80881685529083528184209484526003835281842086821680865293529083205484549394939116919083908390811061052b5761052b610de0565b60009182526020909120601082040154600f9091166002026101000a900461ffff161461055d57600092505050610665565b815460009061056e90600190610df6565b90508161ffff16811461062157600083828154811061058f5761058f610de0565b60009182526020808320601083040154338452600382526040808520600f9094166002026101000a90910461ffff90811680865293909252909220805461ffff1916928616928317905585549092508291869181106105f0576105f0610de0565b90600052602060002090601091828204019190066002026101000a81548161ffff021916908361ffff160217905550505b8280548061063157610631610e09565b600082815260209020601060001990920191820401805461ffff6002600f8516026101000a02191690559055506001925050505b92915050565b6001600160a01b038216600090815260016020908152604080832061ffff851684528252918290208054835181840281018401909452808452606093928301828280156106ff57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116106c65790505b5050505050905092915050565b6001600160a01b03821660009081526020818152604080832061ffff851684528252918290208054835181840281018401909452808452606093928301828280156106ff576000918252602091829020805461ffff1684529082028301929091600291018084116106c657509498975050505050505050565b816107903382610bbd565b156107ae5760405163217deb7360e21b815260040160405180910390fd5b8142813510156107d157604051633cb342e560e21b815260040160405180910390fd5b610e10816020013510156107f85760405163039872d160e21b815260040160405180910390fd5b33600090815260046020908152604080832061ffff88168452909152902083906108228282610e2d565b9050507f68a141eb10fc173edcc1823bebf2e544d7156b4076d22eb90bd1445d51b9c15584338560405161085893929190610e63565b60405180910390a150505050565b33600090815260016020818152604080842061ffff8781168087529184529185208054808601825581875293862060108504018054600f9095166002026101000a808502199095169388169490940292909217909255908352546108ca9190610df6565b33600090815260036020908152604080832061ffff96871684529091529020805461ffff19169190931617909155506001919050565b610926604051806060016040528060008152602001600081526020016000151581525090565b506001600160a01b038216600090815260046020908152604080832061ffff851684528252918290208251606081018452815481526001820154928101929092526002015460ff1615159181019190915292915050565b3360008181526020818152604080832061ffff8088168552908352818420948452600283528184208682168086529352908320548454939493911691908390839081106109cc576109cc610de0565b60009182526020909120601082040154600f9091166002026101000a900461ffff16146109fe57600092505050610665565b8154600090610a0f90600190610df6565b90508161ffff168114610621576000838281548110610a3057610a30610de0565b600091825260208083206010830401543384526002808352604080862061ffff600f909616929092026101000a90920484168086529252909220805491861661ffff19909216821790558554919250829186919081106105f0576105f0610de0565b3360009081526020818152604080832061ffff86811680865291845291842080546001808201835582875294862060108204018054600f9092166002026101000a808602199092169488169190910293909317909255835254610af59190610df6565b33600090815260026020908152604080832061ffff96871684529091529020805461ffff19169190931617909155506001919050565b6000610b378383610bbd565b9392505050565b6001600160a01b038216600090815260046020908152604080832061ffff8516845282528083208151606081018352815480825260018301549482019490945260029091015460ff16151591810191909152908203610ba1576000915050610665565b80514210610bb3576001915050610665565b6000915050610665565b6001600160a01b038216600090815260046020908152604080832061ffff85168452909152902054151592915050565b33600090815260016020908152604080832061ffff85168452909152902054151580610c3457503360009081526020818152604080832061ffff8516845290915290205415155b15610c525760405163846e233f60e01b815260040160405180910390fd5b50565b803561ffff81168114610c6757600080fd5b919050565b600060208284031215610c7e57600080fd5b610b3782610c55565b60008060408385031215610c9a57600080fd5b610ca383610c55565b9150610cb160208401610c55565b90509250929050565b80356001600160a01b0381168114610c6757600080fd5b60008060408385031215610ce457600080fd5b610ca383610cba565b6020808252825182820181905260009190848201906040850190845b81811015610d2957835161ffff1683529284019291840191600101610d09565b50909695505050505050565b6000808284036080811215610d4957600080fd5b610d5284610c55565b92506060601f1982011215610d6657600080fd5b506020830190509250929050565b600080600060608486031215610d8957600080fd5b610d9284610cba565b9250610da060208501610c55565b9150610dae60408501610c55565b90509250925092565b634e487b7160e01b600052601160045260246000fd5b8082018082111561066557610665610db7565b634e487b7160e01b600052603260045260246000fd5b8181038181111561066557610665610db7565b634e487b7160e01b600052603160045260246000fd5b8015158114610c5257600080fd5b8135815560208201356001820155600281016040830135610e4d81610e1f565b815490151560ff1660ff19919091161790555050565b600060a08201905061ffff8516825260018060a01b038416602083015282356040830152602083013560608301526040830135610e9f81610e1f565b80151560808401525094935050505056fea26469706673582212206870436ba1a364e5e206ba9436d59cb7091230bac82496075dc8669e28bd360a64736f6c63430008180033";

type TimeConditionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TimeConditionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TimeCondition__factory extends ContractFactory {
  constructor(...args: TimeConditionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TimeCondition & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TimeCondition__factory {
    return super.connect(runner) as TimeCondition__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimeConditionInterface {
    return new Interface(_abi) as TimeConditionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TimeCondition {
    return new Contract(address, _abi, runner) as unknown as TimeCondition;
  }
}
