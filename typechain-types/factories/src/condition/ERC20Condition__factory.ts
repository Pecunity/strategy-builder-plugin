/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC20Condition,
  ERC20ConditionInterface,
} from "../../../src/condition/ERC20Condition";

const _abi = [
  {
    inputs: [],
    name: "BaseCondition__ConditionIsInUse",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "action",
        type: "uint32",
      },
    ],
    name: "addAutomationToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "addStrategyToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "action",
        type: "uint32",
      },
    ],
    name: "automationValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "automations",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "checkCondition",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "conditionActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "deleteCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "isUpdateable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "removeAutomationFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "removeStrategyFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "strategies",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "strategyValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "updateCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506109a58061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063687c0e311161008c578063cff8364011610066578063cff83640146101e4578063e5012fb4146101f7578063eec93dd01461020a578063fff5cf191461021d57600080fd5b8063687c0e311461016e57806389a78a03146101b15780638a4914c2146101d157600080fd5b8063023ef5a9146100d457806303d049bb146100fc5780631245f2981461011057806314b0af7014610125578063384c879d1461013857806357182cae14610158575b600080fd5b6100e76100e2366004610815565b610260565b60405190151581526020015b60405180910390f35b6100e761010a366004610848565b50600090565b61012361011e366004610848565b610304565b005b6100e7610133366004610815565b610370565b61014b61014636600461087a565b61050e565b6040516100f39190610896565b6100e761016636600461087a565b600092915050565b6100e761017c3660046108df565b6001600160a01b0392909216600090815260036020908152604080832063ffffffff9586168452909152902054821691161490565b6101bf61016636600461087a565b60405160ff90911681526020016100f3565b6100e76101df366004610815565b6105b5565b6100e76101f236600461087a565b6106d5565b6100e7610205366004610815565b6106e0565b61014b61021836600461087a565b61077f565b6100e761022b3660046108df565b6001600160a01b0392909216600090815260026020908152604080832063ffffffff9586168452909152902054821691161490565b33600090815260016020818152604080842063ffffffff878116808752918452918520805480860182558187529386206008850401805460079095166004026101000a808502199095169388169490940292909217909255908352546102c69190610922565b33600090815260036020908152604080832063ffffffff87811685529252909120805463ffffffff1916929091169190911790555060015b92915050565b33600090815260016020908152604080832063ffffffff8516845290915290205415158061034f57503360009081526020818152604080832063ffffffff8516845290915290205415155b1561036d5760405163846e233f60e01b815260040160405180910390fd5b50565b3360008181526020818152604080832063ffffffff8088168552908352818420948452600283528184208682168086529352908320548454939493911691908390839081106103c1576103c1610943565b6000918252602090912060088204015460079091166004026101000a900463ffffffff16146103f5576000925050506102fe565b815460009061040690600190610922565b90508163ffffffff1681146104c357600083828154811061042957610429610943565b6000918252602080832060088304015433845260028252604080852060079094166004026101000a90910463ffffffff90811680865293909252909220805463ffffffff19169286169283179055855490925082918691811061048e5761048e610943565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505b828054806104d3576104d3610959565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a021916905590555060019250505092915050565b6001600160a01b038216600090815260016020908152604080832063ffffffff851684528252918290208054835181840281018401909452808452606093928301828280156105a857602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161056b5790505b5050505050905092915050565b33600081815260016020908152604080832063ffffffff80881685529083528184209484526003835281842086821680865293529083205484549394939116919083908390811061060857610608610943565b6000918252602090912060088204015460079091166004026101000a900463ffffffff161461063c576000925050506102fe565b815460009061064d90600190610922565b90508163ffffffff1681146104c357600083828154811061067057610670610943565b6000918252602080832060088304015433845260038252604080852060079094166004026101000a90910463ffffffff90811680865293909252909220805463ffffffff19169286169283179055855490925082918691811061048e5761048e610943565b6000805b9392505050565b3360009081526020818152604080832063ffffffff8681168086529184529184208054600180820183558287529486206008820401805460079092166004026101000a8086021990921694881691909102939093179092558352546107459190610922565b33600090815260026020908152604080832063ffffffff96871684529091529020805463ffffffff19169190931617909155506001919050565b6001600160a01b03821660009081526020818152604080832063ffffffff851684528252918290208054835181840281018401909452808452606093928301828280156105a8576000918252602091829020805463ffffffff16845290820283019290916004910180841161056b57509498975050505050505050565b803563ffffffff8116811461081057600080fd5b919050565b6000806040838503121561082857600080fd5b610831836107fc565b915061083f602084016107fc565b90509250929050565b60006020828403121561085a57600080fd5b6106d9826107fc565b80356001600160a01b038116811461081057600080fd5b6000806040838503121561088d57600080fd5b61083183610863565b602080825282518282018190526000918401906040840190835b818110156108d457835163ffffffff168352602093840193909201916001016108b0565b509095945050505050565b6000806000606084860312156108f457600080fd5b6108fd84610863565b925061090b602085016107fc565b9150610919604085016107fc565b90509250925092565b818103818111156102fe57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e1619407cd2386fb5f879d732d17178da51d5b7fd537c217bfbad59f1395d6e864736f6c634300081a0033";

type ERC20ConditionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConditionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Condition__factory extends ContractFactory {
  constructor(...args: ERC20ConditionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC20Condition & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Condition__factory {
    return super.connect(runner) as ERC20Condition__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20ConditionInterface {
    return new Interface(_abi) as ERC20ConditionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC20Condition {
    return new Contract(address, _abi, runner) as unknown as ERC20Condition;
  }
}
