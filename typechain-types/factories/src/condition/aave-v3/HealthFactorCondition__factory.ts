/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  HealthFactorCondition,
  HealthFactorConditionInterface,
} from "../../../../src/condition/aave-v3/HealthFactorCondition";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BaseCondition__ConditionAlreadyExist",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseCondition__ConditionDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseCondition__ConditionIsInUse",
    type: "error",
  },
  {
    inputs: [],
    name: "HealthFactorLowerThanMinimum",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidComparison",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "healthFactor",
            type: "uint256",
          },
          {
            internalType: "enum IHealthFactorCondition.Comparison",
            name: "comparison",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IHealthFactorCondition.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "ConditionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "ConditionDeleted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "action",
        type: "uint32",
      },
    ],
    name: "addAutomationToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "healthFactor",
            type: "uint256",
          },
          {
            internalType: "enum IHealthFactorCondition.Comparison",
            name: "comparison",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        internalType: "struct IHealthFactorCondition.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "addCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "addStrategyToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "action",
        type: "uint32",
      },
    ],
    name: "automationValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "automations",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "checkCondition",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "conditionActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "deleteCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "isUpdateable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "removeAutomationFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "removeStrategyFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "strategies",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "strategyValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "updateCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "walletCondition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "healthFactor",
            type: "uint256",
          },
          {
            internalType: "enum IHealthFactorCondition.Comparison",
            name: "comparison",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        internalType: "struct IHealthFactorCondition.Condition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052348015600f57600080fd5b5060405161121e38038061121e833981016040819052602c91603c565b6001600160a01b0316608052606a565b600060208284031215604d57600080fd5b81516001600160a01b0381168114606357600080fd5b9392505050565b60805161119261008c6000396000818161016d015261093c01526111926000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636f2b9aff11610097578063cff8364011610066578063cff83640146102be578063e5012fb4146102d1578063eec93dd0146102e4578063fff5cf19146102f757600080fd5b80636f2b9aff1461025357806372201cf11461027357806389a78a03146102865780638a4914c2146102ab57600080fd5b806316f0115b116100d357806316f0115b14610168578063384c879d146101a757806357182cae146101c7578063687c0e311461021057600080fd5b8063023ef5a91461010557806303d049bb1461012d5780631245f2981461014057806314b0af7014610155575b600080fd5b610118610113366004610e18565b61033a565b60405190151581526020015b60405180910390f35b61011861013b366004610e4b565b6103de565b61015361014e366004610e4b565b610411565b005b610118610163366004610e18565b6104b0565b61018f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610124565b6101ba6101b5366004610e7d565b61064e565b6040516101249190610e99565b6101186101d5366004610e7d565b6001600160a01b0391909116600090815260046020908152604080832063ffffffff9490941683529290522060010154610100900460ff1690565b61011861021e366004610ee2565b6001600160a01b0392909216600090815260036020908152604080832063ffffffff9586168452909152902054821691161490565b610266610261366004610e7d565b6106f5565b6040516101249190610f5d565b610153610281366004610f89565b610793565b610299610294366004610e7d565b610899565b60405160ff9091168152602001610124565b6101186102b9366004610e18565b610b12565b6101186102cc366004610e7d565b610c32565b6101186102df366004610e18565b610c45565b6101ba6102f2366004610e7d565b610ce4565b610118610305366004610ee2565b6001600160a01b0392909216600090815260026020908152604080832063ffffffff9586168452909152902054821691161490565b33600090815260016020818152604080842063ffffffff878116808752918452918520805480860182558187529386206008850401805460079095166004026101000a808502199095169388169490940292909217909255908352546103a09190610fc8565b33600090815260036020908152604080832063ffffffff87811685529252909120805463ffffffff1916929091169190911790555060015b92915050565b6000816103eb3382610d61565b61040857604051630453eefd60e11b815260040160405180910390fd5b50600192915050565b8061041c3382610d61565b61043957604051630453eefd60e11b815260040160405180910390fd5b61044282610d93565b33600081815260046020908152604080832063ffffffff87168085529083528184209384556001909301805461ffff191690558051928352908201929092527f9c33cb453d76063bb338c509094bd32900fe4a7e3ccbb52ef947618994a4a6c3910160405180910390a15050565b3360008181526020818152604080832063ffffffff80881685529083528184209484526002835281842086821680865293529083205484549394939116919083908390811061050157610501610fe9565b6000918252602090912060088204015460079091166004026101000a900463ffffffff1614610535576000925050506103d8565b815460009061054690600190610fc8565b90508163ffffffff16811461060357600083828154811061056957610569610fe9565b6000918252602080832060088304015433845260028252604080852060079094166004026101000a90910463ffffffff90811680865293909252909220805463ffffffff1916928616928317905585549092508291869181106105ce576105ce610fe9565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505b8280548061061357610613610fff565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a021916905590555060019250505092915050565b6001600160a01b038216600090815260016020908152604080832063ffffffff851684528252918290208054835181840281018401909452808452606093928301828280156106e857602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116106ab5790505b5050505050905092915050565b6040805160608082018352600080835260208084018290528385018290526001600160a01b03871682526004815284822063ffffffff871683528152908490208451928301909452835482526001840154929391929083019060ff16600581111561076257610762610f25565b600581111561077357610773610f25565b815260019190910154610100900460ff1615156020909101529392505050565b8161079e3382610d61565b156107bc5760405163217deb7360e21b815260040160405180910390fd5b81670de0b6b3a7640000813510156107e757604051637bf5cacd60e01b815260040160405180910390fd5b60056107f96040830160208401611022565b600581111561080a5761080a610f25565b11156108295760405163d9e2f2ed60e01b815260040160405180910390fd5b33600090815260046020908152604080832063ffffffff8816845290915290208390610855828261104d565b9050507fcc85ae252c6a8596cda840060618021921a57bbdcfc4cb48c0f8ffbf40c3bfd984338560405161088b939291906110b1565b60405180910390a150505050565b6001600160a01b038216600090815260046020908152604080832063ffffffff851684528252808320815160608101909252805482526001810154849383019060ff1660058111156108ed576108ed610f25565b60058111156108fe576108fe610f25565b815260019190910154610100900460ff161515602090910152604051632fe4a15f60e21b81526001600160a01b0386811660048301529192506000917f0000000000000000000000000000000000000000000000000000000000000000169063bf92857c9060240160c060405180830381865afa158015610983573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a79190611112565b9550600194506109b79350505050565b826020015160058111156109cd576109cd610f25565b14806109ee57506003826020015160058111156109ec576109ec610f25565b145b15610a07578151811115610a07576001925050506103d8565b600082602001516005811115610a1f57610a1f610f25565b1480610a405750600482602001516005811115610a3e57610a3e610f25565b145b15610a59578151811015610a59576001925050506103d8565b600282602001516005811115610a7157610a71610f25565b1480610a925750600382602001516005811115610a9057610a90610f25565b145b80610ab25750600482602001516005811115610ab057610ab0610f25565b145b15610aca5781518103610aca576001925050506103d8565b600582602001516005811115610ae257610ae2610f25565b03610aff5781518114610afa576001925050506103d8565b610b0a565b6000925050506103d8565b505092915050565b33600081815260016020908152604080832063ffffffff808816855290835281842094845260038352818420868216808652935290832054845493949391169190839083908110610b6557610b65610fe9565b6000918252602090912060088204015460079091166004026101000a900463ffffffff1614610b99576000925050506103d8565b8154600090610baa90600190610fc8565b90508163ffffffff168114610603576000838281548110610bcd57610bcd610fe9565b6000918252602080832060088304015433845260038252604080852060079094166004026101000a90910463ffffffff90811680865293909252909220805463ffffffff1916928616928317905585549092508291869181106105ce576105ce610fe9565b6000610c3e8383610d61565b9392505050565b3360009081526020818152604080832063ffffffff8681168086529184529184208054600180820183558287529486206008820401805460079092166004026101000a808602199092169488169190910293909317909255835254610caa9190610fc8565b33600090815260026020908152604080832063ffffffff96871684529091529020805463ffffffff19169190931617909155506001919050565b6001600160a01b03821660009081526020818152604080832063ffffffff851684528252918290208054835181840281018401909452808452606093928301828280156106e8576000918252602091829020805463ffffffff1684529082028301929091600491018084116106ab57509498975050505050505050565b6001600160a01b038216600090815260046020908152604080832063ffffffff85168452909152902054151592915050565b33600090815260016020908152604080832063ffffffff85168452909152902054151580610dde57503360009081526020818152604080832063ffffffff8516845290915290205415155b15610dfc5760405163846e233f60e01b815260040160405180910390fd5b50565b803563ffffffff81168114610e1357600080fd5b919050565b60008060408385031215610e2b57600080fd5b610e3483610dff565b9150610e4260208401610dff565b90509250929050565b600060208284031215610e5d57600080fd5b610c3e82610dff565b80356001600160a01b0381168114610e1357600080fd5b60008060408385031215610e9057600080fd5b610e3483610e66565b602080825282518282018190526000918401906040840190835b81811015610ed757835163ffffffff16835260209384019390920191600101610eb3565b509095945050505050565b600080600060608486031215610ef757600080fd5b610f0084610e66565b9250610f0e60208501610dff565b9150610f1c60408501610dff565b90509250925092565b634e487b7160e01b600052602160045260246000fd5b60068110610f5957634e487b7160e01b600052602160045260246000fd5b9052565b815181526020808301516060830191610f7890840182610f3b565b506040928301511515919092015290565b6000808284036080811215610f9d57600080fd5b610fa684610dff565b92506060601f1982011215610fba57600080fd5b506020830190509250929050565b818103818111156103d857634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60068110610dfc57600080fd5b60006020828403121561103457600080fd5b8135610c3e81611015565b8015158114610dfc57600080fd5b8135815560018101602083013561106381611015565b6006811061108157634e487b7160e01b600052602160045260246000fd5b815460408501356110918161103f565b61ff0081151560081b1660ff841661ffff19841617178455505050505050565b63ffffffff841681526001600160a01b0383166020808301919091528235604083015260a08201908301356110e581611015565b6110f26060840182610f3b565b5060408301356111018161103f565b801515608084015250949350505050565b60008060008060008060c0878903121561112b57600080fd5b50508451602086015160408701516060880151608089015160a090990151939a92995090979096509450909250905056fea26469706673582212207f1bb500766be8fd33e7f9993bd7f97132ac3c51aec4f9a9741804841fc2503664736f6c634300081a0033";

type HealthFactorConditionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HealthFactorConditionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HealthFactorCondition__factory extends ContractFactory {
  constructor(...args: HealthFactorConditionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _pool: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_pool, overrides || {});
  }
  override deploy(
    _pool: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_pool, overrides || {}) as Promise<
      HealthFactorCondition & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): HealthFactorCondition__factory {
    return super.connect(runner) as HealthFactorCondition__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HealthFactorConditionInterface {
    return new Interface(_abi) as HealthFactorConditionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): HealthFactorCondition {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as HealthFactorCondition;
  }
}
