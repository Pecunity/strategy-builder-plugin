/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  HealthFactorCondition,
  HealthFactorConditionInterface,
} from "../../../../src/condition/aave-v3/HealthFactorCondition";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BaseCondition__ConditionAlreadyExist",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseCondition__ConditionDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseCondition__ConditionIsInUse",
    type: "error",
  },
  {
    inputs: [],
    name: "HealthFactorLowerThanMinimum",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidComparison",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "healthFactor",
            type: "uint256",
          },
          {
            internalType: "enum IHealthFactorCondition.Comparison",
            name: "comparison",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IHealthFactorCondition.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "ConditionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "ConditionDeleted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "action",
        type: "uint32",
      },
    ],
    name: "addAutomationToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "healthFactor",
            type: "uint256",
          },
          {
            internalType: "enum IHealthFactorCondition.Comparison",
            name: "comparison",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        internalType: "struct IHealthFactorCondition.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "addCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "addStrategyToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "action",
        type: "uint32",
      },
    ],
    name: "automationValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "automations",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "checkCondition",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "conditionActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "deleteCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "isUpdateable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "removeAutomationFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "removeStrategyFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "strategies",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "strategyValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "updateCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "walletCondition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "healthFactor",
            type: "uint256",
          },
          {
            internalType: "enum IHealthFactorCondition.Comparison",
            name: "comparison",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "updateable",
            type: "bool",
          },
        ],
        internalType: "struct IHealthFactorCondition.Condition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052348015600f57600080fd5b5060405161123a38038061123a833981016040819052602c91603c565b6001600160a01b0316608052606a565b600060208284031215604d57600080fd5b81516001600160a01b0381168114606357600080fd5b9392505050565b6080516111ae61008c6000396000818161016d015261096501526111ae6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636f2b9aff11610097578063cff8364011610066578063cff83640146102be578063e5012fb4146102d1578063eec93dd0146102e4578063fff5cf19146102f757600080fd5b80636f2b9aff1461025357806372201cf11461027357806389a78a03146102865780638a4914c2146102ab57600080fd5b806316f0115b116100d357806316f0115b14610168578063384c879d146101a757806357182cae146101c7578063687c0e311461021057600080fd5b8063023ef5a91461010557806303d049bb1461012d5780631245f2981461014057806314b0af7014610155575b600080fd5b610118610113366004610e34565b61033a565b60405190151581526020015b60405180910390f35b61011861013b366004610e67565b6103de565b61015361014e366004610e67565b61043a565b005b610118610163366004610e34565b6104d9565b61018f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610124565b6101ba6101b5366004610e99565b610677565b6040516101249190610eb5565b6101186101d5366004610e99565b6001600160a01b0391909116600090815260046020908152604080832063ffffffff9490941683529290522060010154610100900460ff1690565b61011861021e366004610efe565b6001600160a01b0392909216600090815260036020908152604080832063ffffffff9586168452909152902054821691161490565b610266610261366004610e99565b61071e565b6040516101249190610f79565b610153610281366004610fa5565b6107bc565b610299610294366004610e99565b6108c2565b60405160ff9091168152602001610124565b6101186102b9366004610e34565b610b2e565b6101186102cc366004610e99565b610c4e565b6101186102df366004610e34565b610c61565b6101ba6102f2366004610e99565b610d00565b610118610305366004610efe565b6001600160a01b0392909216600090815260026020908152604080832063ffffffff9586168452909152902054821691161490565b33600090815260016020818152604080842063ffffffff878116808752918452918520805480860182558187529386206008850401805460079095166004026101000a808502199095169388169490940292909217909255908352546103a09190610fe4565b33600090815260036020908152604080832063ffffffff87811685529252909120805463ffffffff1916929091169190911790555060015b92915050565b6000816103eb3382610d7d565b61040857604051630453eefd60e11b815260040160405180910390fd5b505033600090815260046020908152604080832063ffffffff9490941683529290522060010154610100900460ff1690565b806104453382610d7d565b61046257604051630453eefd60e11b815260040160405180910390fd5b61046b82610daf565b33600081815260046020908152604080832063ffffffff87168085529083528184209384556001909301805461ffff191690558051928352908201929092527f9c33cb453d76063bb338c509094bd32900fe4a7e3ccbb52ef947618994a4a6c3910160405180910390a15050565b3360008181526020818152604080832063ffffffff80881685529083528184209484526002835281842086821680865293529083205484549394939116919083908390811061052a5761052a611005565b6000918252602090912060088204015460079091166004026101000a900463ffffffff161461055e576000925050506103d8565b815460009061056f90600190610fe4565b90508163ffffffff16811461062c57600083828154811061059257610592611005565b6000918252602080832060088304015433845260028252604080852060079094166004026101000a90910463ffffffff90811680865293909252909220805463ffffffff1916928616928317905585549092508291869181106105f7576105f7611005565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505b8280548061063c5761063c61101b565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a021916905590555060019250505092915050565b6001600160a01b038216600090815260016020908152604080832063ffffffff8516845282529182902080548351818402810184019094528084526060939283018282801561071157602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116106d45790505b5050505050905092915050565b6040805160608082018352600080835260208084018290528385018290526001600160a01b03871682526004815284822063ffffffff871683528152908490208451928301909452835482526001840154929391929083019060ff16600581111561078b5761078b610f41565b600581111561079c5761079c610f41565b815260019190910154610100900460ff1615156020909101529392505050565b816107c73382610d7d565b156107e55760405163217deb7360e21b815260040160405180910390fd5b81670de0b6b3a76400008135101561081057604051637bf5cacd60e01b815260040160405180910390fd5b6005610822604083016020840161103e565b600581111561083357610833610f41565b11156108525760405163d9e2f2ed60e01b815260040160405180910390fd5b33600090815260046020908152604080832063ffffffff881684529091529020839061087e8282611069565b9050507fcc85ae252c6a8596cda840060618021921a57bbdcfc4cb48c0f8ffbf40c3bfd98433856040516108b4939291906110cd565b60405180910390a150505050565b6001600160a01b038216600090815260046020908152604080832063ffffffff851684528252808320815160608101909252805482526001810154849383019060ff16600581111561091657610916610f41565b600581111561092757610927610f41565b815260019190910154610100900460ff161515602090910152604051632fe4a15f60e21b81526001600160a01b0386811660048301529192506000917f0000000000000000000000000000000000000000000000000000000000000000169063bf92857c9060240160c060405180830381865afa1580156109ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d0919061112e565b9550600194506109e09350505050565b826020015160058111156109f6576109f6610f41565b1480610a175750600382602001516005811115610a1557610a15610f41565b145b15610a30578151811115610a30576001925050506103d8565b600082602001516005811115610a4857610a48610f41565b1480610a695750600482602001516005811115610a6757610a67610f41565b145b15610a82578151811015610a82576001925050506103d8565b600282602001516005811115610a9a57610a9a610f41565b1480610abb5750600382602001516005811115610ab957610ab9610f41565b145b80610adb5750600482602001516005811115610ad957610ad9610f41565b145b15610af35781518103610af3576001925050506103d8565b600582602001516005811115610b0b57610b0b610f41565b03610b235781518114610b23576001925050506103d8565b506000949350505050565b33600081815260016020908152604080832063ffffffff808816855290835281842094845260038352818420868216808652935290832054845493949391169190839083908110610b8157610b81611005565b6000918252602090912060088204015460079091166004026101000a900463ffffffff1614610bb5576000925050506103d8565b8154600090610bc690600190610fe4565b90508163ffffffff16811461062c576000838281548110610be957610be9611005565b6000918252602080832060088304015433845260038252604080852060079094166004026101000a90910463ffffffff90811680865293909252909220805463ffffffff1916928616928317905585549092508291869181106105f7576105f7611005565b6000610c5a8383610d7d565b9392505050565b3360009081526020818152604080832063ffffffff8681168086529184529184208054600180820183558287529486206008820401805460079092166004026101000a808602199092169488169190910293909317909255835254610cc69190610fe4565b33600090815260026020908152604080832063ffffffff96871684529091529020805463ffffffff19169190931617909155506001919050565b6001600160a01b03821660009081526020818152604080832063ffffffff85168452825291829020805483518184028101840190945280845260609392830182828015610711576000918252602091829020805463ffffffff1684529082028301929091600491018084116106d457509498975050505050505050565b6001600160a01b038216600090815260046020908152604080832063ffffffff85168452909152902054151592915050565b33600090815260016020908152604080832063ffffffff85168452909152902054151580610dfa57503360009081526020818152604080832063ffffffff8516845290915290205415155b15610e185760405163846e233f60e01b815260040160405180910390fd5b50565b803563ffffffff81168114610e2f57600080fd5b919050565b60008060408385031215610e4757600080fd5b610e5083610e1b565b9150610e5e60208401610e1b565b90509250929050565b600060208284031215610e7957600080fd5b610c5a82610e1b565b80356001600160a01b0381168114610e2f57600080fd5b60008060408385031215610eac57600080fd5b610e5083610e82565b602080825282518282018190526000918401906040840190835b81811015610ef357835163ffffffff16835260209384019390920191600101610ecf565b509095945050505050565b600080600060608486031215610f1357600080fd5b610f1c84610e82565b9250610f2a60208501610e1b565b9150610f3860408501610e1b565b90509250925092565b634e487b7160e01b600052602160045260246000fd5b60068110610f7557634e487b7160e01b600052602160045260246000fd5b9052565b815181526020808301516060830191610f9490840182610f57565b506040928301511515919092015290565b6000808284036080811215610fb957600080fd5b610fc284610e1b565b92506060601f1982011215610fd657600080fd5b506020830190509250929050565b818103818111156103d857634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60068110610e1857600080fd5b60006020828403121561105057600080fd5b8135610c5a81611031565b8015158114610e1857600080fd5b8135815560018101602083013561107f81611031565b6006811061109d57634e487b7160e01b600052602160045260246000fd5b815460408501356110ad8161105b565b61ff0081151560081b1660ff841661ffff19841617178455505050505050565b63ffffffff841681526001600160a01b0383166020808301919091528235604083015260a082019083013561110181611031565b61110e6060840182610f57565b50604083013561111d8161105b565b801515608084015250949350505050565b60008060008060008060c0878903121561114757600080fd5b50508451602086015160408701516060880151608089015160a090990151939a92995090979096509450909250905056fea264697066735822122022c216f53ebeff1f4a1ea218a5d21b344c50bbedf0482362929a0939861ba1f564736f6c634300081a0033";

type HealthFactorConditionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HealthFactorConditionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HealthFactorCondition__factory extends ContractFactory {
  constructor(...args: HealthFactorConditionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _pool: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_pool, overrides || {});
  }
  override deploy(
    _pool: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_pool, overrides || {}) as Promise<
      HealthFactorCondition & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): HealthFactorCondition__factory {
    return super.connect(runner) as HealthFactorCondition__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HealthFactorConditionInterface {
    return new Interface(_abi) as HealthFactorConditionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): HealthFactorCondition {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as HealthFactorCondition;
  }
}
