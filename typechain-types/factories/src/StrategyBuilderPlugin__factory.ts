/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  StrategyBuilderPlugin,
  StrategyBuilderPluginInterface,
} from "../../src/StrategyBuilderPlugin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeController",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeHandler",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "AutomationAlreadyExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "condition",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "AutomationNotExecutable",
    type: "error",
  },
  {
    inputs: [],
    name: "AutomationNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "ChangeStrategyInConditionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "FeeExceedMaxFee",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAction",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "NotContractCaller",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
    ],
    name: "NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentTokenNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyAlreadyExist",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyIsInUse",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "condition",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "UpdateConditionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "changeAutomationInConditionFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "parameter",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum IStrategyBuilderPlugin.ActionType",
            name: "actionType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Action",
        name: "action",
        type: "tuple",
      },
    ],
    name: "ActionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "conditionAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "result1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "result0",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Condition",
        name: "condition",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxFeeAmount",
        type: "uint256",
      },
    ],
    name: "AutomationCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
    ],
    name: "AutomationDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "automationId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInToken",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeInUSD",
        type: "uint256",
      },
    ],
    name: "AutomationExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "conditionAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "id",
                    type: "uint32",
                  },
                  {
                    internalType: "uint8",
                    name: "result1",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "result0",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Condition",
                name: "condition",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "selector",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "parameter",
                    type: "bytes",
                  },
                  {
                    internalType: "address",
                    name: "target",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderPlugin.ActionType",
                    name: "actionType",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Action[]",
                name: "actions",
                type: "tuple[]",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
            name: "steps",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Strategy",
        name: "strategy",
        type: "tuple",
      },
    ],
    name: "StrategyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
    ],
    name: "StrategyDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
    ],
    name: "StrategyExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "stepId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "parameter",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum IStrategyBuilderPlugin.ActionType",
            name: "actionType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IStrategyBuilderPlugin.Action[]",
        name: "actions",
        type: "tuple[]",
      },
    ],
    name: "StrategyStepExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "AUTHOR",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "automation",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "conditionAddress",
                type: "address",
              },
              {
                internalType: "uint32",
                name: "id",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "result1",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "result0",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Condition",
            name: "condition",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "strategyId",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxFeeAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Automation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategyId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxFeeInUSD",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "conditionAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "result1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "result0",
            type: "uint8",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "createAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "conditionAddress",
                type: "address",
              },
              {
                internalType: "uint32",
                name: "id",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "result1",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "result0",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Condition",
            name: "condition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "selector",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "parameter",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum IStrategyBuilderPlugin.ActionType",
                name: "actionType",
                type: "uint8",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.Action[]",
            name: "actions",
            type: "tuple[]",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
        name: "steps",
        type: "tuple[]",
      },
    ],
    name: "createStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "deleteAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "deleteStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "beneficary",
        type: "address",
      },
    ],
    name: "executeAutomation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "executeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeController",
    outputs: [
      {
        internalType: "contract IFeeController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeHandler",
    outputs: [
      {
        internalType: "contract IFeeHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "getStorageId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onInstall",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onUninstall",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pluginManifest",
    outputs: [
      {
        components: [
          {
            internalType: "bytes4[]",
            name: "interfaceIds",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "dependencyInterfaceIds",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "executionFunctions",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "permittedExecutionSelectors",
            type: "bytes4[]",
          },
          {
            internalType: "bool",
            name: "permitAnyExternalAddress",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "canSpendNativeToken",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "address",
                name: "externalAddress",
                type: "address",
              },
              {
                internalType: "bool",
                name: "permitAnySelector",
                type: "bool",
              },
              {
                internalType: "bytes4[]",
                name: "selectors",
                type: "bytes4[]",
              },
            ],
            internalType: "struct ManifestExternalCallPermission[]",
            name: "permittedExternalCalls",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "userOpValidationFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "runtimeValidationFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "preUserOpValidationHooks",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "preRuntimeValidationHooks",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "preExecHook",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "postExecHook",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestExecutionHook[]",
            name: "executionHooks",
            type: "tuple[]",
          },
        ],
        internalType: "struct PluginManifest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pluginMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "string",
            name: "author",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "functionSelector",
                type: "bytes4",
              },
              {
                internalType: "string",
                name: "permissionDescription",
                type: "string",
              },
            ],
            internalType: "struct SelectorPermission[]",
            name: "permissionDescriptors",
            type: "tuple[]",
          },
        ],
        internalType: "struct PluginMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "preExecHookData",
        type: "bytes",
      },
    ],
    name: "postExecutionHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "preExecutionHook",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "preRuntimeValidationHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
    ],
    name: "preUserOpValidationHook",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "runtimeValidationFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "strategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "conditionAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "id",
                    type: "uint32",
                  },
                  {
                    internalType: "uint8",
                    name: "result1",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "result0",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Condition",
                name: "condition",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "selector",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "parameter",
                    type: "bytes",
                  },
                  {
                    internalType: "address",
                    name: "target",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "enum IStrategyBuilderPlugin.ActionType",
                    name: "actionType",
                    type: "uint8",
                  },
                ],
                internalType: "struct IStrategyBuilderPlugin.Action[]",
                name: "actions",
                type: "tuple[]",
              },
            ],
            internalType: "struct IStrategyBuilderPlugin.StrategyStep[]",
            name: "steps",
            type: "tuple[]",
          },
        ],
        internalType: "struct IStrategyBuilderPlugin.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
    ],
    name: "userOpValidationFunction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200479f3803806200479f833981016040819052620000349162000069565b6001600160a01b039182166080521660a052620000a1565b80516001600160a01b03811681146200006457600080fd5b919050565b600080604083850312156200007d57600080fd5b62000088836200004c565b915062000098602084016200004c565b90509250929050565b60805160a051614699620001066000396000818161028001528181611ea20152818161225b01526123f901526000818161030501528181611e0e015281816121d20152818161297601528181612a9801528181612bf20152612c7d01526146996000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80636d61fe70116100de578063af87348311610097578063c776313011610071578063c7763130146103dc578063d7ec3598146103f1578063d855198a14610404578063ffa1ad741461042457600080fd5b8063af87348314610339578063ba542eae146103c9578063bfd151c11461022d57600080fd5b80636d61fe701461032757806388e18ce4146103395780638a91b0e3146103275780639478a77f1461035a578063a3f4df7e1461036d578063a7be85c6146103a357600080fd5b80633bd797b7116101305780633bd797b7146102685780633c93adee1461027b57806342ab2be1146102ba57806346d60eb2146102cd57806358949453146102ed5780636999b3771461030057600080fd5b806301ffc9a71461017857806305fe4172146101a057806308fdca32146101b55780630c7ecd841461022d5780631128186d14610240578063118a538914610253575b600080fd5b61018b610186366004613136565b610448565b60405190151581526020015b60405180910390f35b6101b36101ae36600461316a565b61047f565b005b6101c86101c33660046131a7565b610751565b60408051825180516001600160a01b03908116835260208083015163ffffffff908116828601528386015160ff908116868801526060948501511684860152908601511660808401529284015190921660a082015291015160c082015260e001610197565b6101b361023b366004613230565b610836565b6101b361024e3660046132a2565b610868565b61025b610891565b6040516101979190613346565b6101b361027636600461341f565b61095d565b6102a27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610197565b6101b36102c836600461316a565b610ba6565b6102e06102db366004613230565b610bfa565b6040516101979190613490565b6101b36102fb3660046134a3565b610c25565b6102a27f000000000000000000000000000000000000000000000000000000000000000081565b6101b3610335366004613537565b5050565b61034c610347366004613578565b610ebc565b604051908152602001610197565b6101b36103683660046135d7565b610ee6565b6102e06040518060400160405280601781526020017629ba3930ba32b3bc90213ab4b63232b91028363ab3b4b760491b81525081565b6102e06040518060400160405280600781526020016633426c6f636b7360c81b81525081565b6101b36103d736600461316a565b61111f565b6103e4611497565b60405161019791906137d3565b61034c6103ff3660046131a7565b6119f6565b6104176104123660046131a7565b611a4a565b60405161019791906139ee565b6102e060405180604001604052806005815260200164302e302e3160d81b81525081565b60006001600160e01b0319821663f23b1ed760e01b148061047957506301ffc9a760e01b6001600160e01b03198316145b92915050565b3381600060038161049085856119f6565b81526020810191909152604001600020546001600160a01b0316036104c857604051630cc8721760e31b815260040160405180910390fd5b60006104d433856119f6565b600081815260036020908152604080832081516101008101835281546001600160a01b038082166080840190815263ffffffff600160a01b8404811660a086015260ff600160c01b8504811660c0870152600160c81b90940490931660e08501528352600180850154928316968401879052640100000000909204169382019390935260029091015460608201529394509082906105739033906119f6565b815260208082019290925260409081016000908120868252600290935290812054825492935063ffffffff16916105ac90600190613acc565b9050808263ffffffff16146106805760008382815481106105cf576105cf613adf565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16905080848463ffffffff168154811061061057610610613adf565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550826002600061065233856119f6565b815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550505b8280548061069057610690613af5565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a021916905591909255855180519101516106d792339291908c90611c9a565b600085815260036020908152604080832080546001600160d01b03191681556001810180546001600160c01b031916905560020192909255905163ffffffff8a16815233917f8c1bcc5bc952f57b9bb9ca11fcfe46e46cdcc85cfab32adaef297a52892b3901910160405180910390a25050505050505050565b604080516101008101825260006080820181815260a0830182905260c0830182905260e0830182905282526020820181905291810182905260608101919091526003600061079f85856119f6565b8152602080820192909252604090810160002081516101008101835281546001600160a01b038082166080840190815263ffffffff600160a01b8404811660a086015260ff600160c01b8504811660c0870152600160c81b90940490931660e08501528352600184015491821695830195909552640100000000900490931691830191909152600201546060820152905092915050565b6000356001600160e01b031916856040516384b9b37960e01b815260040161085f929190613b0b565b60405180910390fd5b6000356001600160e01b031916836040516384b9b37960e01b815260040161085f929190613b0b565b6108bc6040518060800160405280606081526020016060815260200160608152602001606081525090565b6108e76040518060800160405280606081526020016060815260200160608152602001606081525090565b604080518082018252601781527629ba3930ba32b3bc90213ab4b63232b91028363ab3b4b760491b602080830191909152908352815180830183526005815264302e302e3160d81b818301528382015281518083018352600781526633426c6f636b7360c81b9181019190915290820152919050565b3385600060038161096e85856119f6565b81526020810191909152604001600020546001600160a01b0316146109a657604051634dd7513760e11b815260040160405180910390fd5b33866000806109b584846119f6565b8152602001908152602001600020600101805490506000036109ea57604051635737b5dd60e01b815260040160405180910390fd5b6109f387611dec565b610a1c33610a046020880188613b28565b610a146040890160208a0161316a565b8c6001611c9a565b6000610a28338b6119f6565b9050600060036000610a3a338e6119f6565b8152602081019190915260400160002090508681610a588282613b45565b50506001810180546001600160a01b038b16640100000000026001600160c01b031990911663ffffffff8d1617179055600281018890556000610a9b338c6119f6565b9050600160008281526020019081526020016000208c90806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff160217905550600180600083815260200190815260200160002080549050610b1e9190613acc565b6002600085815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550336001600160a01b03167fdb9e062b56198be71327d2a755449c3fe38502eff5c81468ebda215c5e3ffcea8d8d8b8e8e604051610b90959493929190613bfe565b60405180910390a2505050505050505050505050565b3381600080610bb584846119f6565b815260200190815260200160002060010180549050600003610bea57604051635737b5dd60e01b815260040160405180910390fd5b610bf43384611f33565b50505050565b60606000356001600160e01b031916866040516384b9b37960e01b815260040161085f929190613b0b565b33846000806000610c3685856119f6565b81526020810191909152604001600020600101541115610c695760405163634f694f60e11b815260040160405180910390fd5b6000806000610c78338a6119f6565b81526020810191909152604001600090812080546001600160a01b0319166001600160a01b03891617815591505b84811015610e6d576000868683818110610cc257610cc2613adf565b9050602002810190610cd49190613c90565b610cdd90613f20565b6001808501805491820181556000908152602090819020835180516002909402909101805492820151604083015160609093015160ff908116600160c81b0260ff60c81b1991909416600160c01b021661ffff60c01b1963ffffffff909216600160a01b026001600160c01b03199095166001600160a01b0390961695861794909417169290921717815591925015610d885781518051602090910151610d889133918d6001611f8e565b60005b826020015151811015610e62578160010183602001518281518110610db257610db2613adf565b6020908102919091018101518254600180820185556000948552938390208251600590920201805463ffffffff191660e09290921c919091178155918101519092820190610e009082614050565b5060408201516002820180546001600160a01b0319166001600160a01b0390921691909117905560608201516003820155608082015160048201805460ff191660018381811115610e5357610e536136de565b02179055505050600101610d8b565b505050600101610ca6565b50336001600160a01b03167f6055ac00abe054259552b545157e716d05be56347e14d86c1492cc51180de26a888884604051610eab9392919061410f565b60405180910390a250505050505050565b600080356001600160e01b031916846040516384b9b37960e01b815260040161085f929190613b0b565b81836000600381610ef785856119f6565b81526020810191909152604001600020546001600160a01b031603610f2f57604051630cc8721760e31b815260040160405180910390fd5b6000610f3b85876119f6565b600081815260036020908152604080832081516101008101835281546001600160a01b038082166080840190815263ffffffff600160a01b8404811660a086015260ff600160c01b8504811660c0870152600160c81b90940490931660e08501528084526001850154928316968401969096526401000000009091041692810192909252600201546060820152929350610fd69088906120d7565b5090508060ff1660000361101e578151805160209091015160405163586601c960e11b81526001600160a01b03909216600483015263ffffffff16602482015260440161085f565b600061102e888460200151611f33565b905082606001518111156110555760405163735a16a760e11b815260040160405180910390fd5b60008060006110688b87602001516119f6565b815260208101919091526040016000908120546001600160a01b03169150826110925760006110a3565b6110a38a8660400151858c866121a7565b90506110b48a86600001518d6124ae565b604080860151815163ffffffff8e1681526001600160a01b039182166020820152918201839052606082018590528b16907ff3b51f5934782975a42d014d05c1bcf64abdb16c56051b2b64208a610987800f9060800160405180910390a25050505050505050505050565b338160008061112e84846119f6565b81526020019081526020016000206001018054905060000361116357604051635737b5dd60e01b815260040160405180910390fd5b600061116f33856119f6565b6000818152600160205260409020549091501561119f57604051634c7ff9bd60e11b815260040160405180910390fd5b6000818152602081815260408083208151808301835281546001600160a01b031681526001820180548451818702810187019095528085529194929385840193909290879084015b828210156113b857600084815260208082206040805160c0810182526002870290920180546001600160a01b03811684840190815263ffffffff600160a01b830416606086015260ff600160c01b830481166080870152600160c81b90920490911660a08501528352600181018054835181870281018701909452808452939591948681019491929084015b828210156113a15760008481526020908190206040805160a0810190915260058502909101805460e01b6001600160e01b031916825260018101805492939192918401916112c090613fce565b80601f01602080910402602001604051908101604052809291908181526020018280546112ec90613fce565b80156113395780601f1061130e57610100808354040283529160200191611339565b820191906000526020600020905b81548152906001019060200180831161131c57829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff16600181111561137d5761137d6136de565b600181111561138e5761138e6136de565b8152505081526020019060010190611273565b5050505081525050815260200190600101906111e7565b5050505081525050905060005b816020015151811015611428576000826020015182815181106113ea576113ea613adf565b60209081029190910101515180519091506001600160a01b03161561141f5761141f33826000015183602001518a6000611f8e565b506001016113c5565b50600082815260208190526040812080546001600160a01b0319168155906114536001830182612f6b565b505060405163ffffffff8616815233907fd422eb39d02e723621702475863a9c9799e4aaa0c2d76dac1ceac800e915700b9060200160405180910390a25050505050565b61149f612f8f565b6114a7612f8f565b604080516001808252818301909252906020808301908036833750505060208201819052805163f23b1ed760e01b91906000906114e6576114e6613adf565b6001600160e01b03199290921660209283029190910182015260408051600580825260c0820190925291820160a080368337505050604082018190528051635894945360e01b919060009061153d5761153d613adf565b6001600160e01b031990921660209283029190910190910152604081015180516342ab2be160e01b9190600190811061157857611578613adf565b6001600160e01b03199092166020928302919091019091015260408101518051633bd797b760e01b919060029081106115b3576115b3613adf565b6001600160e01b03199092166020928302919091019091015260408101518051635d2a175760e11b919060039081106115ee576115ee613adf565b6001600160e01b031990921660209283029190910190910152604081015180516302ff20b960e11b9190600490811061162957611629613adf565b6001600160e01b03199290921660209283029190910182015260408051606081018252600281526000928101839052808201929092528051600580825260c0820190925290816020015b61167b612ff4565b81526020019060019003908161167357505060e0830190815260408051808201909152635894945360e01b815260208101839052905180516000906116c2576116c2613adf565b602002602001018190525060405180604001604052806342ab2be160e01b6001600160e01b0319168152602001828152508260e0015160018151811061170a5761170a613adf565b60200260200101819052506040518060400160405280633bd797b760e01b6001600160e01b0319168152602001828152508260e0015160028151811061175257611752613adf565b6020026020010181905250604051806040016040528063ba542eae60e01b6001600160e01b0319168152602001828152508260e0015160038151811061179a5761179a613adf565b602002602001018190525060405180604001604052806305fe417260e01b6001600160e01b0319168152602001828152508260e001516004815181106117e2576117e2613adf565b602090810291909101015260408051600580825260c0820190925290816020015b61180b612ff4565b8152602001906001900390816118035750506101408301908152604080518082018252635894945360e01b815281516060810183526004815260006020808301829052938201819052928201529151805190919061186b5761186b613adf565b6020908102919091018101919091526040805180820182526342ab2be160e01b815281516060810183526004815260008185018190529281019290925291820152610140830151805160019081106118c5576118c5613adf565b602090810291909101810191909152604080518082018252633bd797b760e01b8152815160608101835260048152600081850181905292810192909252918201526101408301518051600290811061191f5761191f613adf565b6020908102919091018101919091526040805180820182526302ff20b960e11b8152815160608101835260048152600081850181905292810192909252918201526101408301518051600390811061197957611979613adf565b602090810291909101810191909152604080518082018252635d2a175760e11b81528151606081019092529182019080600481526000602082018190526040909101529052610140830151805160049081106119d7576119d7613adf565b60209081029190910101525060016080820181905260a0820152919050565b6040516bffffffffffffffffffffffff19606084901b1660208201526001600160e01b031960e083901b16603482015260009060380160405160208183030381529060405280519060200120905092915050565b604080518082019091526000815260606020820152600080611a6c85856119f6565b8152602080820192909252604090810160009081208251808401845281546001600160a01b031681526001820180548551818802810188019096528086529195929486840194909391929184015b82821015611c8b57600084815260208082206040805160c0810182526002870290920180546001600160a01b03811684840190815263ffffffff600160a01b830416606086015260ff600160c01b830481166080870152600160c81b90920490911660a08501528352600181018054835181870281018701909452808452939591948681019491929084015b82821015611c745760008481526020908190206040805160a0810190915260058502909101805460e01b6001600160e01b03191682526001810180549293919291840191611b9390613fce565b80601f0160208091040260200160405190810160405280929190818152602001828054611bbf90613fce565b8015611c0c5780601f10611be157610100808354040283529160200191611c0c565b820191906000526020600020905b815481529060010190602001808311611bef57829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff166001811115611c5057611c506136de565b6001811115611c6157611c616136de565b8152505081526020019060010190611b46565b505050508152505081526020019060010190611aba565b50505091525090949350505050565b600081611cea5760405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b03166345248a6160e11b179052611d2f565b60405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b031663023ef5a960e01b1790525b90506000866001600160a01b03166338997b11876000856040518463ffffffff1660e01b8152600401611d649392919061430a565b6000604051808303816000875af1158015611d83573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611dab9190810190614387565b9050600081806020019051810190611dc391906143cb565b905080611de257604051627db9bf60e11b815260040160405180910390fd5b5050505050505050565b60405163180c930960e01b81526001600160a01b0382811660048301526001917f00000000000000000000000000000000000000000000000000000000000000009091169063180c930990602401602060405180830381865afa158015611e57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7b91906143cb565b611e83575060005b604051632a90cead60e11b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000016906355219d5a90602401602060405180830381865afa158015611ee9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0d91906143cb565b611f15575060005b8061033557604051633177657b60e21b815260040160405180910390fd5b6000611f418383600061266c565b60405163ffffffff841681529091506001600160a01b038416907f30bcdb9ee7609081b23f2866129f2079d711802265ba54036d4f8bf6c62229779060200160405180910390a292915050565b600081611fde5760405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b031663014b0af760e41b179052612023565b60405163ffffffff80861660248301528416604482015260640160408051601f198184030181529190526020810180516001600160e01b03166339404bed60e21b1790525b90506000866001600160a01b03166338997b11876000856040518463ffffffff1660e01b81526004016120589392919061430a565b6000604051808303816000875af1158015612077573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261209f9190810190614387565b90506000818060200190518101906120b791906143cb565b905080611de2576040516334eb2f4560e21b815260040160405180910390fd5b805160009081906001600160a01b03166120fd575050604081015160019060ff166121a0565b825160208401516040516389a78a0360e01b81526001600160a01b03878116600483015263ffffffff90921660248201529116906389a78a0390604401602060405180830381865afa158015612157573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061217b91906143e6565b91508160ff166001036121965750604082015160ff166121a0565b50606082015160ff165b9250929050565b60405163aac61a1f60e01b81526001600160a01b0385811660048301526024820185905260009182917f0000000000000000000000000000000000000000000000000000000000000000169063aac61a1f90604401602060405180830381865afa158015612219573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061223d9190614403565b90506001600160a01b03861615612333576040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044810182905260009060640160408051601f198184030181529181526020820180516001600160e01b031663095ea7b360e01b179052516338997b1160e01b81529091506001600160a01b038916906338997b11906122e9908a90600090869060040161430a565b6000604051808303816000875af1158015612308573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526123309190810190614387565b50505b60006001600160a01b03871661238f576040516001600160a01b0380871660248301528516604482015260640160408051601f198184030181529190526020810180516001600160e01b031663d66672c960e01b1790526123e6565b6040516001600160a01b0380891660248301526044820184905280871660648301528516608482015260a40160408051601f198184030181529190526020810180516001600160e01b0316630bceddc760e01b1790525b9050876001600160a01b03166338997b117f000000000000000000000000000000000000000000000000000000000000000060006001600160a01b03168a6001600160a01b03161461243957600061243b565b845b846040518463ffffffff1660e01b815260040161245a9392919061430a565b6000604051808303816000875af1158015612479573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124a19190810190614387565b5090979650505050505050565b81516020830151604051632b8c165760e11b81526001600160a01b03868116600483015263ffffffff90921660248201529116906357182cae90604401602060405180830381865afa158015612508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061252c91906143cb565b1561265157602082015160405163ffffffff909116602482015260009060440160408051601f198184030181529181526020820180516001600160e01b03166303d049bb60e01b179052845190516338997b1160e01b81529192506000916001600160a01b038716916338997b11916125ac91908590879060040161430a565b6000604051808303816000875af11580156125cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526125f39190810190614387565b905060008180602001905181019061260b91906143cb565b9050806126495784516020860151604051637b81003760e01b81526001600160a01b03909216600483015263ffffffff16602482015260440161085f565b505050505050565b6126678383600001518460200151846000611c9a565b505050565b60008060008061267c87876119f6565b81526020019081526020016000206001018361ffff16815481106126a2576126a2613adf565b600091825260208083206040805160c081018252600290940290910180546001600160a01b03811685840190815263ffffffff600160a01b830416606087015260ff600160c01b830481166080880152600160c81b90920490911660a0860152845260018101805483518186028101860190945280845294959194868501949192909184015b828210156128565760008481526020908190206040805160a0810190915260058502909101805460e01b6001600160e01b0319168252600181018054929391929184019161277590613fce565b80601f01602080910402602001604051908101604052809291908181526020018280546127a190613fce565b80156127ee5780601f106127c3576101008083540402835291602001916127ee565b820191906000526020600020905b8154815290600101906020018083116127d157829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460609091019060ff166001811115612832576128326136de565b6001811115612843576128436136de565b8152505081526020019060010190612728565b505050508152505090506000806128718784600001516120d7565b915091508160ff1660010361291b5760005b8360200151518110156128d05760006128b989866020015184815181106128ac576128ac613adf565b602002602001015161294c565b90506128c5818761441c565b955050600101612883565b50866001600160a01b03167f9e69fce51107df6a8ea6c6add2311f64f842e81c07b565c38864bd16f098739f878786602001516040516129129392919061442f565b60405180910390a25b61ffff81161561294257600061293288888461266c565b905061293e818661441c565b9450505b5050509392505050565b6040808201518251602084015192516334dcc79760e01b8152600093849384936001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016936334dcc797936129ab939291600401614458565b6040805180830381865afa1580156129c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129eb919061448c565b915091506000816129fd576000612a67565b6040516370a0823160e01b81526001600160a01b0387811660048301528416906370a0823190602401602060405180830381865afa158015612a43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a679190614403565b9050612a738686612d41565b845160405163d659e5d160e01b81526001600160e01b031990911660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d659e5d1906024016040805180830381865afa158015612ae6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b0a91906144c1565b5190508215612c66576040516370a0823160e01b81526001600160a01b038881166004830152600091908616906370a0823190602401602060405180830381865afa158015612b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b819190614403565b9050600080836002811115612b9857612b986136de565b14612bac57612ba78483613acc565b612bb6565b612bb68285613acc565b885160405163f25be75360e01b81526001600160a01b0389811660048301526001600160e01b03199092166024820152604481018390529192507f0000000000000000000000000000000000000000000000000000000000000000169063f25be75390606401602060405180830381865afa158015612c39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c5d9190614403565b96505050612cf6565b604051638b33fc9960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638b33fc9990612cb29084906004016144ff565b602060405180830381865afa158015612ccf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cf39190614403565b94505b866001600160a01b03167ff527f5594cdc8f8c00b64622e3fdd624abd1588919811d4f526c6b91e928806787604051612d2f9190614519565b60405180910390a25050505092915050565b600081600001518260200151604051602001612d5e92919061452c565b60408051601f198184030181529190529050600082608001516001811115612d8857612d886136de565b03612e0c57826001600160a01b03166338997b1183604001518460600151846040518463ffffffff1660e01b8152600401612dc59392919061430a565b6000604051808303816000875af1158015612de4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bf49190810190614387565b600082604001516001600160a01b031682604051612e2a919061455d565b6000604051808303816000865af19150503d8060008114612e67576040519150601f19603f3d011682016040523d82523d6000602084013e612e6c565b606091505b50915050600081806020019051810190612e86919061456f565b905060005b815181101561264957856001600160a01b03166338997b11838381518110612eb557612eb5613adf565b602002602001015160000151848481518110612ed357612ed3613adf565b602002602001015160200151858581518110612ef157612ef1613adf565b6020026020010151604001516040518463ffffffff1660e01b8152600401612f1b9392919061430a565b6000604051808303816000875af1158015612f3a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612f629190810190614387565b50600101612e8b565b5080546000825560020290600052602060002090810190612f8c9190613030565b50565b604051806101800160405280606081526020016060815260200160608152602001606081526020016000151581526020016000151581526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b60408051808201909152600081526020810161302b6040805160608101909152806000815260006020820181905260409091015290565b905290565b8082111561305e5780546001600160d01b031916815560006130556001830182613062565b50600201613030565b5090565b5080546000825560050290600052602060002090810190612f8c91905b8082111561305e57805463ffffffff1916815560006130a160018301826130cf565b506002810180546001600160a01b03191690556000600382015560048101805460ff1916905560050161307f565b5080546130db90613fce565b6000825580601f106130eb575050565b601f016020900490600052602060002090810190612f8c91905b8082111561305e5760008155600101613105565b80356001600160e01b03198116811461313157600080fd5b919050565b60006020828403121561314857600080fd5b61315182613119565b9392505050565b63ffffffff81168114612f8c57600080fd5b60006020828403121561317c57600080fd5b813561315181613158565b6001600160a01b0381168114612f8c57600080fd5b803561313181613187565b600080604083850312156131ba57600080fd5b82356131c581613187565b915060208301356131d581613158565b809150509250929050565b60ff81168114612f8c57600080fd5b60008083601f84011261320157600080fd5b5081356001600160401b0381111561321857600080fd5b6020830191508360208285010111156121a057600080fd5b60008060008060006080868803121561324857600080fd5b8535613253816131e0565b9450602086013561326381613187565b93506040860135925060608601356001600160401b0381111561328557600080fd5b613291888289016131ef565b969995985093965092949392505050565b6000806000604084860312156132b757600080fd5b83356132c2816131e0565b925060208401356001600160401b038111156132dd57600080fd5b6132e9868287016131ef565b9497909650939450505050565b60005b838110156133115781810151838201526020016132f9565b50506000910152565b600081518084526133328160208601602086016132f6565b601f01601f19169290920160200192915050565b60006020808352835160808285015261336260a085018261331a565b905081850151601f19604081878503016040880152613381848461331a565b9350604088015192508187850301606088015261339e848461331a565b6060890151888203840160808a015280518083529195508601935085850190600581901b8601870160005b828110156134105787820386018452865180516001600160e01b03191683528901518983018690526133fd8684018261331a565b978a0197948a01949250506001016133c9565b509a9950505050505050505050565b600080600080600085870361010081121561343957600080fd5b863561344481613158565b9550602087013561345481613158565b9450604087013561346481613187565b9350606087013592506080607f198201121561347f57600080fd5b506080860190509295509295909350565b602081526000613151602083018461331a565b600080600080606085870312156134b957600080fd5b84356134c481613158565b935060208501356134d481613187565b925060408501356001600160401b03808211156134f057600080fd5b818701915087601f83011261350457600080fd5b81358181111561351357600080fd5b8860208260051b850101111561352857600080fd5b95989497505060200194505050565b6000806020838503121561354a57600080fd5b82356001600160401b0381111561356057600080fd5b61356c858286016131ef565b90969095509350505050565b60008060006060848603121561358d57600080fd5b8335613598816131e0565b925060208401356001600160401b038111156135b357600080fd5b840161016081870312156135c657600080fd5b929592945050506040919091013590565b6000806000606084860312156135ec57600080fd5b83356135f781613158565b9250602084013561360781613187565b9150604084013561361781613187565b809150509250925092565b60008151808452602080850194506020840160005b8381101561365d5781516001600160e01b03191687529582019590820190600101613637565b509495945050505050565b600082825180855260208086019550808260051b84010181860160005b848110156124a157858303601f19018952815180516001600160a01b03168452848101511515858501526040908101516060918501829052906136ca81860183613622565b9a86019a9450505090830190600101613685565b634e487b7160e01b600052602160045260246000fd5b805160058110613706576137066136de565b825260208181015160ff1690830152604090810151910152565b60008151808452602080850194506020840160005b8381101561365d57815180516001600160e01b031916885283015161375c848901826136f4565b506080969096019590820190600101613735565b60008151808452602080850194506020840160005b8381101561365d57815180516001600160e01b0319168852838101516137ad858a01826136f4565b50604001516137bf60808901826136f4565b5060e0969096019590820190600101613785565b60208152600082516101808060208501526137f26101a0850183613622565b91506020850151601f19808685030160408701526138108483613622565b9350604087015191508086850301606087015261382d8483613622565b9350606087015191508086850301608087015261384a8483613622565b93506080870151915061386160a087018315159052565b60a087015180151560c0880152915060c08701519150808685030160e087015261388b8483613668565b935060e087015191506101008187860301818801526138aa8584613720565b9450808801519250506101208187860301818801526138c98584613720565b9450808801519250506101408187860301818801526138e88584613720565b9450808801519250506101608187860301818801526139078584613720565b9088015187820390920184880152935090506139238382613770565b9695505050505050565b6002811061393d5761393d6136de565b9052565b63ffffffff60e01b81511682526000602082015160a0602085015261396960a085018261331a565b905060018060a01b036040840151166040850152606083015160608501526080830151613999608086018261392d565b509392505050565b60008282518085526020808601955060208260051b8401016020860160005b848110156124a157601f198684030189526139dc838351613941565b988401989250908301906001016139c0565b602080825282516001600160a01b03168282015282810151604080840152805160608401819052600092916080919083019082860190600581901b87018401865b82811015613aa957607f198983030184528451805180516001600160a01b0316845260208082015163ffffffff169085015260408082015160ff90811691860191909152606091820151169084015287015160a0878401819052613a95818501836139a1565b968901969589019593505050600101613a2f565b5098975050505050505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561047957610479613ab6565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6001600160e01b031992909216825260ff16602082015260400190565b600060208284031215613b3a57600080fd5b813561315181613187565b8135613b5081613187565b81546001600160a01b031981166001600160a01b039290921691821783556020840135613b7c81613158565b63ffffffff60a01b60a09190911b166001600160c01b031982168317811784556040850135613baa816131e0565b60ff60c01b60c09190911b166001600160c81b0319831684178217811785556060860135613bd7816131e0565b6001600160d01b031993909316909317179190911760c89190911b60ff60c81b1617905550565b63ffffffff868116825285811660208301526101008201908535613c2181613187565b6001600160a01b039081166040850152602087013590613c4082613158565b9181166060850152604087013591613c57836131e0565b60ff8316608086015260608801359250613c70836131e0565b60ff9290921660a0850152509390931660c082015260e001529392505050565b60008235609e19833603018112613ca657600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b0381118282101715613ce857613ce8613cb0565b60405290565b604080519081016001600160401b0381118282101715613ce857613ce8613cb0565b604051608081016001600160401b0381118282101715613ce857613ce8613cb0565b604051606081016001600160401b0381118282101715613ce857613ce8613cb0565b604051601f8201601f191681016001600160401b0381118282101715613d7c57613d7c613cb0565b604052919050565b60006001600160401b03821115613d9d57613d9d613cb0565b5060051b60200190565b60006001600160401b03821115613dc057613dc0613cb0565b50601f01601f191660200190565b80356002811061313157600080fd5b600082601f830112613dee57600080fd5b81356020613e03613dfe83613d84565b613d54565b82815260059290921b84018101918181019086841115613e2257600080fd5b8286015b84811015613f155780356001600160401b0380821115613e465760008081fd5b9088019060a0828b03601f1901811315613e605760008081fd5b613e68613cc6565b613e73888501613119565b815260408085013584811115613e895760008081fd5b85019350603f84018d13613e9d5760008081fd5b88840135613ead613dfe82613da7565b8181528e83838801011115613ec25760008081fd5b818387018c83013760008b8383010152808b850152505060609350613ee884860161319c565b9082015260808481013584830152613f01838601613dce565b908201528652505050918301918301613e26565b509695505050505050565b600081360360a0811215613f3357600080fd5b613f3b613cee565b6080821215613f4957600080fd5b613f51613d10565b91508335613f5e81613187565b82526020840135613f6e81613158565b60208301526040840135613f81816131e0565b60408301526060840135613f94816131e0565b60608301529081526080830135906001600160401b03821115613fb657600080fd5b613fc236838601613ddd565b60208201529392505050565b600181811c90821680613fe257607f821691505b60208210810361400257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115612667576000816000526020600020601f850160051c810160208610156140315750805b601f850160051c820191505b818110156126495782815560010161403d565b81516001600160401b0381111561406957614069613cb0565b61407d816140778454613fce565b84614008565b602080601f8311600181146140b2576000841561409a5750858301515b600019600386901b1c1916600185901b178555612649565b600085815260208120601f198616915b828110156140e1578886015182559484019460019091019084016140c2565b50858210156140ff5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b63ffffffff8416815260018060a01b03831660208201526060604082015260018060a01b03825416606082015260406080820152600060a08201600184015480825260c08401915060c08160051b85010160018601600052602060002060005b838110156142fc5760bf1980888503018652825460018060a01b038116855263ffffffff8160a01c16602086015260ff8160c01c16604086015260ff8160c81c1660608601525060a0608085015260a08401600184015480825260c08601915060c08160051b87010160018601600052602060002060005b838110156142df5788830386018552815460e01b6001600160e01b031916835260a06020840152600182015460009061421f81613fce565b8060a0870152600182166000811461423e576001811461425a57614291565b60ff19831660c088015260c082151560051b8801019350614291565b60018601600052602060002060005b8381101561428857815489820160c00152600190910190602001614269565b880160c0019450505b50505060028301546001600160a01b0316604085015260038301546060850152600483015460ff166142c6608086018261392d565b50602095909501949250600591909101906001016141e7565b50506020989098019795505050600292909201915060010161416f565b509098975050505050505050565b60018060a01b0384168152826020820152606060408201526000614331606083018461331a565b95945050505050565b600082601f83011261434b57600080fd5b8151614359613dfe82613da7565b81815284602083860101111561436e57600080fd5b61437f8260208301602087016132f6565b949350505050565b60006020828403121561439957600080fd5b81516001600160401b038111156143af57600080fd5b61437f8482850161433a565b8051801515811461313157600080fd5b6000602082840312156143dd57600080fd5b613151826143bb565b6000602082840312156143f857600080fd5b8151613151816131e0565b60006020828403121561441557600080fd5b5051919050565b8082018082111561047957610479613ab6565b63ffffffff8416815261ffff8316602082015260606040820152600061433160608301846139a1565b6001600160a01b03841681526001600160e01b0319831660208201526060604082018190526000906143319083018461331a565b6000806040838503121561449f57600080fd5b82516144aa81613187565b91506144b8602084016143bb565b90509250929050565b6000604082840312156144d357600080fd5b6144db613cee565b8251600381106144ea57600080fd5b81526020928301519281019290925250919050565b6020810160038310614513576145136136de565b91905290565b6020815260006131516020830184613941565b6001600160e01b031983168152815160009061454f8160048501602087016132f6565b919091016004019392505050565b60008251613ca68184602087016132f6565b6000602080838503121561458257600080fd5b82516001600160401b038082111561459957600080fd5b818501915085601f8301126145ad57600080fd5b81516145bb613dfe82613d84565b81815260059190911b830184019084810190888311156145da57600080fd5b8585015b83811015613aa9578051858111156145f65760008081fd5b86016060818c03601f190181131561460e5760008081fd5b614616613d32565b8983015161462381613187565b81526040838101518b8301529183015191888311156146425760008081fd5b6146508e8c8587010161433a565b90820152855250509186019186016145de56fea2646970667358221220b87fce9d5066f992db268cf286d0e28300bd5535e60f867cdd266b24f962292164736f6c63430008180033";

type StrategyBuilderPluginConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategyBuilderPluginConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategyBuilderPlugin__factory extends ContractFactory {
  constructor(...args: StrategyBuilderPluginConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeController: AddressLike,
    _feeHandler: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _feeController,
      _feeHandler,
      overrides || {}
    );
  }
  override deploy(
    _feeController: AddressLike,
    _feeHandler: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _feeController,
      _feeHandler,
      overrides || {}
    ) as Promise<
      StrategyBuilderPlugin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): StrategyBuilderPlugin__factory {
    return super.connect(runner) as StrategyBuilderPlugin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyBuilderPluginInterface {
    return new Interface(_abi) as StrategyBuilderPluginInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StrategyBuilderPlugin {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StrategyBuilderPlugin;
  }
}
