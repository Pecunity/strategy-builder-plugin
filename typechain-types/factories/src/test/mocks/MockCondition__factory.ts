/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockCondition,
  MockConditionInterface,
} from "../../../../src/test/mocks/MockCondition";

const _abi = [
  {
    inputs: [],
    name: "BaseCondition__ConditionIsInUse",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "action",
        type: "uint16",
      },
    ],
    name: "actionValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "action",
        type: "uint16",
      },
    ],
    name: "addAutomationToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "result",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
        ],
        internalType: "struct MockCondition.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "addCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "strategy",
        type: "uint16",
      },
    ],
    name: "addStrategyToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
    ],
    name: "automations",
    outputs: [
      {
        internalType: "uint16[]",
        name: "",
        type: "uint16[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
    ],
    name: "checkCondition",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_id",
        type: "uint16",
      },
    ],
    name: "conditionActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_id",
        type: "uint16",
      },
    ],
    name: "deleteCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "isUpdateable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "automation",
        type: "uint16",
      },
    ],
    name: "removeAutomationFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "strategy",
        type: "uint16",
      },
    ],
    name: "removeStrategyFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
    ],
    name: "strategies",
    outputs: [
      {
        internalType: "uint16[]",
        name: "",
        type: "uint16[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "strategy",
        type: "uint16",
      },
    ],
    name: "strategyValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "updateCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ac1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80639aaf7dd31161008c578063b77ecaf111610066578063b77ecaf1146101d5578063c01e7488146101e8578063dce982141461020d578063e49ffc6b1461024e57600080fd5b80639aaf7dd31461019c5780639f7fd928146101af578063a95f105d146101c257600080fd5b80633d392a4b116100c85780633d392a4b14610140578063412140b5146101605780634680ecca1461017657806379cae4f41461018957600080fd5b80630556540a146100ef5780630ebb9c3414610118578063372dce071461012d575b600080fd5b6101036100fd36600461089f565b50600090565b60405190151581526020015b60405180910390f35b61012b61012636600461089f565b61028f565b005b61010361013b3660046108ba565b6102f7565b61015361014e366004610904565b610488565b60405161010f9190610920565b61010361016e366004610904565b600092915050565b610153610184366004610904565b610529565b6101036101973660046108ba565b6105a2565b6101036101aa3660046108ba565b61063c565b61012b6101bd366004610968565b610751565b6101036101d03660046108ba565b610781565b6101036101e3366004610904565b61081a565b6101fb6101f6366004610904565b610849565b60405160ff909116815260200161010f565b61010361021b3660046109a7565b6001600160a01b0392909216600090815260026020908152604080832061ffff9586168452909152902054821691161490565b61010361025c3660046109a7565b6001600160a01b0392909216600090815260036020908152604080832061ffff9586168452909152902054821691161490565b33600090815260016020908152604080832061ffff851684529091529020541515806102d657503360009081526020818152604080832061ffff8516845290915290205415155b156102f45760405163846e233f60e01b815260040160405180910390fd5b50565b33600081815260016020908152604080832061ffff808816855290835281842094845260038352818420868216808652935290832054845493949391169190839083908110610348576103486109ea565b60009182526020909120601082040154600f9091166002026101000a900461ffff161461037a57600092505050610482565b815460009061038b90600190610a00565b90508161ffff16811461043e5760008382815481106103ac576103ac6109ea565b60009182526020808320601083040154338452600382526040808520600f9094166002026101000a90910461ffff90811680865293909252909220805461ffff19169286169283179055855490925082918691811061040d5761040d6109ea565b90600052602060002090601091828204019190066002026101000a81548161ffff021916908361ffff160217905550505b8280548061044e5761044e610a21565b600082815260209020601060001990920191820401805461ffff6002600f8516026101000a02191690559055506001925050505b92915050565b6001600160a01b038216600090815260016020908152604080832061ffff8516845282529182902080548351818402810184019094528084526060939283018282801561051c57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116104e35790505b5050505050905092915050565b6001600160a01b03821660009081526020818152604080832061ffff8516845282529182902080548351818402810184019094528084526060939283018282801561051c576000918252602091829020805461ffff1684529082028301929091600291018084116104e357509498975050505050505050565b33600090815260016020818152604080842061ffff8781168087529184529185208054808601825581875293862060108504018054600f9095166002026101000a808502199095169388169490940292909217909255908352546106069190610a00565b33600090815260036020908152604080832061ffff96871684529091529020805461ffff19169190931617909155506001919050565b3360008181526020818152604080832061ffff80881685529083528184209484526002835281842086821680865293529083205484549394939116919083908390811061068b5761068b6109ea565b60009182526020909120601082040154600f9091166002026101000a900461ffff16146106bd57600092505050610482565b81546000906106ce90600190610a00565b90508161ffff16811461043e5760008382815481106106ef576106ef6109ea565b600091825260208083206010830401543384526002808352604080862061ffff600f909616929092026101000a90920484168086529252909220805491861661ffff199092168217905585549192508291869190811061040d5761040d6109ea565b33600090815260046020908152604080832061ffff861684529091529020819061077b8282610a49565b50505050565b3360009081526020818152604080832061ffff86811680865291845291842080546001808201835582875294862060108204018054600f9092166002026101000a8086021990921694881691909102939093179092558352546107e49190610a00565b33600090815260026020908152604080832061ffff96871684529091529020805461ffff19169190931617909155506001919050565b33600090815260046020908152604080832061ffff85168452909152812054610100900460ff165b9392505050565b6001600160a01b038216600090815260046020908152604080832061ffff8516845290915281205460ff1661087f576000610842565b50600192915050565b803561ffff8116811461089a57600080fd5b919050565b6000602082840312156108b157600080fd5b61084282610888565b600080604083850312156108cd57600080fd5b6108d683610888565b91506108e460208401610888565b90509250929050565b80356001600160a01b038116811461089a57600080fd5b6000806040838503121561091757600080fd5b6108d6836108ed565b6020808252825182820181905260009190848201906040850190845b8181101561095c57835161ffff168352928401929184019160010161093c565b50909695505050505050565b600080828403606081121561097c57600080fd5b61098584610888565b92506040601f198201121561099957600080fd5b506020830190509250929050565b6000806000606084860312156109bc57600080fd5b6109c5846108ed565b92506109d360208501610888565b91506109e160408501610888565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b8181038181111561048257634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60008135801515811461048257600080fd5b610a5282610a37565b1515815460ff821691508160ff19821617835561ff00610a7460208601610a37565b151560081b168261ffff198316171783555050505056fea26469706673582212202c202c1400cd0c14ddbfbd9a0e75ce6dc383a17f68427291d96da82b0d50a81d64736f6c63430008180033";

type MockConditionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockConditionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCondition__factory extends ContractFactory {
  constructor(...args: MockConditionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockCondition & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockCondition__factory {
    return super.connect(runner) as MockCondition__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockConditionInterface {
    return new Interface(_abi) as MockConditionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockCondition {
    return new Contract(address, _abi, runner) as unknown as MockCondition;
  }
}
