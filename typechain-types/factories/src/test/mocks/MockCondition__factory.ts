/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockCondition,
  MockConditionInterface,
} from "../../../../src/test/mocks/MockCondition";

const _abi = [
  {
    inputs: [],
    name: "BaseCondition__ConditionIsInUse",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "action",
        type: "uint32",
      },
    ],
    name: "addAutomationToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "result",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
        ],
        internalType: "struct MockCondition.Condition",
        name: "condition",
        type: "tuple",
      },
    ],
    name: "addCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "addStrategyToCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "action",
        type: "uint32",
      },
    ],
    name: "automationValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "automations",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "checkCondition",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "conditionActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_id",
        type: "uint32",
      },
    ],
    name: "deleteCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "isUpdateable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "automation",
        type: "uint32",
      },
    ],
    name: "removeAutomationFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "removeStrategyFromCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "strategies",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "strategy",
        type: "uint32",
      },
    ],
    name: "strategyValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "updateCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610adc8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806389a78a031161008c578063cff8364011610066578063cff8364014610217578063e5012fb41461022a578063eec93dd01461023d578063fff5cf191461025057600080fd5b806389a78a03146101cc5780638a4914c2146101f1578063a6515d811461020457600080fd5b806314b0af70116100c857806314b0af7014610140578063384c879d1461015357806357182cae14610173578063687c0e311461018957600080fd5b8063023ef5a9146100ef57806303d049bb146101175780631245f2981461012b575b600080fd5b6101026100fd3660046108b9565b610293565b60405190151581526020015b60405180910390f35b6101026101253660046108ec565b50600090565b61013e6101393660046108ec565b610337565b005b61010261014e3660046108b9565b6103a3565b61016661016136600461091e565b610541565b60405161010e919061093a565b61010261018136600461091e565b600092915050565b610102610197366004610983565b6001600160a01b0392909216600090815260036020908152604080832063ffffffff9586168452909152902054821691161490565b6101df6101da36600461091e565b6105e8565b60405160ff909116815260200161010e565b6101026101ff3660046108b9565b61062a565b61013e6102123660046109c6565b61074a565b61010261022536600461091e565b61077c565b6101026102383660046108b9565b610784565b61016661024b36600461091e565b610823565b61010261025e366004610983565b6001600160a01b0392909216600090815260026020908152604080832063ffffffff9586168452909152902054821691161490565b33600090815260016020818152604080842063ffffffff878116808752918452918520805480860182558187529386206008850401805460079095166004026101000a808502199095169388169490940292909217909255908352546102f99190610a05565b33600090815260036020908152604080832063ffffffff87811685529252909120805463ffffffff1916929091169190911790555060015b92915050565b33600090815260016020908152604080832063ffffffff8516845290915290205415158061038257503360009081526020818152604080832063ffffffff8516845290915290205415155b156103a05760405163846e233f60e01b815260040160405180910390fd5b50565b3360008181526020818152604080832063ffffffff8088168552908352818420948452600283528184208682168086529352908320548454939493911691908390839081106103f4576103f4610a26565b6000918252602090912060088204015460079091166004026101000a900463ffffffff161461042857600092505050610331565b815460009061043990600190610a05565b90508163ffffffff1681146104f657600083828154811061045c5761045c610a26565b6000918252602080832060088304015433845260028252604080852060079094166004026101000a90910463ffffffff90811680865293909252909220805463ffffffff1916928616928317905585549092508291869181106104c1576104c1610a26565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505b8280548061050657610506610a3c565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a021916905590555060019250505092915050565b6001600160a01b038216600090815260016020908152604080832063ffffffff851684528252918290208054835181840281018401909452808452606093928301828280156105db57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161059e5790505b5050505050905092915050565b6001600160a01b038216600090815260046020908152604080832063ffffffff8516845290915281205460ff16610620576000610623565b60015b9392505050565b33600081815260016020908152604080832063ffffffff80881685529083528184209484526003835281842086821680865293529083205484549394939116919083908390811061067d5761067d610a26565b6000918252602090912060088204015460079091166004026101000a900463ffffffff16146106b157600092505050610331565b81546000906106c290600190610a05565b90508163ffffffff1681146104f65760008382815481106106e5576106e5610a26565b6000918252602080832060088304015433845260038252604080852060079094166004026101000a90910463ffffffff90811680865293909252909220805463ffffffff1916928616928317905585549092508291869181106104c1576104c1610a26565b33600090815260046020908152604080832063ffffffff86168452909152902081906107768282610a64565b50505050565b600080610623565b3360009081526020818152604080832063ffffffff8681168086529184529184208054600180820183558287529486206008820401805460079092166004026101000a8086021990921694881691909102939093179092558352546107e99190610a05565b33600090815260026020908152604080832063ffffffff96871684529091529020805463ffffffff19169190931617909155506001919050565b6001600160a01b03821660009081526020818152604080832063ffffffff851684528252918290208054835181840281018401909452808452606093928301828280156105db576000918252602091829020805463ffffffff16845290820283019290916004910180841161059e57509498975050505050505050565b803563ffffffff811681146108b457600080fd5b919050565b600080604083850312156108cc57600080fd5b6108d5836108a0565b91506108e3602084016108a0565b90509250929050565b6000602082840312156108fe57600080fd5b610623826108a0565b80356001600160a01b03811681146108b457600080fd5b6000806040838503121561093157600080fd5b6108d583610907565b602080825282518282018190526000918401906040840190835b8181101561097857835163ffffffff16835260209384019390920191600101610954565b509095945050505050565b60008060006060848603121561099857600080fd5b6109a184610907565b92506109af602085016108a0565b91506109bd604085016108a0565b90509250925092565b60008082840360608112156109da57600080fd5b6109e3846108a0565b92506040601f19820112156109f757600080fd5b506020830190509250929050565b8181038181111561033157634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60008135801515811461033157600080fd5b610a6d82610a52565b1515815460ff821691508160ff19821617835561ff00610a8f60208601610a52565b151560081b168261ffff198316171783555050505056fea26469706673582212206eada465ab6086ab6f272825cb84b96c29ee028a20e52f54401d903f3499237664736f6c634300081a0033";

type MockConditionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockConditionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCondition__factory extends ContractFactory {
  constructor(...args: MockConditionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockCondition & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockCondition__factory {
    return super.connect(runner) as MockCondition__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockConditionInterface {
    return new Interface(_abi) as MockConditionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockCondition {
    return new Contract(address, _abi, runner) as unknown as MockCondition;
  }
}
