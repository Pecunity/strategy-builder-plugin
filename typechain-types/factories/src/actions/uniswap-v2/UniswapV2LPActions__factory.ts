/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  UniswapV2LPActions,
  UniswapV2LPActionsInterface,
} from "../../../../src/actions/uniswap-v2/UniswapV2LPActions";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "UniswapV2Base__NoValidPercentageAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "UniswapV2Base__NoZeroAmountValid",
    type: "error",
  },
  {
    inputs: [],
    name: "UniswapV2LPActions__NotZeroAmountForBothTokensAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "UniswapV2LPActions__PoolPairDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "_getSwapAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "addLiqudityPercentageOfMaxPossible",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IAction.PluginExecution[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IAction.PluginExecution[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountTokenDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "addLiquidityETH",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IAction.PluginExecution[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentageETHDesired",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "addLiquidityETHPercentage",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IAction.PluginExecution[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentageTokenDesired",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "addLiquidityETHPercentageToken",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IAction.PluginExecution[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percentageADesired",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "addLiquidityPercentage",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IAction.PluginExecution[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IAction.PluginExecution[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "removeLiquidityETH",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IAction.PluginExecution[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidityPercentage",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "removeLiquidityETHPercentage",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IAction.PluginExecution[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentageLiquidity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "removeLiquidityPercentage",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IAction.PluginExecution[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2RouterAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "zap",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IAction.PluginExecution[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "inputETH",
        type: "bool",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "zapETH",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IAction.PluginExecution[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040516200274e3803806200274e83398101604081905262000034916200013c565b6001600160a01b0381166080819052604080516315ab88c960e31b8152905183929163ad5c46489160048083019260209291908290030181865afa15801562000081573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000a791906200013c565b6001600160a01b031660c0816001600160a01b0316815250506080516001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000101573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012791906200013c565b6001600160a01b031660a052506200016e9050565b6000602082840312156200014f57600080fd5b81516001600160a01b03811681146200016757600080fd5b9392505050565b60805160a05160c0516125016200024d600039600081816101b10152818161031601528181610397015281816103bd01528181610465015281816104f40152818161052a01528181610c0c01528181610c7701528181610c9d01528181610cd7015281816112f7015261151d0152600081816101fe0152610d9d01526000818161014e015281816102920152818161104e015281816111450152818161138501528181611577015281816116a10152818161175a0152818161188001528181611bfa01528181611c9101528181611d280152611dc601526125016000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063c45a0155116100a2578063ecc861d011610071578063ecc861d014610259578063ed4cc02e1461027a578063f887ea401461028d578063fa0689c1146102b4578063fbec41a8146102c757600080fd5b8063c45a0155146101f9578063ca3d653914610220578063d21f43b914610233578063ea5217c31461024657600080fd5b8063a181031e116100de578063a181031e14610199578063ad5c4648146101ac578063b96b1c0a146101d3578063c0e3ee6b146101e657600080fd5b806302e7b745146101105780632a8ea2c9146101395780634a377e1d1461014c5780636587e4ce14610186575b600080fd5b61012361011e366004611e46565b6102da565b6040516101309190611e88565b60405180910390f35b610123610147366004611e46565b610353565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b039091168152602001610130565b610123610194366004611f4a565b610403565b6101236101a7366004611fa0565b6104eb565b61016e7f000000000000000000000000000000000000000000000000000000000000000081565b6101236101e1366004611ff8565b610622565b6101236101f4366004612030565b61068f565b61016e7f000000000000000000000000000000000000000000000000000000000000000081565b61012361022e366004612097565b610753565b610123610241366004612109565b610862565b610123610254366004612109565b6108bd565b61026c610267366004612151565b610a37565b604051908152602001610130565b610123610288366004612109565b610a9b565b61016e7f000000000000000000000000000000000000000000000000000000000000000081565b6101236102c2366004611e46565b610bc1565b6101236102d5366004612173565b610c3e565b6060828015806102eb57506103e881115b1561030957604051637e839dc360e01b815260040160405180910390fd5b61034a8561034161033a887f0000000000000000000000000000000000000000000000000000000000000000610d71565b8787610e31565b60008087610403565b95945050505050565b60608280158061036457506103e881115b1561038257604051637e839dc360e01b815260040160405180910390fd5b600061038e8585610ec0565b905060006103e67f0000000000000000000000000000000000000000000000000000000000000000836103e18a7f0000000000000000000000000000000000000000000000000000000000000000610d71565b610eec565b90506103f8878260008560008a610c3e565b979650505050505050565b60608480600003610427576040516304ed2d1760e31b815260040160405180910390fd5b60408051600280825260608201909252600091816020015b610447611e04565b81526020019060019003908161043f57905050905061048f610489897f0000000000000000000000000000000000000000000000000000000000000000610d71565b88611039565b816000815181106104a2576104a26121d9565b60200260200101819052506104c288888888886104bd6110d2565b6110e4565b816001815181106104d5576104d56121d9565b6020908102919091010152979650505050505050565b606060006105197f000000000000000000000000000000000000000000000000000000000000000087610d71565b9050600084610528578661054a565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000610559838389611184565b905060008060006060891561058d576105738c868b611299565b9094509050610582858c612205565b9250600191506105ae565b6105988c868b611461565b90935090506105a7858c612205565b9350600291505b60006105bb836002612218565b60ff1667ffffffffffffffff8111156105d6576105d66121c3565b60405190808252806020026020018201604052801561060f57816020015b6105fc611e04565b8152602001906001900390816105f45790505b5090505050505050505050949350505050565b60608480158061063357506103e881115b1561065157604051637e839dc360e01b815260040160405180910390fd5b600061065e868886610e31565b9050600061067187836103e18a8a610d71565b9050610683878784846000808b610753565b98975050505050505050565b606084806000036106b3576040516304ed2d1760e31b815260040160405180910390fd5b60408051600280825260608201909252600091816020015b6106d3611e04565b8152602001906001900390816106cb5790505090506106f56104898a8a610d71565b81600081518110610708576107086121d9565b60200260200101819052506107298989898989896107246110d2565b61161d565b8160018151811061073c5761073c6121d9565b602090810291909101015298975050505050505050565b606085158015610761575084155b1561077f5760405163242f8cb960e21b815260040160405180910390fd5b856000036107995761079687866103e18b8b610d71565b95505b846000036107b3576107b088876103e18b8b610d71565b94505b60408051600380825260808201909252600091816020015b6107d3611e04565b8152602001906001900390816107cb5790505090506107f28988611039565b81600081518110610805576108056121d9565b602002602001018190525061081a8887611039565b8160018151811061082d5761082d6121d9565b602002602001018190525061084f8989898989898961084a6110d2565b6116d1565b8160028151811061073c5761073c6121d9565b60608280158061087357506103e881115b1561089157604051637e839dc360e01b815260040160405180910390fd5b6108b386866108aa6108a38a8a610d71565b8888610e31565b6000808861068f565b9695505050505050565b60408051600480825260a0820190925260609160009190816020015b6108e1611e04565b8152602001906001900390816108d957905050905060006109028787610d71565b90506000610911828988611184565b90506000806109228a8a858a61178a565b909250905060006109428b8b610938878d612205565b866000808e610753565b905081600081518110610957576109576121d9565b602002602001015186600081518110610972576109726121d9565b602002602001018190525081600181518110610990576109906121d9565b6020026020010151866001815181106109ab576109ab6121d9565b6020026020010181905250806000815181106109c9576109c96121d9565b6020026020010151866002815181106109e4576109e46121d9565b602002602001018190525080600181518110610a0257610a026121d9565b602002602001015186600381518110610a1d57610a1d6121d9565b602090810291909101015250939998505050505050505050565b60006107ca610a48846107cd612231565b610a7e610a5885623cda20612231565b610a6587623cda29612231565b610a6f9190612248565b610a799087612231565b61195d565b610a889190612205565b610a92919061225b565b90505b92915050565b606082801580610aac57506103e881115b15610aca57604051637e839dc360e01b815260040160405180910390fd5b6000610ad68787610d71565b905060008790506000879050886001600160a01b0316836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4e919061227d565b6001600160a01b031614610b625750869050875b600080610b718484878b6119cd565b9092509050610bb284846103e8610b888d87612231565b610b92919061225b565b6103e8610b9f8e87612231565b610ba9919061225b565b6000808e610753565b9b9a5050505050505050505050565b606082801580610bd257506103e881115b15610bf057604051637e839dc360e01b815260040160405180910390fd5b6000610bfd868686610e31565b90506000610c3087836103e18a7f0000000000000000000000000000000000000000000000000000000000000000610d71565b90506103f8878360008460008a5b606085158015610c4c575083155b15610c6a5760405163242f8cb960e21b815260040160405180910390fd5b85600003610cc457610cc17f0000000000000000000000000000000000000000000000000000000000000000856103e18a7f0000000000000000000000000000000000000000000000000000000000000000610d71565b95505b83600003610cfe57610cfb87876103e18a7f0000000000000000000000000000000000000000000000000000000000000000610d71565b93505b60408051600280825260608201909252600091816020015b610d1e611e04565b815260200190600190039081610d16579050509050610d3d8888611039565b81600081518110610d5057610d506121d9565b60200260200101819052506104c2888689898888610d6c6110d2565b611b98565b60405163e6a4390560e01b81526001600160a01b038381166004830152828116602483015260009182917f0000000000000000000000000000000000000000000000000000000000000000169063e6a4390590604401602060405180830381865afa158015610de4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e08919061227d565b90506001600160a01b038116610a925760405163e28e87c160e01b815260040160405180910390fd5b6040516370a0823160e01b81526001600160a01b03828116600483015260009182918616906370a0823190602401602060405180830381865afa158015610e7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea0919061229a565b90506103e8610eaf8286612231565b61034a919061225b565b9392505050565b60006001600160a01b038216316103e8610eda8583612231565b610ee4919061225b565b949350505050565b600080826001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f51919061227d565b9050600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610f94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb891906122ca565b5091509150866001600160a01b0316836001600160a01b03160361100657816001600160701b0316816001600160701b031687610ff59190612231565b610fff919061225b565b935061102f565b806001600160701b0316826001600160701b0316876110259190612231565b6103f8919061225b565b5050509392505050565b611041611e04565b6040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044810183905260009060640160408051601f19818403018152918152602080830180516001600160e01b031663095ea7b360e01b17905281516060810183526001600160a01b03979097168752600090870152850152509192915050565b60006110df601e42612248565b905090565b6110ec611e04565b60008787878787876040516024016111099695949392919061230f565b60408051601f19818403018152918152602080830180516001600160e01b0316629d473b60e21b17905281516060810183526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152600091810191909152908101919091529150509695505050505050565b6000806000856001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156111c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111eb91906122ca565b506001600160701b031691506001600160701b03169150846001600160a01b0316866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561124a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126e919061227d565b6001600160a01b03160361128f576112868285610a37565b92505050610eb9565b6112868185610a37565b6040805160018082528183019092526000916060918391816020015b6112bd611e04565b8152602001906001900390816112b557505060408051600280825260608201835292935060009290916020830190803683370190505090507f000000000000000000000000000000000000000000000000000000000000000081600081518110611329576113296121d9565b60200260200101906001600160a01b031690816001600160a01b031681525050868160018151811061135d5761135d6121d9565b6001600160a01b03928316602091820292909201015260405163d06ca61f60e01b81526000917f0000000000000000000000000000000000000000000000000000000000000000169063d06ca61f906113bc908a90869060040161238f565b600060405180830381865afa1580156113d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261140191908101906123a8565b905061141887600084896114136110d2565b611c33565b8360008151811061142b5761142b6121d9565b602002602001018190525080600181518110611449576114496121d9565b60200260200101518394509450505050935093915050565b6040805160028082526060828101909352600092918391816020015b611485611e04565b81526020019060019003908161147d5790505090506114a48686611039565b816000815181106114b7576114b76121d9565b60209081029190910101526040805160028082526060820190925260009181602001602082028036833701905050905086816000815181106114fb576114fb6121d9565b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000008160018151811061154f5761154f6121d9565b6001600160a01b03928316602091820292909201015260405163d06ca61f60e01b81526000917f0000000000000000000000000000000000000000000000000000000000000000169063d06ca61f906115ae908a90869060040161238f565b600060405180830381865afa1580156115cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115f391908101906123a8565b905061160a87600084896116056110d2565b611cc8565b8360018151811061142b5761142b6121d9565b611625611e04565b50604080516001600160a01b03988916602482015296881660448801526064870195909552608486019390935260a4850191909152841660c484015260e480840191909152815180840390910181526101049092018152602080830180516001600160e01b0316635d5155ef60e11b17905281516060810183527f0000000000000000000000000000000000000000000000000000000000000000909416845260009084015282015290565b6116d9611e04565b50604080516001600160a01b03998a16602482015297891660448901526064880196909652608487019490945260a486019290925260c4850152841660e484015261010480840191909152815180840390910181526101249092018152602080830180516001600160e01b031662e8e33760e81b17905281516060810183527f0000000000000000000000000000000000000000000000000000000000000000909416845260009084015282015290565b6040805160028082526060828101909352600092918391816020015b6117ae611e04565b8152602001906001900390816117a65790505090506117cd8786611039565b816000815181106117e0576117e06121d9565b6020908102919091010152604080516002808252606082019092526000918160200160208202803683370190505090508781600081518110611824576118246121d9565b60200260200101906001600160a01b031690816001600160a01b0316815250508681600181518110611858576118586121d9565b6001600160a01b03928316602091820292909201015260405163d06ca61f60e01b81526000917f0000000000000000000000000000000000000000000000000000000000000000169063d06ca61f906118b7908a90869060040161238f565b600060405180830381865afa1580156118d4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118fc91908101906123a8565b9050611913876000848961190e6110d2565b611d66565b83600181518110611926576119266121d9565b602002602001018190525080600181518110611944576119446121d9565b6020026020010151839450945050505094509492505050565b600060038211156119be575080600061197760028361225b565b611982906001612248565b90505b818110156119b85790508060028161199d818661225b565b6119a79190612248565b6119b1919061225b565b9050611985565b50919050565b81156119c8575060015b919050565b600080600080856001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611a11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3591906122ca565b506040516370a0823160e01b81526001600160a01b0388811660048301529294509092506000918a16906370a0823190602401602060405180830381865afa158015611a85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa9919061229a565b6040516370a0823160e01b81526001600160a01b0388811660048301529192506000918a16906370a0823190602401602060405180830381865afa158015611af5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b19919061229a565b90508195508094506000846001600160701b0316846001600160701b031684611b429190612231565b611b4c919061225b565b905081811115611b8657836001600160701b0316856001600160701b031683611b759190612231565b611b7f919061225b565b9650611b8a565b8095505b505050505094509492505050565b611ba0611e04565b6000888787878787604051602401611bbd9695949392919061230f565b60408051601f19818403018152918152602080830180516001600160e01b031663f305d71960e01b17905281516060810183526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681529081019a909a528901525095979650505050505050565b611c3b611e04565b600085858585604051602401611c54949392919061245a565b60408051601f19818403018152918152602080830180516001600160e01b0316637ff36ab560e01b17905281516060810183526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016815290810199909952880152509495945050505050565b611cd0611e04565b60008686868686604051602401611ceb95949392919061248f565b60408051601f19818403018152918152602080830180516001600160e01b03166318cbafe560e01b17905281516060810183526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681526000918101919091529081019190915291505095945050505050565b611d6e611e04565b60008686868686604051602401611d8995949392919061248f565b60408051601f19818403018152918152602080830180516001600160e01b03166338ed173960e01b17905281516060810183526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681526000918101919091529081019190915291505095945050505050565b604051806060016040528060006001600160a01b0316815260200160008152602001606081525090565b6001600160a01b0381168114611e4357600080fd5b50565b600080600060608486031215611e5b57600080fd5b8335611e6681611e2e565b9250602084013591506040840135611e7d81611e2e565b809150509250925092565b600060208083018184528085518083526040925060408601915060408160051b8701018488016000805b84811015611f3b57898403603f19018652825180516001600160a01b0316855288810151898601528701516060888601819052815190860181905283905b80821015611f0e578282018b015187830160800152908a0190611ef0565b8681016080908101869052988b0198601f909101601f191690960190950194505091870191600101611eb2565b50919998505050505050505050565b600080600080600060a08688031215611f6257600080fd5b8535611f6d81611e2e565b94506020860135935060408601359250606086013591506080860135611f9281611e2e565b809150509295509295909350565b60008060008060808587031215611fb657600080fd5b8435611fc181611e2e565b93506020850135925060408501358015158114611fdd57600080fd5b91506060850135611fed81611e2e565b939692955090935050565b6000806000806080858703121561200e57600080fd5b84359350602085013561202081611e2e565b92506040850135611fdd81611e2e565b60008060008060008060c0878903121561204957600080fd5b863561205481611e2e565b9550602087013561206481611e2e565b945060408701359350606087013592506080870135915060a087013561208981611e2e565b809150509295509295509295565b600080600080600080600060e0888a0312156120b257600080fd5b87356120bd81611e2e565b965060208801356120cd81611e2e565b955060408801359450606088013593506080880135925060a0880135915060c08801356120f981611e2e565b8091505092959891949750929550565b6000806000806080858703121561211f57600080fd5b843561212a81611e2e565b9350602085013561213a81611e2e565b9250604085013591506060850135611fed81611e2e565b6000806040838503121561216457600080fd5b50508035926020909101359150565b60008060008060008060c0878903121561218c57600080fd5b863561219781611e2e565b95506020870135945060408701359350606087013592506080870135915060a087013561208981611e2e565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610a9557610a956121ef565b60ff8181168382160190811115610a9557610a956121ef565b8082028115828204841417610a9557610a956121ef565b80820180821115610a9557610a956121ef565b60008261227857634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561228f57600080fd5b8151610a9281611e2e565b6000602082840312156122ac57600080fd5b5051919050565b80516001600160701b03811681146119c857600080fd5b6000806000606084860312156122df57600080fd5b6122e8846122b3565b92506122f6602085016122b3565b9150604084015163ffffffff81168114611e7d57600080fd5b6001600160a01b039687168152602081019590955260408501939093526060840191909152909216608082015260a081019190915260c00190565b60008151808452602080850194506020840160005b838110156123845781516001600160a01b03168752958201959082019060010161235f565b509495945050505050565b828152604060208201526000610ee4604083018461234a565b600060208083850312156123bb57600080fd5b825167ffffffffffffffff808211156123d357600080fd5b818501915085601f8301126123e757600080fd5b8151818111156123f9576123f96121c3565b8060051b604051601f19603f8301168101818110858211171561241e5761241e6121c3565b60405291825284820192508381018501918883111561243c57600080fd5b938501935b8285101561068357845184529385019392850192612441565b848152608060208201526000612473608083018661234a565b6001600160a01b03949094166040830152506060015292915050565b85815284602082015260a0604082015260006124ae60a083018661234a565b6001600160a01b039490941660608301525060800152939250505056fea2646970667358221220010a8cecbe0e58219d891cb0557842be81cf9a653a4915e7bef0f907b005d49264736f6c63430008180033";

type UniswapV2LPActionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV2LPActionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV2LPActions__factory extends ContractFactory {
  constructor(...args: UniswapV2LPActionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_router, overrides || {});
  }
  override deploy(
    _router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_router, overrides || {}) as Promise<
      UniswapV2LPActions & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UniswapV2LPActions__factory {
    return super.connect(runner) as UniswapV2LPActions__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV2LPActionsInterface {
    return new Interface(_abi) as UniswapV2LPActionsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UniswapV2LPActions {
    return new Contract(address, _abi, runner) as unknown as UniswapV2LPActions;
  }
}
