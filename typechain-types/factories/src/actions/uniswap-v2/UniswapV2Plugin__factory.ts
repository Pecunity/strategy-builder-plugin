/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  UniswapV2Plugin,
  UniswapV2PluginInterface,
} from "../../../../src/actions/uniswap-v2/UniswapV2Plugin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAction",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "NotContractCaller",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
    ],
    name: "NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "UniswapV2Base__FailedToApproveTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "UniswapV2Base__NoValidPercentageAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "UniswapV2Base__NoZeroAmountValid",
    type: "error",
  },
  {
    inputs: [],
    name: "UniswapV2Base__NotZeroAmountForBothTokensAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "UniswapV2Base__PoolPairDoesNotExist",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "LiquidiyRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
    ],
    name: "TokenSwap",
    type: "event",
  },
  {
    inputs: [],
    name: "AUTHOR",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "_getSwapAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "addLiqudityPercentageOfMaxPossible",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountTokenDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
    ],
    name: "addLiquidityETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentageETHDesired",
        type: "uint256",
      },
    ],
    name: "addLiquidityETHPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentageTokenDesired",
        type: "uint256",
      },
    ],
    name: "addLiquidityETHPercentageToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percentageADesired",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "addLiquidityPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onInstall",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onUninstall",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pluginManifest",
    outputs: [
      {
        components: [
          {
            internalType: "bytes4[]",
            name: "interfaceIds",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "dependencyInterfaceIds",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "executionFunctions",
            type: "bytes4[]",
          },
          {
            internalType: "bytes4[]",
            name: "permittedExecutionSelectors",
            type: "bytes4[]",
          },
          {
            internalType: "bool",
            name: "permitAnyExternalAddress",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "canSpendNativeToken",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "address",
                name: "externalAddress",
                type: "address",
              },
              {
                internalType: "bool",
                name: "permitAnySelector",
                type: "bool",
              },
              {
                internalType: "bytes4[]",
                name: "selectors",
                type: "bytes4[]",
              },
            ],
            internalType: "struct ManifestExternalCallPermission[]",
            name: "permittedExternalCalls",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "userOpValidationFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "runtimeValidationFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "preUserOpValidationHooks",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "associatedFunction",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestAssociatedFunction[]",
            name: "preRuntimeValidationHooks",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "preExecHook",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum ManifestAssociatedFunctionType",
                    name: "functionType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "functionId",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "dependencyIndex",
                    type: "uint256",
                  },
                ],
                internalType: "struct ManifestFunction",
                name: "postExecHook",
                type: "tuple",
              },
            ],
            internalType: "struct ManifestExecutionHook[]",
            name: "executionHooks",
            type: "tuple[]",
          },
        ],
        internalType: "struct PluginManifest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pluginMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "string",
            name: "author",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "functionSelector",
                type: "bytes4",
              },
              {
                internalType: "string",
                name: "permissionDescription",
                type: "string",
              },
            ],
            internalType: "struct SelectorPermission[]",
            name: "permissionDescriptors",
            type: "tuple[]",
          },
        ],
        internalType: "struct PluginMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "preExecHookData",
        type: "bytes",
      },
    ],
    name: "postExecutionHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "preExecutionHook",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "preRuntimeValidationHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
    ],
    name: "preUserOpValidationHook",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
    ],
    name: "removeLiquidityETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidityPercentage",
        type: "uint256",
      },
    ],
    name: "removeLiquidityETHPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentageLiquidity",
        type: "uint256",
      },
    ],
    name: "removeLiquidityPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IUniswapV2Router01",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "runtimeValidationFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "swapETHForExactTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "swapExactETHForTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "swapExactTokensForETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "swapPercentageETHForTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "swapPercentageTokensForETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "swapPercentageTokensForTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "swapTokensForExactETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2RouterAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "functionId",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
    ],
    name: "userOpValidationFunction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "zap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "inputETH",
        type: "bool",
      },
    ],
    name: "zapETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162006a5c38038062006a5c8339818101604052810190620000379190620000de565b808073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505062000110565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000a68262000079565b9050919050565b620000b88162000099565b8114620000c457600080fd5b50565b600081519050620000d881620000ad565b92915050565b600060208284031215620000f757620000f662000074565b5b60006200010784828501620000c7565b91505092915050565b608051616857620002056000396000818161074f01528181610b0001528181610be101528181610d3d01528181610dd101528181610f230152818161105a0152818161117a0152818161125b01528181611412015281816115fa0152818161171d0152818161189001528181611b9801528181611c8101528181611d5101528181612765015281816128c601528181612a8201528181612bb101528181612c4501528181612cf201528181612dd001528181612eb401528181612f7e015281816132b2015281816133e301528181613545015281816136270152818161378301528181613f1001526140dd01526168576000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c806386818f2611610130578063af873483116100b8578063ecc861d01161007c578063ecc861d01461062d578063ef66f7251461065d578063f6f1e30614610679578063f887ea4014610695578063ffa1ad74146106b357610232565b8063af8734831461058b578063bfd151c1146105bb578063c7763130146105d7578063d0241dac146105f5578063e2dc85dc1461061157610232565b80638a91b0e3116100ff5780638a91b0e3146104fb5780639ee80faf14610517578063a1cfacde14610533578063a3f4df7e1461054f578063a7be85c61461056d57610232565b806386818f261461047757806387151a791461049357806388e18ce4146104af5780638920f78c146104df57610232565b806338116bbe116101be5780634fc1d8cb116101825780634fc1d8cb146103eb5780636d61fe7014610407578063723774071461042357806375952dff1461043f57806384c1ae211461045b57610232565b806338116bbe14610349578063397d4b4a1461036557806346d60eb21461038157806347ce3e69146103b15780634a377e1d146103cd57610232565b8063118a538911610205578063118a5389146102bb57806313e7bbe1146102d957806318a22c40146102f55780631bec22b1146103115780633351733f1461032d57610232565b806301ffc9a7146102375780630244293b146102675780630c7ecd84146102835780631128186d1461029f575b600080fd5b610251600480360381019061024c91906148c2565b6106d1565b60405161025e919061490a565b60405180910390f35b610281600480360381019061027c91906149e5565b61074b565b005b61029d60048036038101906102989190614ad6565b610869565b005b6102b960048036038101906102b49190614b5e565b6108cc565b005b6102c361092f565b6040516102d09190614dd4565b60405180910390f35b6102f360048036038101906102ee9190614e4c565b610a00565b005b61030f600480360381019061030a9190614eac565b610a8c565b005b61032b60048036038101906103269190614f20565b610ce1565b005b61034760048036038101906103429190614f60565b610e80565b005b610363600480360381019061035e9190614fed565b610fce565b005b61037f600480360381019061037a9190614eac565b611106565b005b61039b60048036038101906103969190614ad6565b61135b565b6040516103a89190615095565b60405180910390f35b6103cb60048036038101906103c691906150b7565b6113c0565b005b6103d561140e565b6040516103e29190615119565b60405180910390f35b610405600480360381019061040091906150b7565b611436565b005b610421600480360381019061041c9190615134565b6114a4565b005b61043d60048036038101906104389190614e4c565b6114a8565b005b61045960048036038101906104549190614e4c565b61150b565b005b61047560048036038101906104709190614f20565b611597565b005b610491600480360381019061048c9190614eac565b6116a9565b005b6104ad60048036038101906104a89190614eac565b6117f8565b005b6104c960048036038101906104c491906151dc565b61196b565b6040516104d6919061525a565b60405180910390f35b6104f960048036038101906104f491906150b7565b6119cf565b005b61051560048036038101906105109190615134565b611b3f565b005b610531600480360381019061052c9190614f20565b611b43565b005b61054d60048036038101906105489190615275565b611c3d565b005b610557611e2d565b6040516105649190615326565b60405180910390f35b610575611e66565b6040516105829190615326565b60405180910390f35b6105a560048036038101906105a091906151dc565b611e9f565b6040516105b2919061525a565b60405180910390f35b6105d560048036038101906105d09190614ad6565b611f03565b005b6105df611f66565b6040516105ec9190615910565b60405180910390f35b61060f600480360381019061060a9190614eac565b612723565b005b61062b60048036038101906106269190615932565b612840565b005b610647600480360381019061064291906159ad565b6129a4565b604051610654919061525a565b60405180910390f35b61067760048036038101906106729190614eac565b612a0e565b005b610693600480360381019061068e91906159ed565b612b5d565b005b61069d612eb2565b6040516106aa9190615ac7565b60405180910390f35b6106bb612ed6565b6040516106c89190615326565b60405180910390f35b60007ff23b1ed7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610744575061074382612f0f565b5b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dc9190615af7565b905060006107ea8286612f79565b90506000836107f957856107fb565b825b9050600061080a8383886130fe565b905060008086156108345761081f8984613261565b9150828861082d9190615b53565b905061084f565b61083e898461349a565b9050828861084c9190615b53565b91505b61085e89836000846000612b5d565b505050505050505050565b6000357fffffffff0000000000000000000000000000000000000000000000000000000016856040517f84b9b3790000000000000000000000000000000000000000000000000000000081526004016108c3929190615ba5565b60405180910390fd5b6000357fffffffff0000000000000000000000000000000000000000000000000000000016836040517f84b9b379000000000000000000000000000000000000000000000000000000008152600401610926929190615ba5565b60405180910390fd5b610937614754565b61093f614754565b6040518060400160405280601081526020017f556e6973776170563220506c7567696e0000000000000000000000000000000081525081600001819052506040518060400160405280600581526020017f302e302e3100000000000000000000000000000000000000000000000000000081525081602001819052506040518060400160405280600781526020017f33426c6f636b730000000000000000000000000000000000000000000000000081525081604001819052508091505090565b826000811480610a1157506103e881115b15610a48576040517f7e839dc300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a86610a7d84846000818110610a6257610a61615bce565b5b9050602002016020810190610a779190615bfd565b866136de565b600085856116a9565b50505050565b8360008103610ac7576040517f276968b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610af983836000818110610ade57610add615bce565b5b9050602002016020810190610af39190615bfd565b8561377f565b6000610b967f00000000000000000000000000000000000000000000000000000000000000008787878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505033610b6c6138db565b3373ffffffffffffffffffffffffffffffffffffffff166138ef909695949392919063ffffffff16565b9050600084846000818110610bae57610bad615bce565b5b9050602002016020810190610bc39190615bfd565b73ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e337f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401610c1d929190615c2a565b602060405180830381865afa158015610c3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5e9190615c68565b90506000811115610c9d57610c9c85856000818110610c8057610c7f615bce565b5b9050602002016020810190610c959190615bfd565b600061377f565b5b7ff44cf0ffdccc099131ff3646af0b0bbc20bc81764da4328a99e39f052d7be786858584604051610cd093929190615df8565b60405180910390a150505050505050565b806000811480610cf257506103e881115b15610d29576040517f7e839dc300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610d3483613a00565b90506000610e687f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610da6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dca9190615af7565b83610e63887f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5e9190615af7565b612f79565b613a3e565b9050610e7985826000856000612b5d565b5050505050565b600084148015610e905750600083145b15610ec7576040517f7751f5f500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008403610ee657610ee38584610ede8989612f79565b613a3e565b93505b60008303610f0557610f028685610efd8989612f79565b613a3e565b92505b610f0f868561377f565b610f19858461377f565b6000806000610f7e7f00000000000000000000000000000000000000000000000000000000000000008a8a8a8a8a8a33610f516138db565b3373ffffffffffffffffffffffffffffffffffffffff16613bde909998979695949392919063ffffffff16565b9250925092507f4a1a2a6176e9646d9e3157f7c2ab3c499f18337c0b0828cfb28e0a61de4a11f78989858585604051610fbb959493929190615e31565b60405180910390a1505050505050505050565b826000811480610fdf57506103e881115b15611016576040517f7e839dc300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061102284866136de565b9050600061103a85836110358888612f79565b613a3e565b9050611046858361377f565b611050848261377f565b60008060006110b67f000000000000000000000000000000000000000000000000000000000000000089898888600080336110896138db565b3373ffffffffffffffffffffffffffffffffffffffff16613bde909998979695949392919063ffffffff16565b9250925092507f4a1a2a6176e9646d9e3157f7c2ab3c499f18337c0b0828cfb28e0a61de4a11f788888585856040516110f3959493929190615e31565b60405180910390a1505050505050505050565b8360008103611141576040517f276968b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111738383600081811061115857611157615bce565b5b905060200201602081019061116d9190615bfd565b8561377f565b60006112107f00000000000000000000000000000000000000000000000000000000000000008787878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050336111e66138db565b3373ffffffffffffffffffffffffffffffffffffffff16613d00909695949392919063ffffffff16565b905060008484600081811061122857611227615bce565b5b905060200201602081019061123d9190615bfd565b73ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e337f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401611297929190615c2a565b602060405180830381865afa1580156112b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d89190615c68565b9050600081111561131757611316858560008181106112fa576112f9615bce565b5b905060200201602081019061130f9190615bfd565b600061377f565b5b7ff44cf0ffdccc099131ff3646af0b0bbc20bc81764da4328a99e39f052d7be78685858460405161134a93929190615df8565b60405180910390a150505050505050565b60606000357fffffffff0000000000000000000000000000000000000000000000000000000016866040517f84b9b3790000000000000000000000000000000000000000000000000000000081526004016113b7929190615ba5565b60405180910390fd5b60006113cc8484612f79565b905060006113db8286856130fe565b905060006113ea868684613e11565b9050611406868684876113fd9190615b53565b84600080610e80565b505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b80600081148061144757506103e881115b1561147e576040517f7e839dc300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61149e84846114966114908888612f79565b866136de565b600080612840565b50505050565b5050565b8260008114806114b957506103e881115b156114f0576040517f7e839dc300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115056114fc85613a00565b60008585612723565b50505050565b82600081148061151c57506103e881115b15611553576040517f7e839dc300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115916115888484600081811061156d5761156c615bce565b5b90506020020160208101906115829190615bfd565b866136de565b60008585612a0e565b50505050565b8060008114806115a857506103e881115b156115df576040517f7e839dc300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006115eb84846136de565b90506000611691858361168c887f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611663573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116879190615af7565b612f79565b613a3e565b90506116a285836000846000612b5d565b5050505050565b83600081036116e4576040517f276968b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611716838360008181106116fb576116fa615bce565b5b90506020020160208101906117109190615bfd565b8661377f565b60006117b37f00000000000000000000000000000000000000000000000000000000000000008787878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050336117896138db565b3373ffffffffffffffffffffffffffffffffffffffff16613fc8909695949392919063ffffffff16565b90507ff44cf0ffdccc099131ff3646af0b0bbc20bc81764da4328a99e39f052d7be7868484836040516117e893929190615df8565b60405180910390a1505050505050565b8360008103611833576040517f276968b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000840361188957611886838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050866140d9565b93505b60006119267f00000000000000000000000000000000000000000000000000000000000000008688878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050336118fc6138db565b3373ffffffffffffffffffffffffffffffffffffffff1661419f909695949392919063ffffffff16565b90507ff44cf0ffdccc099131ff3646af0b0bbc20bc81764da4328a99e39f052d7be78684848360405161195b93929190615df8565b60405180910390a1505050505050565b600080357fffffffff0000000000000000000000000000000000000000000000000000000016846040517f84b9b3790000000000000000000000000000000000000000000000000000000081526004016119c6929190615ba5565b60405180910390fd5b8060008114806119e057506103e881115b15611a17576040517f7e839dc300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611a238585612f79565b9050600085905060008590508673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ab59190615af7565b73ffffffffffffffffffffffffffffffffffffffff1614611ad7578591508690505b600080611ae58484876142ad565b9150915060006103e88884611afa9190615e84565b611b049190615ef5565b905060006103e88984611b179190615e84565b611b219190615ef5565b9050611b3286868484600080610e80565b5050505050505050505050565b5050565b806000811480611b5457506103e881115b15611b8b576040517f7e839dc300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c3883611c30611c2a867f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c259190615af7565b612f79565b856136de565b600080611c3d565b505050565b8260008103611c78576040517f276968b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d19611d13867f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611cea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0e9190615af7565b612f79565b8561377f565b6000803373ffffffffffffffffffffffffffffffffffffffff1673__$e900ae7a69279cdc9abe9d8bc58f41bf35$__636e3531db90917f00000000000000000000000000000000000000000000000000000000000000008a8a8a8a33611d7d6138db565b6040518963ffffffff1660e01b8152600401611da0989796959493929190615f44565b6040805180830381865af4158015611dbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de09190615fc2565b915091507fd297e7959b46bc5fa6f2d7218ac839d72310c2456af0262b5aa70d16bba23caf87600084848a604051611e1c959493929190615e31565b60405180910390a150505050505050565b6040518060400160405280601081526020017f556e6973776170563220506c7567696e0000000000000000000000000000000081525081565b6040518060400160405280600781526020017f33426c6f636b730000000000000000000000000000000000000000000000000081525081565b600080357fffffffff0000000000000000000000000000000000000000000000000000000016846040517f84b9b379000000000000000000000000000000000000000000000000000000008152600401611efa929190615ba5565b60405180910390fd5b6000357fffffffff0000000000000000000000000000000000000000000000000000000016856040517f84b9b379000000000000000000000000000000000000000000000000000000008152600401611f5d929190615ba5565b60405180910390fd5b611f6e61477c565b611f7661477c565b600167ffffffffffffffff811115611f9157611f90616002565b5b604051908082528060200260200182016040528015611fbf5781602001602082028036833780820191505090505b5081602001819052507ff23b1ed700000000000000000000000000000000000000000000000000000000816020015160008151811061200157612000615bce565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050600467ffffffffffffffff81111561206857612067616002565b5b6040519080825280602002602001820160405280156120965781602001602082028036833780820191505090505b5081604001819052506386818f2660e01b81604001516000815181106120bf576120be615bce565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506313e7bbe160e01b816040015160018151811061212b5761212a615bce565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152505063397d4b4a60e01b816040015160028151811061219757612196615bce565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050633351733f60e01b816040015160038151811061220357612202615bce565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152505060006040518060600160405280600260048111156122705761226f615553565b5b8152602001600060ff16815260200160008152509050600467ffffffffffffffff8111156122a1576122a0616002565b5b6040519080825280602002602001820160405280156122da57816020015b6122c76147e1565b8152602001906001900390816122bf5790505b508260e0018190525060405180604001604052806386818f2660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001828152508260e0015160008151811061233657612335615bce565b5b602002602001018190525060405180604001604052806313e7bbe160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001828152508260e0015160018151811061239457612393615bce565b5b6020026020010181905250604051806040016040528063397d4b4a60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001828152508260e001516002815181106123f2576123f1615bce565b5b60200260200101819052506040518060400160405280633351733f60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001828152508260e001516003815181106124505761244f615bce565b5b6020026020010181905250600467ffffffffffffffff81111561247657612475616002565b5b6040519080825280602002602001820160405280156124af57816020015b61249c6147e1565b8152602001906001900390816124945790505b5082610140018190525060405180604001604052806386818f2660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001604051806060016040528060048081111561250e5761250d615553565b5b8152602001600060ff168152602001600081525081525082610140015160008151811061253e5761253d615bce565b5b602002602001018190525060405180604001604052806313e7bbe160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001604051806060016040528060048081111561259e5761259d615553565b5b8152602001600060ff16815260200160008152508152508261014001516001815181106125ce576125cd615bce565b5b6020026020010181905250604051806040016040528063397d4b4a60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001604051806060016040528060048081111561262e5761262d615553565b5b8152602001600060ff168152602001600081525081525082610140015160028151811061265e5761265d615bce565b5b60200260200101819052506040518060400160405280633351733f60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160405180606001604052806004808111156126be576126bd615553565b5b8152602001600060ff16815260200160008152508152508261014001516003815181106126ee576126ed615bce565b5b6020026020010181905250600182608001901515908115158152505060018260a0019015159081151581525050819250505090565b836000810361275e576040517f276968b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006127fb7f00000000000000000000000000000000000000000000000000000000000000008787878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050336127d16138db565b3373ffffffffffffffffffffffffffffffffffffffff166144bb909695949392919063ffffffff16565b90507ff44cf0ffdccc099131ff3646af0b0bbc20bc81764da4328a99e39f052d7be78684848360405161283093929190615df8565b60405180910390a1505050505050565b826000810361287b576040517f276968b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61288e6128888787612f79565b8561377f565b6000803373ffffffffffffffffffffffffffffffffffffffff1673__$e900ae7a69279cdc9abe9d8bc58f41bf35$__631f0bc70d90917f00000000000000000000000000000000000000000000000000000000000000008b8b8b8b8b336128f36138db565b6040518a63ffffffff1660e01b815260040161291799989796959493929190616031565b6040805180830381865af4158015612933573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129579190615fc2565b915091507fd297e7959b46bc5fa6f2d7218ac839d72310c2456af0262b5aa70d16bba23caf888884848a604051612992959493929190615e31565b60405180910390a15050505050505050565b60006107ca6107cd846129b79190615e84565b6129f2623cda20856129c99190615e84565b623cda29876129d89190615e84565b6129e291906160be565b866129ed9190615e84565b6145c9565b6129fc9190615b53565b612a069190615ef5565b905092915050565b8360008103612a49576040517f276968b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612a7b83836000818110612a6057612a5f615bce565b5b9050602002016020810190612a759190615bfd565b8661377f565b6000612b187f00000000000000000000000000000000000000000000000000000000000000008787878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505033612aee6138db565b3373ffffffffffffffffffffffffffffffffffffffff16614643909695949392919063ffffffff16565b90507ff44cf0ffdccc099131ff3646af0b0bbc20bc81764da4328a99e39f052d7be786848483604051612b4d93929190615df8565b60405180910390a1505050505050565b600084148015612b6d5750600082145b15612ba4576040517f7751f5f500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008403612cdf57612cdc7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015612c1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c3e9190615af7565b83612cd7887f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015612cae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cd29190615af7565b612f79565b613a3e565b93505b60008203612d8c57612d898585612d84887f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d7f9190615af7565b612f79565b613a3e565b91505b612d96858561377f565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673__$e900ae7a69279cdc9abe9d8bc58f41bf35$__6357ecda5490917f00000000000000000000000000000000000000000000000000000000000000008b898c8c8b33612dfd6138db565b6040518a63ffffffff1660e01b8152600401612e21999897969594939291906160f2565b606060405180830381865af4158015612e3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e62919061617f565b9250925092507f4a1a2a6176e9646d9e3157f7c2ab3c499f18337c0b0828cfb28e0a61de4a11f7600089848685604051612ea0959493929190615e31565b60405180910390a15050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6040518060400160405280600581526020017f302e302e3100000000000000000000000000000000000000000000000000000081525081565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015612fe7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061300b9190615af7565b905060008173ffffffffffffffffffffffffffffffffffffffff1663e6a4390586866040518363ffffffff1660e01b815260040161304a929190615c2a565b602060405180830381865afa158015613067573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061308b9190615af7565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036130f3576040517fcfcd907100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b809250505092915050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561314e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131729190616254565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156131f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061321d9190615af7565b73ffffffffffffffffffffffffffffffffffffffff160361324b5761324282856129a4565b9250505061325a565b61325581856129a4565b925050505b9392505050565b600080600267ffffffffffffffff81111561327f5761327e616002565b5b6040519080825280602002602001820160405280156132ad5781602001602082028036833780820191505090505b5090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561331b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061333f9190615af7565b8160008151811061335357613352615bce565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083816001815181106133a2576133a1615bce565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060006134397f0000000000000000000000000000000000000000000000000000000000000000856000853361340f6138db565b3373ffffffffffffffffffffffffffffffffffffffff166144bb909695949392919063ffffffff16565b90507ff44cf0ffdccc099131ff3646af0b0bbc20bc81764da4328a99e39f052d7be786828260405161346c92919061632d565b60405180910390a18060018151811061348857613487615bce565b5b60200260200101519250505092915050565b60006134a6838361377f565b6000600267ffffffffffffffff8111156134c3576134c2616002565b5b6040519080825280602002602001820160405280156134f15781602001602082028036833780820191505090505b509050838160008151811061350957613508615bce565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156135ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135d29190615af7565b816001815181106135e6576135e5615bce565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600061367d7f000000000000000000000000000000000000000000000000000000000000000085600085336136536138db565b3373ffffffffffffffffffffffffffffffffffffffff16614643909695949392919063ffffffff16565b90507ff44cf0ffdccc099131ff3646af0b0bbc20bc81764da4328a99e39f052d7be78682826040516136b092919061632d565b60405180910390a1806001815181106136cc576136cb615bce565b5b60200260200101519250505092915050565b6000808373ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161371a9190615119565b602060405180830381865afa158015613737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061375b9190615c68565b90506103e8818461376c9190615e84565b6137769190615ef5565b91505092915050565b60007f0000000000000000000000000000000000000000000000000000000000000000826040516024016137b4929190616364565b60405160208183030381529060405263095ea7b360e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060003373ffffffffffffffffffffffffffffffffffffffff166338997b11856000856040518463ffffffff1660e01b815260040161383b939291906163c8565b6000604051808303816000875af115801561385a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061388391906164f8565b905060008180602001905181019061389b9190616556565b9050806138d4576040517fc36c8e0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b6000601e426138ea91906160be565b905090565b60606000868686868660405160240161390c959493929190616583565b604051602081830303815290604052634a25d94a60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008973ffffffffffffffffffffffffffffffffffffffff166338997b118a6000856040518463ffffffff1660e01b8152600401613993939291906163c8565b6000604051808303816000875af11580156139b2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906139db91906164f8565b9050808060200190518101906139f191906166a0565b92505050979650505050505050565b6000803373ffffffffffffffffffffffffffffffffffffffff163190506103e88382613a2c9190615e84565b613a369190615ef5565b915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ab09190615af7565b90506000808473ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015613b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b249190616254565b50915091508673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603613b9a57816dffffffffffffffffffffffffffff16816dffffffffffffffffffffffffffff1687613b899190615e84565b613b939190615ef5565b9350613bd4565b806dffffffffffffffffffffffffffff16826dffffffffffffffffffffffffffff1687613bc79190615e84565b613bd19190615ef5565b93505b5050509392505050565b6000806000808b8b8b8b8b8b8b8b604051602401613c039897969594939291906166e9565b60405160208183030381529060405263e8e3370060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008e73ffffffffffffffffffffffffffffffffffffffff166338997b118f6000856040518463ffffffff1660e01b8152600401613c8a939291906163c8565b6000604051808303816000875af1158015613ca9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190613cd291906164f8565b905080806020019051810190613ce8919061617f565b94509450945050509a509a509a975050505050505050565b606060008686868686604051602401613d1d959493929190616583565b604051602081830303815290604052638803dbee60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008973ffffffffffffffffffffffffffffffffffffffff166338997b118a6000856040518463ffffffff1660e01b8152600401613da4939291906163c8565b6000604051808303816000875af1158015613dc3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190613dec91906164f8565b905080806020019051810190613e0291906166a0565b92505050979650505050505050565b6000613e1d848361377f565b6000600267ffffffffffffffff811115613e3a57613e39616002565b5b604051908082528060200260200182016040528015613e685781602001602082028036833780820191505090505b5090508481600081518110613e8057613e7f615bce565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508381600181518110613ecf57613ece615bce565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000613f667f00000000000000000000000000000000000000000000000000000000000000008560008533613f3c6138db565b3373ffffffffffffffffffffffffffffffffffffffff16613fc8909695949392919063ffffffff16565b90507ff44cf0ffdccc099131ff3646af0b0bbc20bc81764da4328a99e39f052d7be7868282604051613f9992919061632d565b60405180910390a180600181518110613fb557613fb4615bce565b5b6020026020010151925050509392505050565b606060008686868686604051602401613fe5959493929190616583565b6040516020818303038152906040526338ed173960e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008973ffffffffffffffffffffffffffffffffffffffff166338997b118a6000856040518463ffffffff1660e01b815260040161406c939291906163c8565b6000604051808303816000875af115801561408b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906140b491906164f8565b9050808060200190518101906140ca91906166a0565b92505050979650505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631f00ca7483856040518363ffffffff1660e01b8152600401614136929190616767565b600060405180830381865afa158015614153573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061417c91906166a0565b60008151811061418f5761418e615bce565b5b6020026020010151905092915050565b60606000868585856040516024016141ba9493929190616797565b60405160208183030381529060405263fb3bdb4160e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008973ffffffffffffffffffffffffffffffffffffffff166338997b118a89856040518463ffffffff1660e01b8152600401614240939291906167e3565b6000604051808303816000875af115801561425f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061428891906164f8565b90508080602001905181019061429e91906166a0565b92505050979650505050505050565b6000806000808473ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156142fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143229190616254565b509150915060008773ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016143629190615119565b602060405180830381865afa15801561437f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143a39190615c68565b905060008773ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016143e09190615119565b602060405180830381865afa1580156143fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144219190615c68565b90508195508094506000846dffffffffffffffffffffffffffff16846dffffffffffffffffffffffffffff16846144589190615e84565b6144629190615ef5565b9050818111156144aa57836dffffffffffffffffffffffffffff16856dffffffffffffffffffffffffffff16836144999190615e84565b6144a39190615ef5565b96506144ae565b8095505b5050505050935093915050565b60606000858585856040516024016144d69493929190616797565b604051602081830303815290604052637ff36ab560e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008973ffffffffffffffffffffffffffffffffffffffff166338997b118a8a856040518463ffffffff1660e01b815260040161455c939291906167e3565b6000604051808303816000875af115801561457b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906145a491906164f8565b9050808060200190518101906145ba91906166a0565b92505050979650505050505050565b6000600382111561463057819050600060016002846145e89190615ef5565b6145f291906160be565b90505b8181101561462a57809150600281828561460f9190615ef5565b61461991906160be565b6146239190615ef5565b90506145f5565b5061463e565b6000821461463d57600190505b5b919050565b606060008686868686604051602401614660959493929190616583565b6040516020818303038152906040526318cbafe560e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008973ffffffffffffffffffffffffffffffffffffffff166338997b118a6000856040518463ffffffff1660e01b81526004016146e7939291906163c8565b6000604051808303816000875af1158015614706573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061472f91906164f8565b90508080602001905181019061474591906166a0565b92505050979650505050505050565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b604051806101800160405280606081526020016060815260200160608152602001606081526020016000151581526020016000151581526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b604051806040016040528060007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200161481a614820565b81525090565b60405180606001604052806000600481111561483f5761483e615553565b5b8152602001600060ff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61489f8161486a565b81146148aa57600080fd5b50565b6000813590506148bc81614896565b92915050565b6000602082840312156148d8576148d7614860565b5b60006148e6848285016148ad565b91505092915050565b60008115159050919050565b614904816148ef565b82525050565b600060208201905061491f60008301846148fb565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061495082614925565b9050919050565b61496081614945565b811461496b57600080fd5b50565b60008135905061497d81614957565b92915050565b6000819050919050565b61499681614983565b81146149a157600080fd5b50565b6000813590506149b38161498d565b92915050565b6149c2816148ef565b81146149cd57600080fd5b50565b6000813590506149df816149b9565b92915050565b6000806000606084860312156149fe576149fd614860565b5b6000614a0c8682870161496e565b9350506020614a1d868287016149a4565b9250506040614a2e868287016149d0565b9150509250925092565b600060ff82169050919050565b614a4e81614a38565b8114614a5957600080fd5b50565b600081359050614a6b81614a45565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112614a9657614a95614a71565b5b8235905067ffffffffffffffff811115614ab357614ab2614a76565b5b602083019150836001820283011115614acf57614ace614a7b565b5b9250929050565b600080600080600060808688031215614af257614af1614860565b5b6000614b0088828901614a5c565b9550506020614b118882890161496e565b9450506040614b22888289016149a4565b935050606086013567ffffffffffffffff811115614b4357614b42614865565b5b614b4f88828901614a80565b92509250509295509295909350565b600080600060408486031215614b7757614b76614860565b5b6000614b8586828701614a5c565b935050602084013567ffffffffffffffff811115614ba657614ba5614865565b5b614bb286828701614a80565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015614bf8578082015181840152602081019050614bdd565b60008484015250505050565b6000601f19601f8301169050919050565b6000614c2082614bbe565b614c2a8185614bc9565b9350614c3a818560208601614bda565b614c4381614c04565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b614c838161486a565b82525050565b6000604083016000830151614ca16000860182614c7a565b5060208301518482036020860152614cb98282614c15565b9150508091505092915050565b6000614cd28383614c89565b905092915050565b6000602082019050919050565b6000614cf282614c4e565b614cfc8185614c59565b935083602082028501614d0e85614c6a565b8060005b85811015614d4a5784840389528151614d2b8582614cc6565b9450614d3683614cda565b925060208a01995050600181019050614d12565b50829750879550505050505092915050565b60006080830160008301518482036000860152614d798282614c15565b91505060208301518482036020860152614d938282614c15565b91505060408301518482036040860152614dad8282614c15565b91505060608301518482036060860152614dc78282614ce7565b9150508091505092915050565b60006020820190508181036000830152614dee8184614d5c565b905092915050565b60008083601f840112614e0c57614e0b614a71565b5b8235905067ffffffffffffffff811115614e2957614e28614a76565b5b602083019150836020820283011115614e4557614e44614a7b565b5b9250929050565b600080600060408486031215614e6557614e64614860565b5b6000614e73868287016149a4565b935050602084013567ffffffffffffffff811115614e9457614e93614865565b5b614ea086828701614df6565b92509250509250925092565b60008060008060608587031215614ec657614ec5614860565b5b6000614ed4878288016149a4565b9450506020614ee5878288016149a4565b935050604085013567ffffffffffffffff811115614f0657614f05614865565b5b614f1287828801614df6565b925092505092959194509250565b60008060408385031215614f3757614f36614860565b5b6000614f458582860161496e565b9250506020614f56858286016149a4565b9150509250929050565b60008060008060008060c08789031215614f7d57614f7c614860565b5b6000614f8b89828a0161496e565b9650506020614f9c89828a0161496e565b9550506040614fad89828a016149a4565b9450506060614fbe89828a016149a4565b9350506080614fcf89828a016149a4565b92505060a0614fe089828a016149a4565b9150509295509295509295565b60008060006060848603121561500657615005614860565b5b6000615014868287016149a4565b93505060206150258682870161496e565b92505060406150368682870161496e565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b600061506782615040565b615071818561504b565b9350615081818560208601614bda565b61508a81614c04565b840191505092915050565b600060208201905081810360008301526150af818461505c565b905092915050565b6000806000606084860312156150d0576150cf614860565b5b60006150de8682870161496e565b93505060206150ef8682870161496e565b9250506040615100868287016149a4565b9150509250925092565b61511381614945565b82525050565b600060208201905061512e600083018461510a565b92915050565b6000806020838503121561514b5761514a614860565b5b600083013567ffffffffffffffff81111561516957615168614865565b5b61517585828601614a80565b92509250509250929050565b600080fd5b6000610160828403121561519d5761519c615181565b5b81905092915050565b6000819050919050565b6151b9816151a6565b81146151c457600080fd5b50565b6000813590506151d6816151b0565b92915050565b6000806000606084860312156151f5576151f4614860565b5b600061520386828701614a5c565b935050602084013567ffffffffffffffff81111561522457615223614865565b5b61523086828701615186565b9250506040615241868287016151c7565b9150509250925092565b61525481614983565b82525050565b600060208201905061526f600083018461524b565b92915050565b6000806000806080858703121561528f5761528e614860565b5b600061529d8782880161496e565b94505060206152ae878288016149a4565b93505060406152bf878288016149a4565b92505060606152d0878288016149a4565b91505092959194509250565b600082825260208201905092915050565b60006152f882614bbe565b61530281856152dc565b9350615312818560208601614bda565b61531b81614c04565b840191505092915050565b6000602082019050818103600083015261534081846152ed565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006153808383614c7a565b60208301905092915050565b6000602082019050919050565b60006153a482615348565b6153ae8185615353565b93506153b983615364565b8060005b838110156153ea5781516153d18882615374565b97506153dc8361538c565b9250506001810190506153bd565b5085935050505092915050565b615400816148ef565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61543b81614945565b82525050565b60006060830160008301516154596000860182615432565b50602083015161546c60208601826153f7565b50604083015184820360408601526154848282615399565b9150508091505092915050565b600061549d8383615441565b905092915050565b6000602082019050919050565b60006154bd82615406565b6154c78185615411565b9350836020820285016154d985615422565b8060005b8581101561551557848403895281516154f68582615491565b9450615501836154a5565b925060208a019950506001810190506154dd565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005811061559357615592615553565b5b50565b60008190506155a482615582565b919050565b60006155b482615596565b9050919050565b6155c4816155a9565b82525050565b6155d381614a38565b82525050565b6155e281614983565b82525050565b6060820160008201516155fe60008501826155bb565b50602082015161561160208501826155ca565b50604082015161562460408501826155d9565b50505050565b6080820160008201516156406000850182614c7a565b50602082015161565360208501826155e8565b50505050565b6000615665838361562a565b60808301905092915050565b6000602082019050919050565b600061568982615527565b6156938185615532565b935061569e83615543565b8060005b838110156156cf5781516156b68882615659565b97506156c183615671565b9250506001810190506156a2565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60e08201600082015161571e6000850182614c7a565b50602082015161573160208501826155e8565b50604082015161574460808501826155e8565b50505050565b60006157568383615708565b60e08301905092915050565b6000602082019050919050565b600061577a826156dc565b61578481856156e7565b935061578f836156f8565b8060005b838110156157c05781516157a7888261574a565b97506157b283615762565b925050600181019050615793565b5085935050505092915050565b60006101808301600083015184820360008601526157eb8282615399565b915050602083015184820360208601526158058282615399565b9150506040830151848203604086015261581f8282615399565b915050606083015184820360608601526158398282615399565b915050608083015161584e60808601826153f7565b5060a083015161586160a08601826153f7565b5060c083015184820360c086015261587982826154b2565b91505060e083015184820360e0860152615893828261567e565b9150506101008301518482036101008601526158af828261567e565b9150506101208301518482036101208601526158cb828261567e565b9150506101408301518482036101408601526158e7828261567e565b915050610160830151848203610160860152615903828261576f565b9150508091505092915050565b6000602082019050818103600083015261592a81846157cd565b905092915050565b600080600080600060a0868803121561594e5761594d614860565b5b600061595c8882890161496e565b955050602061596d8882890161496e565b945050604061597e888289016149a4565b935050606061598f888289016149a4565b92505060806159a0888289016149a4565b9150509295509295909350565b600080604083850312156159c4576159c3614860565b5b60006159d2858286016149a4565b92505060206159e3858286016149a4565b9150509250929050565b600080600080600060a08688031215615a0957615a08614860565b5b6000615a178882890161496e565b9550506020615a28888289016149a4565b9450506040615a39888289016149a4565b9350506060615a4a888289016149a4565b9250506080615a5b888289016149a4565b9150509295509295909350565b6000819050919050565b6000615a8d615a88615a8384614925565b615a68565b614925565b9050919050565b6000615a9f82615a72565b9050919050565b6000615ab182615a94565b9050919050565b615ac181615aa6565b82525050565b6000602082019050615adc6000830184615ab8565b92915050565b600081519050615af181614957565b92915050565b600060208284031215615b0d57615b0c614860565b5b6000615b1b84828501615ae2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000615b5e82614983565b9150615b6983614983565b9250828203905081811115615b8157615b80615b24565b5b92915050565b615b908161486a565b82525050565b615b9f81614a38565b82525050565b6000604082019050615bba6000830185615b87565b615bc76020830184615b96565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215615c1357615c12614860565b5b6000615c218482850161496e565b91505092915050565b6000604082019050615c3f600083018561510a565b615c4c602083018461510a565b9392505050565b600081519050615c628161498d565b92915050565b600060208284031215615c7e57615c7d614860565b5b6000615c8c84828501615c53565b91505092915050565b600082825260208201905092915050565b6000819050919050565b6000615cbc8383615432565b60208301905092915050565b6000615cd7602084018461496e565b905092915050565b6000602082019050919050565b6000615cf88385615c95565b9350615d0382615ca6565b8060005b85811015615d3c57615d198284615cc8565b615d238882615cb0565b9750615d2e83615cdf565b925050600181019050615d07565b5085925050509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000615d8183836155d9565b60208301905092915050565b6000602082019050919050565b6000615da582615d49565b615daf8185615d54565b9350615dba83615d65565b8060005b83811015615deb578151615dd28882615d75565b9750615ddd83615d8d565b925050600181019050615dbe565b5085935050505092915050565b60006040820190508181036000830152615e13818587615cec565b90508181036020830152615e278184615d9a565b9050949350505050565b600060a082019050615e46600083018861510a565b615e53602083018761510a565b615e60604083018661524b565b615e6d606083018561524b565b615e7a608083018461524b565b9695505050505050565b6000615e8f82614983565b9150615e9a83614983565b9250828202615ea881614983565b91508282048414831517615ebf57615ebe615b24565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000615f0082614983565b9150615f0b83614983565b925082615f1b57615f1a615ec6565b5b828204905092915050565b615f2f81614945565b82525050565b615f3e81614983565b82525050565b600061010082019050615f5a600083018b615f26565b615f67602083018a615f26565b615f746040830189615f26565b615f816060830188615f35565b615f8e6080830187615f35565b615f9b60a0830186615f35565b615fa860c0830185615f26565b615fb560e0830184615f35565b9998505050505050505050565b60008060408385031215615fd957615fd8614860565b5b6000615fe785828601615c53565b9250506020615ff885828601615c53565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061012082019050616047600083018c615f26565b616054602083018b615f26565b616061604083018a615f26565b61606e6060830189615f26565b61607b6080830188615f35565b61608860a0830187615f35565b61609560c0830186615f35565b6160a260e0830185615f26565b6160b0610100830184615f35565b9a9950505050505050505050565b60006160c982614983565b91506160d483614983565b92508282019050808211156160ec576160eb615b24565b5b92915050565b600061012082019050616108600083018c615f26565b616115602083018b615f26565b616122604083018a615f26565b61612f6060830189615f35565b61613c6080830188615f35565b61614960a0830187615f35565b61615660c0830186615f35565b61616360e0830185615f26565b616171610100830184615f35565b9a9950505050505050505050565b60008060006060848603121561619857616197614860565b5b60006161a686828701615c53565b93505060206161b786828701615c53565b92505060406161c886828701615c53565b9150509250925092565b60006dffffffffffffffffffffffffffff82169050919050565b6161f5816161d2565b811461620057600080fd5b50565b600081519050616212816161ec565b92915050565b600063ffffffff82169050919050565b61623181616218565b811461623c57600080fd5b50565b60008151905061624e81616228565b92915050565b60008060006060848603121561626d5761626c614860565b5b600061627b86828701616203565b935050602061628c86828701616203565b925050604061629d8682870161623f565b9150509250925092565b600081519050919050565b6000819050602082019050919050565b6000602082019050919050565b60006162da826162a7565b6162e48185615c95565b93506162ef836162b2565b8060005b838110156163205781516163078882615cb0565b9750616312836162c2565b9250506001810190506162f3565b5085935050505092915050565b6000604082019050818103600083015261634781856162cf565b9050818103602083015261635b8184615d9a565b90509392505050565b6000604082019050616379600083018561510a565b616386602083018461524b565b9392505050565b6000819050919050565b60006163b26163ad6163a88461638d565b615a68565b614983565b9050919050565b6163c281616397565b82525050565b60006060820190506163dd600083018661510a565b6163ea60208301856163b9565b81810360408301526163fc818461505c565b9050949350505050565b600080fd5b61641482614c04565b810181811067ffffffffffffffff8211171561643357616432616002565b5b80604052505050565b6000616446614856565b9050616452828261640b565b919050565b600067ffffffffffffffff82111561647257616471616002565b5b61647b82614c04565b9050602081019050919050565b600061649b61649684616457565b61643c565b9050828152602081018484840111156164b7576164b6616406565b5b6164c2848285614bda565b509392505050565b600082601f8301126164df576164de614a71565b5b81516164ef848260208601616488565b91505092915050565b60006020828403121561650e5761650d614860565b5b600082015167ffffffffffffffff81111561652c5761652b614865565b5b616538848285016164ca565b91505092915050565b600081519050616550816149b9565b92915050565b60006020828403121561656c5761656b614860565b5b600061657a84828501616541565b91505092915050565b600060a082019050616598600083018861524b565b6165a5602083018761524b565b81810360408301526165b781866162cf565b90506165c6606083018561510a565b6165d3608083018461524b565b9695505050505050565b600067ffffffffffffffff8211156165f8576165f7616002565b5b602082029050602081019050919050565b600061661c616617846165dd565b61643c565b9050808382526020820190506020840283018581111561663f5761663e614a7b565b5b835b8181101561666857806166548882615c53565b845260208401935050602081019050616641565b5050509392505050565b600082601f83011261668757616686614a71565b5b8151616697848260208601616609565b91505092915050565b6000602082840312156166b6576166b5614860565b5b600082015167ffffffffffffffff8111156166d4576166d3614865565b5b6166e084828501616672565b91505092915050565b6000610100820190506166ff600083018b61510a565b61670c602083018a61510a565b616719604083018961524b565b616726606083018861524b565b616733608083018761524b565b61674060a083018661524b565b61674d60c083018561510a565b61675a60e083018461524b565b9998505050505050505050565b600060408201905061677c600083018561524b565b818103602083015261678e81846162cf565b90509392505050565b60006080820190506167ac600083018761524b565b81810360208301526167be81866162cf565b90506167cd604083018561510a565b6167da606083018461524b565b95945050505050565b60006060820190506167f8600083018661510a565b616805602083018561524b565b8181036040830152616817818461505c565b905094935050505056fea2646970667358221220535f8be9ef5080bc36872f329c6153abb640ede7e37cc03f8f617fa77beae53764736f6c63430008180033";

type UniswapV2PluginConstructorParams =
  | [linkLibraryAddresses: UniswapV2PluginLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV2PluginConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class UniswapV2Plugin__factory extends ContractFactory {
  constructor(...args: UniswapV2PluginConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        UniswapV2Plugin__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: UniswapV2PluginLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e900ae7a69279cdc9abe9d8bc58f41bf35\\$__", "g"),
      linkLibraryAddresses[
        "src/actions/uniswap-v2/lib/UniswapV2RouterExecutionLib.sol:UniswapV2RouterExecutionLib"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_router, overrides || {});
  }
  override deploy(
    _router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_router, overrides || {}) as Promise<
      UniswapV2Plugin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UniswapV2Plugin__factory {
    return super.connect(runner) as UniswapV2Plugin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV2PluginInterface {
    return new Interface(_abi) as UniswapV2PluginInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UniswapV2Plugin {
    return new Contract(address, _abi, runner) as unknown as UniswapV2Plugin;
  }
}

export interface UniswapV2PluginLibraryAddresses {
  ["src/actions/uniswap-v2/lib/UniswapV2RouterExecutionLib.sol:UniswapV2RouterExecutionLib"]: string;
}
