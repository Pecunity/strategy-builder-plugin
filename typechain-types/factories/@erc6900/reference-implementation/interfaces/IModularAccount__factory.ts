/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IModularAccount,
  IModularAccountInterface,
} from "../../../../@erc6900/reference-implementation/interfaces/IModularAccount";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "module",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                internalType: "bool",
                name: "skipRuntimeValidation",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "allowGlobalValidation",
                type: "bool",
              },
            ],
            internalType: "struct ManifestExecutionFunction[]",
            name: "executionFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                internalType: "uint32",
                name: "entityId",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "isPreHook",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isPostHook",
                type: "bool",
              },
            ],
            internalType: "struct ManifestExecutionHook[]",
            name: "executionHooks",
            type: "tuple[]",
          },
          {
            internalType: "bytes4[]",
            name: "interfaceIds",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct ExecutionManifest",
        name: "manifest",
        type: "tuple",
      },
    ],
    name: "ExecutionInstalled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "module",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "onUninstallSucceeded",
        type: "bool",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                internalType: "bool",
                name: "skipRuntimeValidation",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "allowGlobalValidation",
                type: "bool",
              },
            ],
            internalType: "struct ManifestExecutionFunction[]",
            name: "executionFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                internalType: "uint32",
                name: "entityId",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "isPreHook",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isPostHook",
                type: "bool",
              },
            ],
            internalType: "struct ManifestExecutionHook[]",
            name: "executionHooks",
            type: "tuple[]",
          },
          {
            internalType: "bytes4[]",
            name: "interfaceIds",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct ExecutionManifest",
        name: "manifest",
        type: "tuple",
      },
    ],
    name: "ExecutionUninstalled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "module",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "entityId",
        type: "uint32",
      },
    ],
    name: "ValidationInstalled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "module",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "entityId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "onUninstallSucceeded",
        type: "bool",
      },
    ],
    name: "ValidationUninstalled",
    type: "event",
  },
  {
    inputs: [],
    name: "accountId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "executeBatch",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "authorization",
        type: "bytes",
      },
    ],
    name: "executeWithRuntimeValidation",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                internalType: "bool",
                name: "skipRuntimeValidation",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "allowGlobalValidation",
                type: "bool",
              },
            ],
            internalType: "struct ManifestExecutionFunction[]",
            name: "executionFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                internalType: "uint32",
                name: "entityId",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "isPreHook",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isPostHook",
                type: "bool",
              },
            ],
            internalType: "struct ManifestExecutionHook[]",
            name: "executionHooks",
            type: "tuple[]",
          },
          {
            internalType: "bytes4[]",
            name: "interfaceIds",
            type: "bytes4[]",
          },
        ],
        internalType: "struct ExecutionManifest",
        name: "manifest",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "installData",
        type: "bytes",
      },
    ],
    name: "installExecution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "ValidationConfig",
        name: "validationConfig",
        type: "bytes25",
      },
      {
        internalType: "bytes4[]",
        name: "selectors",
        type: "bytes4[]",
      },
      {
        internalType: "bytes",
        name: "installData",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "hooks",
        type: "bytes[]",
      },
    ],
    name: "installValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                internalType: "bool",
                name: "skipRuntimeValidation",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "allowGlobalValidation",
                type: "bool",
              },
            ],
            internalType: "struct ManifestExecutionFunction[]",
            name: "executionFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "executionSelector",
                type: "bytes4",
              },
              {
                internalType: "uint32",
                name: "entityId",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "isPreHook",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isPostHook",
                type: "bool",
              },
            ],
            internalType: "struct ManifestExecutionHook[]",
            name: "executionHooks",
            type: "tuple[]",
          },
          {
            internalType: "bytes4[]",
            name: "interfaceIds",
            type: "bytes4[]",
          },
        ],
        internalType: "struct ExecutionManifest",
        name: "manifest",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "uninstallData",
        type: "bytes",
      },
    ],
    name: "uninstallExecution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "ModuleEntity",
        name: "validationFunction",
        type: "bytes24",
      },
      {
        internalType: "bytes",
        name: "uninstallData",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "hookUninstallData",
        type: "bytes[]",
      },
    ],
    name: "uninstallValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IModularAccount__factory {
  static readonly abi = _abi;
  static createInterface(): IModularAccountInterface {
    return new Interface(_abi) as IModularAccountInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IModularAccount {
    return new Contract(address, _abi, runner) as unknown as IModularAccount;
  }
}
