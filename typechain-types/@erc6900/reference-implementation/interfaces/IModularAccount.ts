/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../../common";

export type ManifestExecutionFunctionStruct = {
  executionSelector: BytesLike;
  skipRuntimeValidation: boolean;
  allowGlobalValidation: boolean;
};

export type ManifestExecutionFunctionStructOutput = [
  executionSelector: string,
  skipRuntimeValidation: boolean,
  allowGlobalValidation: boolean
] & {
  executionSelector: string;
  skipRuntimeValidation: boolean;
  allowGlobalValidation: boolean;
};

export type ManifestExecutionHookStruct = {
  executionSelector: BytesLike;
  entityId: BigNumberish;
  isPreHook: boolean;
  isPostHook: boolean;
};

export type ManifestExecutionHookStructOutput = [
  executionSelector: string,
  entityId: bigint,
  isPreHook: boolean,
  isPostHook: boolean
] & {
  executionSelector: string;
  entityId: bigint;
  isPreHook: boolean;
  isPostHook: boolean;
};

export type ExecutionManifestStruct = {
  executionFunctions: ManifestExecutionFunctionStruct[];
  executionHooks: ManifestExecutionHookStruct[];
  interfaceIds: BytesLike[];
};

export type ExecutionManifestStructOutput = [
  executionFunctions: ManifestExecutionFunctionStructOutput[],
  executionHooks: ManifestExecutionHookStructOutput[],
  interfaceIds: string[]
] & {
  executionFunctions: ManifestExecutionFunctionStructOutput[];
  executionHooks: ManifestExecutionHookStructOutput[];
  interfaceIds: string[];
};

export type CallStruct = {
  target: AddressLike;
  value: BigNumberish;
  data: BytesLike;
};

export type CallStructOutput = [target: string, value: bigint, data: string] & {
  target: string;
  value: bigint;
  data: string;
};

export interface IModularAccountInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "accountId"
      | "execute"
      | "executeBatch"
      | "executeWithRuntimeValidation"
      | "installExecution"
      | "installValidation"
      | "uninstallExecution"
      | "uninstallValidation"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "ExecutionInstalled"
      | "ExecutionUninstalled"
      | "ValidationInstalled"
      | "ValidationUninstalled"
  ): EventFragment;

  encodeFunctionData(functionFragment: "accountId", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "execute",
    values: [AddressLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "executeBatch",
    values: [CallStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "executeWithRuntimeValidation",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "installExecution",
    values: [AddressLike, ExecutionManifestStruct, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "installValidation",
    values: [BytesLike, BytesLike[], BytesLike, BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "uninstallExecution",
    values: [AddressLike, ExecutionManifestStruct, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "uninstallValidation",
    values: [BytesLike, BytesLike, BytesLike[]]
  ): string;

  decodeFunctionResult(functionFragment: "accountId", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "execute", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "executeBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeWithRuntimeValidation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "installExecution",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "installValidation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "uninstallExecution",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "uninstallValidation",
    data: BytesLike
  ): Result;
}

export namespace ExecutionInstalledEvent {
  export type InputTuple = [
    module: AddressLike,
    manifest: ExecutionManifestStruct
  ];
  export type OutputTuple = [
    module: string,
    manifest: ExecutionManifestStructOutput
  ];
  export interface OutputObject {
    module: string;
    manifest: ExecutionManifestStructOutput;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ExecutionUninstalledEvent {
  export type InputTuple = [
    module: AddressLike,
    onUninstallSucceeded: boolean,
    manifest: ExecutionManifestStruct
  ];
  export type OutputTuple = [
    module: string,
    onUninstallSucceeded: boolean,
    manifest: ExecutionManifestStructOutput
  ];
  export interface OutputObject {
    module: string;
    onUninstallSucceeded: boolean;
    manifest: ExecutionManifestStructOutput;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ValidationInstalledEvent {
  export type InputTuple = [module: AddressLike, entityId: BigNumberish];
  export type OutputTuple = [module: string, entityId: bigint];
  export interface OutputObject {
    module: string;
    entityId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ValidationUninstalledEvent {
  export type InputTuple = [
    module: AddressLike,
    entityId: BigNumberish,
    onUninstallSucceeded: boolean
  ];
  export type OutputTuple = [
    module: string,
    entityId: bigint,
    onUninstallSucceeded: boolean
  ];
  export interface OutputObject {
    module: string;
    entityId: bigint;
    onUninstallSucceeded: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface IModularAccount extends BaseContract {
  connect(runner?: ContractRunner | null): IModularAccount;
  waitForDeployment(): Promise<this>;

  interface: IModularAccountInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  accountId: TypedContractMethod<[], [string], "view">;

  execute: TypedContractMethod<
    [target: AddressLike, value: BigNumberish, data: BytesLike],
    [string],
    "payable"
  >;

  executeBatch: TypedContractMethod<
    [calls: CallStruct[]],
    [string[]],
    "payable"
  >;

  executeWithRuntimeValidation: TypedContractMethod<
    [data: BytesLike, authorization: BytesLike],
    [string],
    "payable"
  >;

  installExecution: TypedContractMethod<
    [
      module: AddressLike,
      manifest: ExecutionManifestStruct,
      installData: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  installValidation: TypedContractMethod<
    [
      validationConfig: BytesLike,
      selectors: BytesLike[],
      installData: BytesLike,
      hooks: BytesLike[]
    ],
    [void],
    "nonpayable"
  >;

  uninstallExecution: TypedContractMethod<
    [
      module: AddressLike,
      manifest: ExecutionManifestStruct,
      uninstallData: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  uninstallValidation: TypedContractMethod<
    [
      validationFunction: BytesLike,
      uninstallData: BytesLike,
      hookUninstallData: BytesLike[]
    ],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "accountId"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "execute"
  ): TypedContractMethod<
    [target: AddressLike, value: BigNumberish, data: BytesLike],
    [string],
    "payable"
  >;
  getFunction(
    nameOrSignature: "executeBatch"
  ): TypedContractMethod<[calls: CallStruct[]], [string[]], "payable">;
  getFunction(
    nameOrSignature: "executeWithRuntimeValidation"
  ): TypedContractMethod<
    [data: BytesLike, authorization: BytesLike],
    [string],
    "payable"
  >;
  getFunction(
    nameOrSignature: "installExecution"
  ): TypedContractMethod<
    [
      module: AddressLike,
      manifest: ExecutionManifestStruct,
      installData: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "installValidation"
  ): TypedContractMethod<
    [
      validationConfig: BytesLike,
      selectors: BytesLike[],
      installData: BytesLike,
      hooks: BytesLike[]
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "uninstallExecution"
  ): TypedContractMethod<
    [
      module: AddressLike,
      manifest: ExecutionManifestStruct,
      uninstallData: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "uninstallValidation"
  ): TypedContractMethod<
    [
      validationFunction: BytesLike,
      uninstallData: BytesLike,
      hookUninstallData: BytesLike[]
    ],
    [void],
    "nonpayable"
  >;

  getEvent(
    key: "ExecutionInstalled"
  ): TypedContractEvent<
    ExecutionInstalledEvent.InputTuple,
    ExecutionInstalledEvent.OutputTuple,
    ExecutionInstalledEvent.OutputObject
  >;
  getEvent(
    key: "ExecutionUninstalled"
  ): TypedContractEvent<
    ExecutionUninstalledEvent.InputTuple,
    ExecutionUninstalledEvent.OutputTuple,
    ExecutionUninstalledEvent.OutputObject
  >;
  getEvent(
    key: "ValidationInstalled"
  ): TypedContractEvent<
    ValidationInstalledEvent.InputTuple,
    ValidationInstalledEvent.OutputTuple,
    ValidationInstalledEvent.OutputObject
  >;
  getEvent(
    key: "ValidationUninstalled"
  ): TypedContractEvent<
    ValidationUninstalledEvent.InputTuple,
    ValidationUninstalledEvent.OutputTuple,
    ValidationUninstalledEvent.OutputObject
  >;

  filters: {
    "ExecutionInstalled(address,tuple)": TypedContractEvent<
      ExecutionInstalledEvent.InputTuple,
      ExecutionInstalledEvent.OutputTuple,
      ExecutionInstalledEvent.OutputObject
    >;
    ExecutionInstalled: TypedContractEvent<
      ExecutionInstalledEvent.InputTuple,
      ExecutionInstalledEvent.OutputTuple,
      ExecutionInstalledEvent.OutputObject
    >;

    "ExecutionUninstalled(address,bool,tuple)": TypedContractEvent<
      ExecutionUninstalledEvent.InputTuple,
      ExecutionUninstalledEvent.OutputTuple,
      ExecutionUninstalledEvent.OutputObject
    >;
    ExecutionUninstalled: TypedContractEvent<
      ExecutionUninstalledEvent.InputTuple,
      ExecutionUninstalledEvent.OutputTuple,
      ExecutionUninstalledEvent.OutputObject
    >;

    "ValidationInstalled(address,uint32)": TypedContractEvent<
      ValidationInstalledEvent.InputTuple,
      ValidationInstalledEvent.OutputTuple,
      ValidationInstalledEvent.OutputObject
    >;
    ValidationInstalled: TypedContractEvent<
      ValidationInstalledEvent.InputTuple,
      ValidationInstalledEvent.OutputTuple,
      ValidationInstalledEvent.OutputObject
    >;

    "ValidationUninstalled(address,uint32,bool)": TypedContractEvent<
      ValidationUninstalledEvent.InputTuple,
      ValidationUninstalledEvent.OutputTuple,
      ValidationUninstalledEvent.OutputObject
    >;
    ValidationUninstalled: TypedContractEvent<
      ValidationUninstalledEvent.InputTuple,
      ValidationUninstalledEvent.OutputTuple,
      ValidationUninstalledEvent.OutputObject
    >;
  };
}
