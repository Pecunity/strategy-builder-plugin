{
  "id": "8cc19b96b1fc7778fff9348bd84e2718",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
      },
      "@pythnetwork/pyth-sdk-solidity/IPyth.sol": {
        "content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\nimport \"./PythStructs.sol\";\nimport \"./IPythEvents.sol\";\n\n/// @title Consume prices from the Pyth Network (https://pyth.network/).\n/// @dev Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\n/// @author Pyth Data Association\ninterface IPyth is IPythEvents {\n    /// @notice Returns the price of a price feed without any sanity checks.\n    /// @dev This function returns the most recent price update in this contract without any recency checks.\n    /// This function is unsafe as the returned price update may be arbitrarily far in the past.\n    ///\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\n    /// sufficiently recent for their application. If you are considering using this function, it may be\n    /// safer / easier to use `getPriceNoOlderThan`.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getPriceUnsafe(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the price that is no older than `age` seconds of the current time.\n    /// @dev This function is a sanity-checked version of `getPriceUnsafe` which is useful in\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n    /// recently.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getPriceNoOlderThan(\n        bytes32 id,\n        uint age\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\n    /// @dev This function returns the same price as `getEmaPrice` in the case where the price is available.\n    /// However, if the price is not recent this function returns the latest available price.\n    ///\n    /// The returned price can be from arbitrarily far in the past; this function makes no guarantees that\n    /// the returned price is recent or useful for any particular application.\n    ///\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\n    /// sufficiently recent for their application. If you are considering using this function, it may be\n    /// safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getEmaPriceUnsafe(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the exponentially-weighted moving average price that is no older than `age` seconds\n    /// of the current time.\n    /// @dev This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n    /// recently.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getEmaPriceNoOlderThan(\n        bytes32 id,\n        uint age\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Update price feeds with given update messages.\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    /// Prices will be updated if they are more recent than the current stored prices.\n    /// The call will succeed even if the update is not the most recent.\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid.\n    /// @param updateData Array of price update data.\n    function updatePriceFeeds(bytes[] calldata updateData) external payable;\n\n    /// @notice Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is\n    /// necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the\n    /// given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    /// `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime\n    /// of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have\n    /// a newer or equal publish time than the given publish time, it will reject the transaction to save gas.\n    /// Otherwise, it calls updatePriceFeeds method to update the prices.\n    ///\n    /// @dev Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param publishTimes Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`\n    function updatePriceFeedsIfNecessary(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64[] calldata publishTimes\n    ) external payable;\n\n    /// @notice Returns the required fee to update an array of price updates.\n    /// @param updateData Array of price update data.\n    /// @return feeAmount The required fee in Wei.\n    function getUpdateFee(\n        bytes[] calldata updateData\n    ) external view returns (uint feeAmount);\n\n    /// @notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n    /// within `minPublishTime` and `maxPublishTime`.\n    ///\n    /// You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n    /// otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdates(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minPublishTime,\n        uint64 maxPublishTime\n    ) external payable returns (PythStructs.PriceFeed[] memory priceFeeds);\n\n    /// @notice Similar to `parsePriceFeedUpdates` but ensures the updates returned are\n    /// the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp,\n    /// this method will return the first update. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range and uniqueness condition.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdatesUnique(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minPublishTime,\n        uint64 maxPublishTime\n    ) external payable returns (PythStructs.PriceFeed[] memory priceFeeds);\n}\n"
      },
      "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol": {
        "content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @title IPythEvents contains the events that Pyth contract emits.\n/// @dev This interface can be used for listening to the updates for off-chain and testing purposes.\ninterface IPythEvents {\n    /// @dev Emitted when the price feed with `id` has received a fresh update.\n    /// @param id The Pyth Price Feed ID.\n    /// @param publishTime Publish time of the given price update.\n    /// @param price Price of the given price update.\n    /// @param conf Confidence interval of the given price update.\n    event PriceFeedUpdate(\n        bytes32 indexed id,\n        uint64 publishTime,\n        int64 price,\n        uint64 conf\n    );\n}\n"
      },
      "@pythnetwork/pyth-sdk-solidity/PythStructs.sol": {
        "content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\ncontract PythStructs {\n    // A price with a degree of uncertainty, represented as a price +- a confidence interval.\n    //\n    // The confidence interval roughly corresponds to the standard error of a normal distribution.\n    // Both the price and confidence are stored in a fixed-point numeric representation,\n    // `x * (10^expo)`, where `expo` is the exponent.\n    //\n    // Please refer to the documentation at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how\n    // to how this price safely.\n    struct Price {\n        // Price\n        int64 price;\n        // Confidence interval around the price\n        uint64 conf;\n        // Price exponent\n        int32 expo;\n        // Unix timestamp describing when the price was published\n        uint publishTime;\n    }\n\n    // PriceFeed represents a current aggregate price from pyth publisher feeds.\n    struct PriceFeed {\n        // The price ID.\n        bytes32 id;\n        // Latest available price\n        Price price;\n        // Latest available exponentially-weighted moving average price\n        Price emaPrice;\n    }\n}\n"
      },
      "contracts/interfaces/IPriceOracle.sol": {
        "content": "// SPDX-License-Identifier:MIT\npragma solidity ^0.8.26;\n\n/// @title IPriceOracle\n/// @notice Interface for a price oracle used to fetch token prices via oracle IDs.\n/// @dev Defines functions and events for managing and accessing token price data.\ninterface IPriceOracle {\n    // ┏━━━━━━━━━━━━━━━━━━━━━━┓\n    // ┃        Errors        ┃\n    // ┗━━━━━━━━━━━━━━━━━━━━━━┛\n\n    /// @notice Thrown when no oracle is set for the given token address.\n    /// @param token Address of the token without an assigned oracle ID.\n    error OracleNotExist(address token);\n\n    /// @notice Thrown when a negative price is returned by the oracle, which is invalid.\n    error NegativePriceNotAllowed();\n\n    // ┏━━━━━━━━━━━━━━━━━━━━━━┓\n    // ┃        Events        ┃\n    // ┗━━━━━━━━━━━━━━━━━━━━━━┛\n\n    /// @notice Emitted when a new oracle ID is set for a token.\n    /// @param token Address of the token for which the oracle ID was set.\n    /// @param oracleID The oracle feed ID associated with the token.\n    event OracleSet(address indexed token, bytes32 oracleID);\n\n    // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n    // ┃        External Functions        ┃\n    // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n\n    /// @notice Sets the oracle ID for a specific token.\n    /// @dev Can only be called by authorized roles (owner).\n    /// @param _token Address of the token.\n    /// @param _oracleID Oracle feed ID from the price oracle provider.\n    function setOracleID(address _token, bytes32 _oracleID) external;\n\n    /// @notice Returns the oracle ID for a given token.\n    /// @param _token Address of the token.\n    /// @return The oracle feed ID assigned to the token.\n    function oracleID(address _token) external view returns (bytes32);\n\n    /// @notice Returns the current price of the token from the oracle.\n    /// @dev Price is usually returned in 18 decimals for consistency.\n    /// @param _token Address of the token.\n    /// @return The latest price of the token.\n    function getTokenPrice(address _token) external view returns (uint256);\n\n    /// @notice Returns the number of decimals used for the scaled price.\n    /// @dev This value is fixed to match the output of `_scalePythPrice`, which normalizes prices to 18 decimals.\n    /// @return The number of decimals (always 18).\n    function PRICE_DECIMALS() external view returns (uint8);\n}\n"
      },
      "contracts/PriceOracle.sol": {
        "content": "// SPDX-License-Identifier:MIT\npragma solidity ^0.8.26;\n\nimport {IPyth} from \"@pythnetwork/pyth-sdk-solidity/IPyth.sol\";\nimport {PythStructs} from \"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IPriceOracle} from \"./interfaces/IPriceOracle.sol\";\n\ncontract PriceOracle is Ownable, IPriceOracle {\n    uint8 public constant PRICE_DECIMALS = 18;\n\n    uint16 public immutable maxOracleDelay;\n\n    // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n    // ┃       StateVariable       ┃\n    // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n\n    /// @notice Address of the Pyth Oracle contract used for fetching price data.\n    /// @dev Immutable after deployment.\n    IPyth private immutable pythOracle;\n\n    /// @notice Mapping of allowed payment tokens to their corresponding Pyth Oracle price feed IDs.\n    /// @dev Used to resolve the oracle price feed for a specific token.\n    mapping(address token => bytes32 oracleID) private oracleIDs;\n\n    // ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓\n    // ┃       Constructor       ┃\n    // ┗━━━━━━━━━━━━━━━━━━━━━━━━━┛\n\n    /// @notice Deploys the contract and sets the Pyth Oracle and contract owner.\n    /// @dev Initializes the oracle contract and transfers ownership to the given owner address.\n    /// @param _pythOracle Address of the deployed Pyth Oracle contract.\n    constructor(address initialOwner, address _pythOracle, uint16 _maxOracleDelay) Ownable(initialOwner) {\n        maxOracleDelay = _maxOracleDelay;\n        pythOracle = IPyth(_pythOracle);\n    }\n\n    // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n    // ┃     Public Functions      ┃\n    // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n\n    /// @inheritdoc IPriceOracle\n    function setOracleID(address _token, bytes32 _oracleID) external onlyOwner {\n        oracleIDs[_token] = _oracleID;\n\n        emit OracleSet(_token, _oracleID);\n    }\n\n    // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n    // ┃    Internal Functions    ┃\n    // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n\n    function _scalePythPrice(int256 _price, int32 _expo) internal pure returns (uint256) {\n        if (_price <= 0) {\n            revert NegativePriceNotAllowed();\n        }\n\n        if (_expo > 0) {\n            // _expo is positive\n            uint256 posExpo = uint32(_expo);\n            return uint256(_price) / (10 ** (PRICE_DECIMALS + posExpo));\n        } else {\n            uint256 _absExpo = uint32(-_expo);\n            if (_expo <= -int32(uint32(PRICE_DECIMALS))) {\n                return uint256(_price) * (10 ** (_absExpo - PRICE_DECIMALS));\n            } else {\n                return uint256(_price) * 10 ** (PRICE_DECIMALS - _absExpo);\n            }\n        }\n    }\n\n    // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n    // ┃       View Functions     ┃\n    // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n\n    /// @inheritdoc IPriceOracle\n    function getTokenPrice(address _token) external view returns (uint256) {\n        bytes32 _oracleID = oracleIDs[_token];\n\n        if (_oracleID == bytes32(0)) {\n            revert OracleNotExist(_token);\n        }\n\n        // PythStructs.Price memory price = pythOracle.getPriceUnsafe(_oracleID);\n        // PythStructs.Price memory price = pythOracle.getPriceNoOlderThan(_oracleID, MAX_ORACLE_DELAY);\n\n        try pythOracle.getPriceNoOlderThan(_oracleID, maxOracleDelay) returns (PythStructs.Price memory price) {\n            return _scalePythPrice(price.price, price.expo);\n        } catch {\n            return 0;\n        }\n    }\n\n    /// @inheritdoc IPriceOracle\n    function oracleID(address _token) external view returns (bytes32) {\n        return oracleIDs[_token];\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              169
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 170,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 169,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 169,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                169
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 159,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              169
            ]
          },
          "id": 170,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:1"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 150,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:1",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 169,
              "linearizedBaseContracts": [
                169
              ],
              "name": "Context",
              "nameLocation": "642:7:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 158,
                    "nodeType": "Block",
                    "src": "718:34:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 155,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 154,
                        "id": 157,
                        "nodeType": "Return",
                        "src": "728:17:1"
                      }
                    ]
                  },
                  "id": 159,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:1"
                  },
                  "returnParameters": {
                    "id": 154,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "709:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:1"
                  },
                  "scope": 169,
                  "src": "656:96:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 167,
                    "nodeType": "Block",
                    "src": "825:32:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 164,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:1",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 163,
                        "id": 166,
                        "nodeType": "Return",
                        "src": "835:15:1"
                      }
                    ]
                  },
                  "id": 168,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 160,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:1"
                  },
                  "returnParameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "809:14:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:1"
                  },
                  "scope": 169,
                  "src": "758:99:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 170,
              "src": "624:235:1",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:759:1"
        },
        "id": 1
      },
      "@pythnetwork/pyth-sdk-solidity/IPyth.sol": {
        "ast": {
          "absolutePath": "@pythnetwork/pyth-sdk-solidity/IPyth.sol",
          "exportedSymbols": {
            "IPyth": [
              282
            ],
            "IPythEvents": [
              297
            ],
            "PythStructs": [
              318
            ]
          },
          "id": 283,
          "license": "Apache-2.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 171,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:23:2"
            },
            {
              "absolutePath": "@pythnetwork/pyth-sdk-solidity/PythStructs.sol",
              "file": "./PythStructs.sol",
              "id": 172,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 283,
              "sourceUnit": 319,
              "src": "64:27:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol",
              "file": "./IPythEvents.sol",
              "id": 173,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 283,
              "sourceUnit": 298,
              "src": "92:27:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 175,
                    "name": "IPythEvents",
                    "nameLocations": [
                      "397:11:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 297,
                    "src": "397:11:2"
                  },
                  "id": 176,
                  "nodeType": "InheritanceSpecifier",
                  "src": "397:11:2"
                }
              ],
              "canonicalName": "IPyth",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 174,
                "nodeType": "StructuredDocumentation",
                "src": "121:257:2",
                "text": "@title Consume prices from the Pyth Network (https://pyth.network/).\n @dev Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\n @author Pyth Data Association"
              },
              "fullyImplemented": false,
              "id": 282,
              "linearizedBaseContracts": [
                282,
                297
              ],
              "name": "IPyth",
              "nameLocation": "388:5:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 177,
                    "nodeType": "StructuredDocumentation",
                    "src": "415:669:2",
                    "text": "@notice Returns the price of a price feed without any sanity checks.\n @dev This function returns the most recent price update in this contract without any recency checks.\n This function is unsafe as the returned price update may be arbitrarily far in the past.\n Users of this function should check the `publishTime` in the price to ensure that the returned price is\n sufficiently recent for their application. If you are considering using this function, it may be\n safer / easier to use `getPriceNoOlderThan`.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."
                  },
                  "functionSelector": "96834ad3",
                  "id": 185,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPriceUnsafe",
                  "nameLocation": "1098:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 179,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1130:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 185,
                        "src": "1122:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1122:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1112:26:2"
                  },
                  "returnParameters": {
                    "id": 184,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 183,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "1187:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 185,
                        "src": "1162:30:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Price_$308_memory_ptr",
                          "typeString": "struct PythStructs.Price"
                        },
                        "typeName": {
                          "id": 182,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 181,
                            "name": "PythStructs.Price",
                            "nameLocations": [
                              "1162:11:2",
                              "1174:5:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 308,
                            "src": "1162:17:2"
                          },
                          "referencedDeclaration": 308,
                          "src": "1162:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Price_$308_storage_ptr",
                            "typeString": "struct PythStructs.Price"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1161:32:2"
                  },
                  "scope": 282,
                  "src": "1089:105:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 186,
                    "nodeType": "StructuredDocumentation",
                    "src": "1200:423:2",
                    "text": "@notice Returns the price that is no older than `age` seconds of the current time.\n @dev This function is a sanity-checked version of `getPriceUnsafe` which is useful in\n applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n recently.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."
                  },
                  "functionSelector": "a4ae35e0",
                  "id": 196,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPriceNoOlderThan",
                  "nameLocation": "1637:19:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 188,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1674:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "1666:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 187,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1666:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "age",
                        "nameLocation": "1691:3:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "1686:8:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1686:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1656:44:2"
                  },
                  "returnParameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "1749:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "1724:30:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Price_$308_memory_ptr",
                          "typeString": "struct PythStructs.Price"
                        },
                        "typeName": {
                          "id": 193,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 192,
                            "name": "PythStructs.Price",
                            "nameLocations": [
                              "1724:11:2",
                              "1736:5:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 308,
                            "src": "1724:17:2"
                          },
                          "referencedDeclaration": 308,
                          "src": "1724:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Price_$308_storage_ptr",
                            "typeString": "struct PythStructs.Price"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1723:32:2"
                  },
                  "scope": 282,
                  "src": "1628:128:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 197,
                    "nodeType": "StructuredDocumentation",
                    "src": "1762:925:2",
                    "text": "@notice Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\n @dev This function returns the same price as `getEmaPrice` in the case where the price is available.\n However, if the price is not recent this function returns the latest available price.\n The returned price can be from arbitrarily far in the past; this function makes no guarantees that\n the returned price is recent or useful for any particular application.\n Users of this function should check the `publishTime` in the price to ensure that the returned price is\n sufficiently recent for their application. If you are considering using this function, it may be\n safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."
                  },
                  "functionSelector": "9474f45b",
                  "id": 205,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getEmaPriceUnsafe",
                  "nameLocation": "2701:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 200,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 199,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "2736:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 205,
                        "src": "2728:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 198,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2728:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2718:26:2"
                  },
                  "returnParameters": {
                    "id": 204,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "2793:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 205,
                        "src": "2768:30:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Price_$308_memory_ptr",
                          "typeString": "struct PythStructs.Price"
                        },
                        "typeName": {
                          "id": 202,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 201,
                            "name": "PythStructs.Price",
                            "nameLocations": [
                              "2768:11:2",
                              "2780:5:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 308,
                            "src": "2768:17:2"
                          },
                          "referencedDeclaration": 308,
                          "src": "2768:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Price_$308_storage_ptr",
                            "typeString": "struct PythStructs.Price"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2767:32:2"
                  },
                  "scope": 282,
                  "src": "2692:108:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 206,
                    "nodeType": "StructuredDocumentation",
                    "src": "2806:472:2",
                    "text": "@notice Returns the exponentially-weighted moving average price that is no older than `age` seconds\n of the current time.\n @dev This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in\n applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n recently.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."
                  },
                  "functionSelector": "711a2e28",
                  "id": 216,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getEmaPriceNoOlderThan",
                  "nameLocation": "3292:22:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 208,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "3332:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "3324:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 207,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3324:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 210,
                        "mutability": "mutable",
                        "name": "age",
                        "nameLocation": "3349:3:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "3344:8:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 209,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3344:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3314:44:2"
                  },
                  "returnParameters": {
                    "id": 215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 214,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "3407:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "3382:30:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Price_$308_memory_ptr",
                          "typeString": "struct PythStructs.Price"
                        },
                        "typeName": {
                          "id": 213,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 212,
                            "name": "PythStructs.Price",
                            "nameLocations": [
                              "3382:11:2",
                              "3394:5:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 308,
                            "src": "3382:17:2"
                          },
                          "referencedDeclaration": 308,
                          "src": "3382:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Price_$308_storage_ptr",
                            "typeString": "struct PythStructs.Price"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3381:32:2"
                  },
                  "scope": 282,
                  "src": "3283:131:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 217,
                    "nodeType": "StructuredDocumentation",
                    "src": "3420:535:2",
                    "text": "@notice Update price feeds with given update messages.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n Prices will be updated if they are more recent than the current stored prices.\n The call will succeed even if the update is not the most recent.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid.\n @param updateData Array of price update data."
                  },
                  "functionSelector": "ef9e5e28",
                  "id": 223,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updatePriceFeeds",
                  "nameLocation": "3969:16:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 221,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "updateData",
                        "nameLocation": "4003:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 223,
                        "src": "3986:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 218,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "3986:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 219,
                          "nodeType": "ArrayTypeName",
                          "src": "3986:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3985:29:2"
                  },
                  "returnParameters": {
                    "id": 222,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4031:0:2"
                  },
                  "scope": 282,
                  "src": "3960:72:2",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 224,
                    "nodeType": "StructuredDocumentation",
                    "src": "4038:1299:2",
                    "text": "@notice Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is\n necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the\n given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime\n of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have\n a newer or equal publish time than the given publish time, it will reject the transaction to save gas.\n Otherwise, it calls updatePriceFeeds method to update the prices.\n @dev Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param publishTimes Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`"
                  },
                  "functionSelector": "b9256d28",
                  "id": 236,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updatePriceFeedsIfNecessary",
                  "nameLocation": "5351:27:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 234,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "updateData",
                        "nameLocation": "5405:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "5388:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 225,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5388:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 226,
                          "nodeType": "ArrayTypeName",
                          "src": "5388:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 230,
                        "mutability": "mutable",
                        "name": "priceIds",
                        "nameLocation": "5444:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "5425:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 228,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "5425:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 229,
                          "nodeType": "ArrayTypeName",
                          "src": "5425:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 233,
                        "mutability": "mutable",
                        "name": "publishTimes",
                        "nameLocation": "5480:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "5462:30:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                          "typeString": "uint64[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 231,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "5462:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "id": 232,
                          "nodeType": "ArrayTypeName",
                          "src": "5462:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
                            "typeString": "uint64[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5378:120:2"
                  },
                  "returnParameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5515:0:2"
                  },
                  "scope": 282,
                  "src": "5342:174:2",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 237,
                    "nodeType": "StructuredDocumentation",
                    "src": "5522:178:2",
                    "text": "@notice Returns the required fee to update an array of price updates.\n @param updateData Array of price update data.\n @return feeAmount The required fee in Wei."
                  },
                  "functionSelector": "d47eed45",
                  "id": 245,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUpdateFee",
                  "nameLocation": "5714:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "updateData",
                        "nameLocation": "5753:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "5736:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 238,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5736:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 239,
                          "nodeType": "ArrayTypeName",
                          "src": "5736:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5726:43:2"
                  },
                  "returnParameters": {
                    "id": 244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "feeAmount",
                        "nameLocation": "5798:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "5793:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5793:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5792:16:2"
                  },
                  "scope": 282,
                  "src": "5705:104:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 246,
                    "nodeType": "StructuredDocumentation",
                    "src": "5815:1213:2",
                    "text": "@notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n within `minPublishTime` and `maxPublishTime`.\n You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."
                  },
                  "functionSelector": "4716e9c5",
                  "id": 263,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "parsePriceFeedUpdates",
                  "nameLocation": "7042:21:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 257,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 249,
                        "mutability": "mutable",
                        "name": "updateData",
                        "nameLocation": "7090:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "7073:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 247,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7073:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 248,
                          "nodeType": "ArrayTypeName",
                          "src": "7073:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "priceIds",
                        "nameLocation": "7129:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "7110:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 250,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "7110:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 251,
                          "nodeType": "ArrayTypeName",
                          "src": "7110:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "minPublishTime",
                        "nameLocation": "7154:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "7147:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "7147:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 256,
                        "mutability": "mutable",
                        "name": "maxPublishTime",
                        "nameLocation": "7185:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "7178:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "7178:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7063:142:2"
                  },
                  "returnParameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "priceFeeds",
                        "nameLocation": "7263:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "7232:41:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PriceFeed_$317_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct PythStructs.PriceFeed[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 259,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 258,
                              "name": "PythStructs.PriceFeed",
                              "nameLocations": [
                                "7232:11:2",
                                "7244:9:2"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 317,
                              "src": "7232:21:2"
                            },
                            "referencedDeclaration": 317,
                            "src": "7232:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PriceFeed_$317_storage_ptr",
                              "typeString": "struct PythStructs.PriceFeed"
                            }
                          },
                          "id": 260,
                          "nodeType": "ArrayTypeName",
                          "src": "7232:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PriceFeed_$317_storage_$dyn_storage_ptr",
                            "typeString": "struct PythStructs.PriceFeed[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7231:43:2"
                  },
                  "scope": 282,
                  "src": "7033:242:2",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 264,
                    "nodeType": "StructuredDocumentation",
                    "src": "7281:972:2",
                    "text": "@notice Similar to `parsePriceFeedUpdates` but ensures the updates returned are\n the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp,\n this method will return the first update. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range and uniqueness condition.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."
                  },
                  "functionSelector": "accca7f9",
                  "id": 281,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "parsePriceFeedUpdatesUnique",
                  "nameLocation": "8267:27:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 267,
                        "mutability": "mutable",
                        "name": "updateData",
                        "nameLocation": "8321:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 281,
                        "src": "8304:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 265,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "8304:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 266,
                          "nodeType": "ArrayTypeName",
                          "src": "8304:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 270,
                        "mutability": "mutable",
                        "name": "priceIds",
                        "nameLocation": "8360:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 281,
                        "src": "8341:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 268,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "8341:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 269,
                          "nodeType": "ArrayTypeName",
                          "src": "8341:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 272,
                        "mutability": "mutable",
                        "name": "minPublishTime",
                        "nameLocation": "8385:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 281,
                        "src": "8378:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 271,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "8378:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "maxPublishTime",
                        "nameLocation": "8416:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 281,
                        "src": "8409:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "8409:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8294:142:2"
                  },
                  "returnParameters": {
                    "id": 280,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "priceFeeds",
                        "nameLocation": "8494:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 281,
                        "src": "8463:41:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PriceFeed_$317_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct PythStructs.PriceFeed[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 277,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 276,
                              "name": "PythStructs.PriceFeed",
                              "nameLocations": [
                                "8463:11:2",
                                "8475:9:2"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 317,
                              "src": "8463:21:2"
                            },
                            "referencedDeclaration": 317,
                            "src": "8463:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PriceFeed_$317_storage_ptr",
                              "typeString": "struct PythStructs.PriceFeed"
                            }
                          },
                          "id": 278,
                          "nodeType": "ArrayTypeName",
                          "src": "8463:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PriceFeed_$317_storage_$dyn_storage_ptr",
                            "typeString": "struct PythStructs.PriceFeed[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8462:43:2"
                  },
                  "scope": 282,
                  "src": "8258:248:2",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 283,
              "src": "378:8130:2",
              "usedErrors": [],
              "usedEvents": [
                296
              ]
            }
          ],
          "src": "39:8470:2"
        },
        "id": 2
      },
      "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol": {
        "ast": {
          "absolutePath": "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol",
          "exportedSymbols": {
            "IPythEvents": [
              297
            ]
          },
          "id": 298,
          "license": "Apache-2.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 284,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:23:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IPythEvents",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 285,
                "nodeType": "StructuredDocumentation",
                "src": "64:170:3",
                "text": "@title IPythEvents contains the events that Pyth contract emits.\n @dev This interface can be used for listening to the updates for off-chain and testing purposes."
              },
              "fullyImplemented": true,
              "id": 297,
              "linearizedBaseContracts": [
                297
              ],
              "name": "IPythEvents",
              "nameLocation": "244:11:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 286,
                    "nodeType": "StructuredDocumentation",
                    "src": "262:305:3",
                    "text": "@dev Emitted when the price feed with `id` has received a fresh update.\n @param id The Pyth Price Feed ID.\n @param publishTime Publish time of the given price update.\n @param price Price of the given price update.\n @param conf Confidence interval of the given price update."
                  },
                  "eventSelector": "d06a6b7f4918494b3719217d1802786c1f5112a6c1d88fe2cfec00b4584f6aec",
                  "id": 296,
                  "name": "PriceFeedUpdate",
                  "nameLocation": "578:15:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 295,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 288,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "619:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "603:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 287,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "603:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 290,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "publishTime",
                        "nameLocation": "638:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "631:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 289,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "631:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 292,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "665:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "659:11:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        },
                        "typeName": {
                          "id": 291,
                          "name": "int64",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int64",
                            "typeString": "int64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 294,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "conf",
                        "nameLocation": "687:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "680:11:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 293,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "680:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "593:104:3"
                  },
                  "src": "572:126:3"
                }
              ],
              "scope": 298,
              "src": "234:466:3",
              "usedErrors": [],
              "usedEvents": [
                296
              ]
            }
          ],
          "src": "39:662:3"
        },
        "id": 3
      },
      "@pythnetwork/pyth-sdk-solidity/PythStructs.sol": {
        "ast": {
          "absolutePath": "@pythnetwork/pyth-sdk-solidity/PythStructs.sol",
          "exportedSymbols": {
            "PythStructs": [
              318
            ]
          },
          "id": 319,
          "license": "Apache-2.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 299,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:23:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "PythStructs",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 318,
              "linearizedBaseContracts": [
                318
              ],
              "name": "PythStructs",
              "nameLocation": "73:11:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "PythStructs.Price",
                  "id": 308,
                  "members": [
                    {
                      "constant": false,
                      "id": 301,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "647:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 308,
                      "src": "641:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int64",
                        "typeString": "int64"
                      },
                      "typeName": {
                        "id": 300,
                        "name": "int64",
                        "nodeType": "ElementaryTypeName",
                        "src": "641:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 303,
                      "mutability": "mutable",
                      "name": "conf",
                      "nameLocation": "717:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 308,
                      "src": "710:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 302,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "710:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 305,
                      "mutability": "mutable",
                      "name": "expo",
                      "nameLocation": "763:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 308,
                      "src": "757:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      },
                      "typeName": {
                        "id": 304,
                        "name": "int32",
                        "nodeType": "ElementaryTypeName",
                        "src": "757:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int32",
                          "typeString": "int32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 307,
                      "mutability": "mutable",
                      "name": "publishTime",
                      "nameLocation": "848:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 308,
                      "src": "843:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 306,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "843:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Price",
                  "nameLocation": "608:5:4",
                  "nodeType": "StructDefinition",
                  "scope": 318,
                  "src": "601:265:4",
                  "visibility": "public"
                },
                {
                  "canonicalName": "PythStructs.PriceFeed",
                  "id": 317,
                  "members": [
                    {
                      "constant": false,
                      "id": 310,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "1013:2:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 317,
                      "src": "1005:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 309,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1005:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 313,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "1065:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 317,
                      "src": "1059:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Price_$308_storage_ptr",
                        "typeString": "struct PythStructs.Price"
                      },
                      "typeName": {
                        "id": 312,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 311,
                          "name": "Price",
                          "nameLocations": [
                            "1059:5:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 308,
                          "src": "1059:5:4"
                        },
                        "referencedDeclaration": 308,
                        "src": "1059:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Price_$308_storage_ptr",
                          "typeString": "struct PythStructs.Price"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 316,
                      "mutability": "mutable",
                      "name": "emaPrice",
                      "nameLocation": "1158:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 317,
                      "src": "1152:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Price_$308_storage_ptr",
                        "typeString": "struct PythStructs.Price"
                      },
                      "typeName": {
                        "id": 315,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 314,
                          "name": "Price",
                          "nameLocations": [
                            "1152:5:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 308,
                          "src": "1152:5:4"
                        },
                        "referencedDeclaration": 308,
                        "src": "1152:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Price_$308_storage_ptr",
                          "typeString": "struct PythStructs.Price"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "PriceFeed",
                  "nameLocation": "960:9:4",
                  "nodeType": "StructDefinition",
                  "scope": 318,
                  "src": "953:220:4",
                  "visibility": "public"
                }
              ],
              "scope": 319,
              "src": "64:1111:4",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "39:1137:4"
        },
        "id": 4
      },
      "contracts/PriceOracle.sol": {
        "ast": {
          "absolutePath": "contracts/PriceOracle.sol",
          "exportedSymbols": {
            "IPriceOracle": [
              595
            ],
            "IPyth": [
              282
            ],
            "Ownable": [
              147
            ],
            "PriceOracle": [
              546
            ],
            "PythStructs": [
              318
            ]
          },
          "id": 547,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 320,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:24:5"
            },
            {
              "absolutePath": "@pythnetwork/pyth-sdk-solidity/IPyth.sol",
              "file": "@pythnetwork/pyth-sdk-solidity/IPyth.sol",
              "id": 322,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 547,
              "sourceUnit": 283,
              "src": "57:63:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 321,
                    "name": "IPyth",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 282,
                    "src": "65:5:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@pythnetwork/pyth-sdk-solidity/PythStructs.sol",
              "file": "@pythnetwork/pyth-sdk-solidity/PythStructs.sol",
              "id": 324,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 547,
              "sourceUnit": 319,
              "src": "121:75:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 323,
                    "name": "PythStructs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 318,
                    "src": "129:11:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 326,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 547,
              "sourceUnit": 148,
              "src": "197:67:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 325,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "205:7:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IPriceOracle.sol",
              "file": "./interfaces/IPriceOracle.sol",
              "id": 328,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 547,
              "sourceUnit": 596,
              "src": "265:59:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 327,
                    "name": "IPriceOracle",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 595,
                    "src": "273:12:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 329,
                    "name": "Ownable",
                    "nameLocations": [
                      "350:7:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "350:7:5"
                  },
                  "id": 330,
                  "nodeType": "InheritanceSpecifier",
                  "src": "350:7:5"
                },
                {
                  "baseName": {
                    "id": 331,
                    "name": "IPriceOracle",
                    "nameLocations": [
                      "359:12:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 595,
                    "src": "359:12:5"
                  },
                  "id": 332,
                  "nodeType": "InheritanceSpecifier",
                  "src": "359:12:5"
                }
              ],
              "canonicalName": "PriceOracle",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 546,
              "linearizedBaseContracts": [
                546,
                595,
                147,
                169
              ],
              "name": "PriceOracle",
              "nameLocation": "335:11:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    594
                  ],
                  "constant": true,
                  "functionSelector": "f1a640f8",
                  "id": 335,
                  "mutability": "constant",
                  "name": "PRICE_DECIMALS",
                  "nameLocation": "400:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "378:41:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "378:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "3138",
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "417:2:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "52f1edcc",
                  "id": 337,
                  "mutability": "immutable",
                  "name": "maxOracleDelay",
                  "nameLocation": "450:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "426:38:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 336,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "426:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 338,
                    "nodeType": "StructuredDocumentation",
                    "src": "703:118:5",
                    "text": "@notice Address of the Pyth Oracle contract used for fetching price data.\n @dev Immutable after deployment."
                  },
                  "id": 341,
                  "mutability": "immutable",
                  "name": "pythOracle",
                  "nameLocation": "850:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "826:34:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPyth_$282",
                    "typeString": "contract IPyth"
                  },
                  "typeName": {
                    "id": 340,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 339,
                      "name": "IPyth",
                      "nameLocations": [
                        "826:5:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 282,
                      "src": "826:5:5"
                    },
                    "referencedDeclaration": 282,
                    "src": "826:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPyth_$282",
                      "typeString": "contract IPyth"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 342,
                    "nodeType": "StructuredDocumentation",
                    "src": "867:169:5",
                    "text": "@notice Mapping of allowed payment tokens to their corresponding Pyth Oracle price feed IDs.\n @dev Used to resolve the oracle price feed for a specific token."
                  },
                  "id": 346,
                  "mutability": "mutable",
                  "name": "oracleIDs",
                  "nameLocation": "1092:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "1041:60:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                    "typeString": "mapping(address => bytes32)"
                  },
                  "typeName": {
                    "id": 345,
                    "keyName": "token",
                    "keyNameLocation": "1057:5:5",
                    "keyType": {
                      "id": 343,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1049:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1041:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                      "typeString": "mapping(address => bytes32)"
                    },
                    "valueName": "oracleID",
                    "valueNameLocation": "1074:8:5",
                    "valueType": {
                      "id": 344,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1066:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 369,
                    "nodeType": "Block",
                    "src": "1679:90:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 359,
                            "name": "maxOracleDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "1689:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 360,
                            "name": "_maxOracleDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "1706:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "1689:32:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 362,
                        "nodeType": "ExpressionStatement",
                        "src": "1689:32:5"
                      },
                      {
                        "expression": {
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 363,
                            "name": "pythOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 341,
                            "src": "1731:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPyth_$282",
                              "typeString": "contract IPyth"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 365,
                                "name": "_pythOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 351,
                                "src": "1750:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 364,
                              "name": "IPyth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 282,
                              "src": "1744:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPyth_$282_$",
                                "typeString": "type(contract IPyth)"
                              }
                            },
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1744:18:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPyth_$282",
                              "typeString": "contract IPyth"
                            }
                          },
                          "src": "1731:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPyth_$282",
                            "typeString": "contract IPyth"
                          }
                        },
                        "id": 368,
                        "nodeType": "ExpressionStatement",
                        "src": "1731:31:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 347,
                    "nodeType": "StructuredDocumentation",
                    "src": "1326:247:5",
                    "text": "@notice Deploys the contract and sets the Pyth Oracle and contract owner.\n @dev Initializes the oracle contract and transfers ownership to the given owner address.\n @param _pythOracle Address of the deployed Pyth Oracle contract."
                  },
                  "id": 370,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 356,
                          "name": "initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 349,
                          "src": "1665:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 357,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 355,
                        "name": "Ownable",
                        "nameLocations": [
                          "1657:7:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1657:7:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1657:21:5"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1598:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 370,
                        "src": "1590:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 348,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1590:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "_pythOracle",
                        "nameLocation": "1620:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 370,
                        "src": "1612:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1612:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "_maxOracleDelay",
                        "nameLocation": "1640:15:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 370,
                        "src": "1633:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "1633:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1589:67:5"
                  },
                  "returnParameters": {
                    "id": 358,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1679:0:5"
                  },
                  "scope": 546,
                  "src": "1578:191:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    572
                  ],
                  "body": {
                    "id": 391,
                    "nodeType": "Block",
                    "src": "2115:90:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 380,
                              "name": "oracleIDs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 346,
                              "src": "2125:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                                "typeString": "mapping(address => bytes32)"
                              }
                            },
                            "id": 382,
                            "indexExpression": {
                              "id": 381,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 373,
                              "src": "2135:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2125:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 383,
                            "name": "_oracleID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "2145:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2125:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 385,
                        "nodeType": "ExpressionStatement",
                        "src": "2125:29:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 387,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 373,
                              "src": "2180:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 388,
                              "name": "_oracleID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "2188:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 386,
                            "name": "OracleSet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 564,
                            "src": "2170:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,bytes32)"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2170:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 390,
                        "nodeType": "EmitStatement",
                        "src": "2165:33:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 371,
                    "nodeType": "StructuredDocumentation",
                    "src": "2007:28:5",
                    "text": "@inheritdoc IPriceOracle"
                  },
                  "functionSelector": "5b9dfcfa",
                  "id": 392,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 378,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 377,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2105:9:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2105:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2105:9:5"
                    }
                  ],
                  "name": "setOracleID",
                  "nameLocation": "2049:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "2069:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "2061:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2061:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "_oracleID",
                        "nameLocation": "2085:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "2077:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2077:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2060:35:5"
                  },
                  "returnParameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2115:0:5"
                  },
                  "scope": 546,
                  "src": "2040:165:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 481,
                    "nodeType": "Block",
                    "src": "2521:589:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 401,
                            "name": "_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "2535:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2545:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2535:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 408,
                        "nodeType": "IfStatement",
                        "src": "2531:74:5",
                        "trueBody": {
                          "id": 407,
                          "nodeType": "Block",
                          "src": "2548:57:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 404,
                                  "name": "NegativePriceNotAllowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 557,
                                  "src": "2569:23:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2569:25:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 406,
                              "nodeType": "RevertStatement",
                              "src": "2562:32:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int32",
                            "typeString": "int32"
                          },
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 409,
                            "name": "_expo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 396,
                            "src": "2619:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int32",
                              "typeString": "int32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2627:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2619:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 479,
                          "nodeType": "Block",
                          "src": "2798:306:5",
                          "statements": [
                            {
                              "assignments": [
                                434
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 434,
                                  "mutability": "mutable",
                                  "name": "_absExpo",
                                  "nameLocation": "2820:8:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 479,
                                  "src": "2812:16:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 433,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2812:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 440,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 438,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "-",
                                    "prefix": true,
                                    "src": "2838:6:5",
                                    "subExpression": {
                                      "id": 437,
                                      "name": "_expo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 396,
                                      "src": "2839:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int32",
                                        "typeString": "int32"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int32",
                                      "typeString": "int32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int32",
                                      "typeString": "int32"
                                    }
                                  ],
                                  "id": 436,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2831:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint32_$",
                                    "typeString": "type(uint32)"
                                  },
                                  "typeName": {
                                    "id": 435,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2831:6:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2831:14:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2812:33:5"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_int32",
                                  "typeString": "int32"
                                },
                                "id": 450,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 441,
                                  "name": "_expo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 396,
                                  "src": "2863:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int32",
                                    "typeString": "int32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 449,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "-",
                                  "prefix": true,
                                  "src": "2872:30:5",
                                  "subExpression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 446,
                                            "name": "PRICE_DECIMALS",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 335,
                                            "src": "2886:14:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          ],
                                          "id": 445,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2879:6:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint32_$",
                                            "typeString": "type(uint32)"
                                          },
                                          "typeName": {
                                            "id": 444,
                                            "name": "uint32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2879:6:5",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 447,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2879:22:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      ],
                                      "id": 443,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2873:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_int32_$",
                                        "typeString": "type(int32)"
                                      },
                                      "typeName": {
                                        "id": 442,
                                        "name": "int32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2873:5:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 448,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2873:29:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int32",
                                      "typeString": "int32"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int32",
                                    "typeString": "int32"
                                  }
                                },
                                "src": "2863:39:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 477,
                                "nodeType": "Block",
                                "src": "3003:91:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 475,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 467,
                                            "name": "_price",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 394,
                                            "src": "3036:6:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            }
                                          ],
                                          "id": 466,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3028:7:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 465,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3028:7:5",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 468,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3028:15:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 474,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "3130",
                                          "id": 469,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3046:2:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "**",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 472,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 470,
                                                "name": "PRICE_DECIMALS",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 335,
                                                "src": "3053:14:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "id": 471,
                                                "name": "_absExpo",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 434,
                                                "src": "3070:8:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "3053:25:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 473,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "3052:27:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "3046:33:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3028:51:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "functionReturnParameters": 400,
                                    "id": 476,
                                    "nodeType": "Return",
                                    "src": "3021:58:5"
                                  }
                                ]
                              },
                              "id": 478,
                              "nodeType": "IfStatement",
                              "src": "2859:235:5",
                              "trueBody": {
                                "id": 464,
                                "nodeType": "Block",
                                "src": "2904:93:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 462,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 453,
                                            "name": "_price",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 394,
                                            "src": "2937:6:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            }
                                          ],
                                          "id": 452,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2929:7:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 451,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2929:7:5",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 454,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2929:15:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 460,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "3130",
                                              "id": 455,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2948:2:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                              },
                                              "value": "10"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                              "components": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 458,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 456,
                                                    "name": "_absExpo",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 434,
                                                    "src": "2955:8:5",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "-",
                                                  "rightExpression": {
                                                    "id": 457,
                                                    "name": "PRICE_DECIMALS",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 335,
                                                    "src": "2966:14:5",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint8",
                                                      "typeString": "uint8"
                                                    }
                                                  },
                                                  "src": "2955:25:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 459,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "2954:27:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "2948:33:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 461,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "2947:35:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2929:53:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "functionReturnParameters": 400,
                                    "id": 463,
                                    "nodeType": "Return",
                                    "src": "2922:60:5"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 480,
                        "nodeType": "IfStatement",
                        "src": "2615:489:5",
                        "trueBody": {
                          "id": 432,
                          "nodeType": "Block",
                          "src": "2630:162:5",
                          "statements": [
                            {
                              "assignments": [
                                413
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 413,
                                  "mutability": "mutable",
                                  "name": "posExpo",
                                  "nameLocation": "2685:7:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 432,
                                  "src": "2677:15:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 412,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2677:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 418,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 416,
                                    "name": "_expo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 396,
                                    "src": "2702:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int32",
                                      "typeString": "int32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int32",
                                      "typeString": "int32"
                                    }
                                  ],
                                  "id": 415,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2695:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint32_$",
                                    "typeString": "type(uint32)"
                                  },
                                  "typeName": {
                                    "id": 414,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2695:6:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2695:13:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2677:31:5"
                            },
                            {
                              "expression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 421,
                                      "name": "_price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 394,
                                      "src": "2737:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    ],
                                    "id": 420,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2729:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 419,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2729:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 422,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2729:15:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 428,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 423,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2748:2:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 426,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 424,
                                              "name": "PRICE_DECIMALS",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 335,
                                              "src": "2755:14:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "id": 425,
                                              "name": "posExpo",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 413,
                                              "src": "2772:7:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "2755:24:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 427,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "2754:26:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2748:32:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 429,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2747:34:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2729:52:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 400,
                              "id": 431,
                              "nodeType": "Return",
                              "src": "2722:59:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 482,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_scalePythPrice",
                  "nameLocation": "2445:15:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 394,
                        "mutability": "mutable",
                        "name": "_price",
                        "nameLocation": "2468:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "2461:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 393,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2461:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 396,
                        "mutability": "mutable",
                        "name": "_expo",
                        "nameLocation": "2482:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "2476:11:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int32",
                          "typeString": "int32"
                        },
                        "typeName": {
                          "id": 395,
                          "name": "int32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2476:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int32",
                            "typeString": "int32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2460:28:5"
                  },
                  "returnParameters": {
                    "id": 400,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 399,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "2512:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 398,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2512:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2511:9:5"
                  },
                  "scope": 546,
                  "src": "2436:674:5",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    588
                  ],
                  "body": {
                    "id": 531,
                    "nodeType": "Block",
                    "src": "3445:560:5",
                    "statements": [
                      {
                        "assignments": [
                          491
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 491,
                            "mutability": "mutable",
                            "name": "_oracleID",
                            "nameLocation": "3463:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 531,
                            "src": "3455:17:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 490,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3455:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 495,
                        "initialValue": {
                          "baseExpression": {
                            "id": 492,
                            "name": "oracleIDs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "3475:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 494,
                          "indexExpression": {
                            "id": 493,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "3485:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3475:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3455:37:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 496,
                            "name": "_oracleID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "3507:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3528:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3520:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 497,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "3520:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3520:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3507:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 507,
                        "nodeType": "IfStatement",
                        "src": "3503:83:5",
                        "trueBody": {
                          "id": 506,
                          "nodeType": "Block",
                          "src": "3532:54:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 503,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 485,
                                    "src": "3568:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 502,
                                  "name": "OracleNotExist",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 554,
                                  "src": "3553:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3553:22:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 505,
                              "nodeType": "RevertStatement",
                              "src": "3546:29:5"
                            }
                          ]
                        }
                      },
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 524,
                              "nodeType": "Block",
                              "src": "3887:72:5",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 518,
                                          "name": "price",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 515,
                                          "src": "3924:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Price_$308_memory_ptr",
                                            "typeString": "struct PythStructs.Price memory"
                                          }
                                        },
                                        "id": 519,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3930:5:5",
                                        "memberName": "price",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 301,
                                        "src": "3924:11:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int64",
                                          "typeString": "int64"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 520,
                                          "name": "price",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 515,
                                          "src": "3937:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Price_$308_memory_ptr",
                                            "typeString": "struct PythStructs.Price memory"
                                          }
                                        },
                                        "id": 521,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3943:4:5",
                                        "memberName": "expo",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 305,
                                        "src": "3937:10:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int32",
                                          "typeString": "int32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_int64",
                                          "typeString": "int64"
                                        },
                                        {
                                          "typeIdentifier": "t_int32",
                                          "typeString": "int32"
                                        }
                                      ],
                                      "id": 517,
                                      "name": "_scalePythPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 482,
                                      "src": "3908:15:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int32_$returns$_t_uint256_$",
                                        "typeString": "function (int256,int32) pure returns (uint256)"
                                      }
                                    },
                                    "id": 522,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3908:40:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "functionReturnParameters": 489,
                                  "id": 523,
                                  "nodeType": "Return",
                                  "src": "3901:47:5"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 525,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 516,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 515,
                                  "mutability": "mutable",
                                  "name": "price",
                                  "nameLocation": "3880:5:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 525,
                                  "src": "3855:30:5",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Price_$308_memory_ptr",
                                    "typeString": "struct PythStructs.Price"
                                  },
                                  "typeName": {
                                    "id": 514,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 513,
                                      "name": "PythStructs.Price",
                                      "nameLocations": [
                                        "3855:11:5",
                                        "3867:5:5"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 308,
                                      "src": "3855:17:5"
                                    },
                                    "referencedDeclaration": 308,
                                    "src": "3855:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Price_$308_storage_ptr",
                                      "typeString": "struct PythStructs.Price"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "3854:32:5"
                            },
                            "src": "3846:113:5"
                          },
                          {
                            "block": {
                              "id": 528,
                              "nodeType": "Block",
                              "src": "3966:33:5",
                              "statements": [
                                {
                                  "expression": {
                                    "hexValue": "30",
                                    "id": 526,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3987:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "functionReturnParameters": 489,
                                  "id": 527,
                                  "nodeType": "Return",
                                  "src": "3980:8:5"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 529,
                            "nodeType": "TryCatchClause",
                            "src": "3960:39:5"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 510,
                              "name": "_oracleID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 491,
                              "src": "3819:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 511,
                              "name": "maxOracleDelay",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "3830:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            ],
                            "expression": {
                              "id": 508,
                              "name": "pythOracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "3788:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPyth_$282",
                                "typeString": "contract IPyth"
                              }
                            },
                            "id": 509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3799:19:5",
                            "memberName": "getPriceNoOlderThan",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 196,
                            "src": "3788:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_struct$_Price_$308_memory_ptr_$",
                              "typeString": "function (bytes32,uint256) view external returns (struct PythStructs.Price memory)"
                            }
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3788:57:5",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Price_$308_memory_ptr",
                            "typeString": "struct PythStructs.Price memory"
                          }
                        },
                        "id": 530,
                        "nodeType": "TryStatement",
                        "src": "3784:215:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 483,
                    "nodeType": "StructuredDocumentation",
                    "src": "3341:28:5",
                    "text": "@inheritdoc IPriceOracle"
                  },
                  "functionSelector": "d02641a0",
                  "id": 532,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTokenPrice",
                  "nameLocation": "3383:13:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 486,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "3405:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "3397:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3397:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3396:16:5"
                  },
                  "returnParameters": {
                    "id": 489,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 488,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "3436:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 487,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3436:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3435:9:5"
                  },
                  "scope": 546,
                  "src": "3374:631:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    580
                  ],
                  "body": {
                    "id": 544,
                    "nodeType": "Block",
                    "src": "4110:41:5",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 540,
                            "name": "oracleIDs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "4127:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 542,
                          "indexExpression": {
                            "id": 541,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 535,
                            "src": "4137:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4127:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 539,
                        "id": 543,
                        "nodeType": "Return",
                        "src": "4120:24:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 533,
                    "nodeType": "StructuredDocumentation",
                    "src": "4011:28:5",
                    "text": "@inheritdoc IPriceOracle"
                  },
                  "functionSelector": "831cf43d",
                  "id": 545,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "oracleID",
                  "nameLocation": "4053:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 536,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 535,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "4070:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 545,
                        "src": "4062:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 534,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4062:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4061:16:5"
                  },
                  "returnParameters": {
                    "id": 539,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 538,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 545,
                        "src": "4101:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 537,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4101:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4100:9:5"
                  },
                  "scope": 546,
                  "src": "4044:107:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 547,
              "src": "326:3827:5",
              "usedErrors": [
                13,
                18,
                554,
                557
              ],
              "usedEvents": [
                24,
                564
              ]
            }
          ],
          "src": "31:4123:5"
        },
        "id": 5
      },
      "contracts/interfaces/IPriceOracle.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IPriceOracle.sol",
          "exportedSymbols": {
            "IPriceOracle": [
              595
            ]
          },
          "id": 596,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 548,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IPriceOracle",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 549,
                "nodeType": "StructuredDocumentation",
                "src": "57:191:6",
                "text": "@title IPriceOracle\n @notice Interface for a price oracle used to fetch token prices via oracle IDs.\n @dev Defines functions and events for managing and accessing token price data."
              },
              "fullyImplemented": false,
              "id": 595,
              "linearizedBaseContracts": [
                595
              ],
              "name": "IPriceOracle",
              "nameLocation": "258:12:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 550,
                    "nodeType": "StructuredDocumentation",
                    "src": "474:142:6",
                    "text": "@notice Thrown when no oracle is set for the given token address.\n @param token Address of the token without an assigned oracle ID."
                  },
                  "errorSelector": "0baf9bfb",
                  "id": 554,
                  "name": "OracleNotExist",
                  "nameLocation": "627:14:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 553,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 552,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "650:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 554,
                        "src": "642:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 551,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "642:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "641:15:6"
                  },
                  "src": "621:36:6"
                },
                {
                  "documentation": {
                    "id": 555,
                    "nodeType": "StructuredDocumentation",
                    "src": "663:85:6",
                    "text": "@notice Thrown when a negative price is returned by the oracle, which is invalid."
                  },
                  "errorSelector": "2919491b",
                  "id": 557,
                  "name": "NegativePriceNotAllowed",
                  "nameLocation": "759:23:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 556,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "782:2:6"
                  },
                  "src": "753:32:6"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 558,
                    "nodeType": "StructuredDocumentation",
                    "src": "988:205:6",
                    "text": "@notice Emitted when a new oracle ID is set for a token.\n @param token Address of the token for which the oracle ID was set.\n @param oracleID The oracle feed ID associated with the token."
                  },
                  "eventSelector": "0371a930f54882f3e9296d66c96d41e22a3892c17f1ae0482b0761630010813f",
                  "id": 564,
                  "name": "OracleSet",
                  "nameLocation": "1204:9:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 563,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 560,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1230:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 564,
                        "src": "1214:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 559,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1214:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 562,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oracleID",
                        "nameLocation": "1245:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 564,
                        "src": "1237:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 561,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1213:41:6"
                  },
                  "src": "1198:57:6"
                },
                {
                  "documentation": {
                    "id": 565,
                    "nodeType": "StructuredDocumentation",
                    "src": "1536:229:6",
                    "text": "@notice Sets the oracle ID for a specific token.\n @dev Can only be called by authorized roles (owner).\n @param _token Address of the token.\n @param _oracleID Oracle feed ID from the price oracle provider."
                  },
                  "functionSelector": "5b9dfcfa",
                  "id": 572,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setOracleID",
                  "nameLocation": "1779:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 570,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 567,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "1799:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "1791:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 566,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1791:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 569,
                        "mutability": "mutable",
                        "name": "_oracleID",
                        "nameLocation": "1815:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "1807:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 568,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1807:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1790:35:6"
                  },
                  "returnParameters": {
                    "id": 571,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1834:0:6"
                  },
                  "scope": 595,
                  "src": "1770:65:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 573,
                    "nodeType": "StructuredDocumentation",
                    "src": "1841:154:6",
                    "text": "@notice Returns the oracle ID for a given token.\n @param _token Address of the token.\n @return The oracle feed ID assigned to the token."
                  },
                  "functionSelector": "831cf43d",
                  "id": 580,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "oracleID",
                  "nameLocation": "2009:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 576,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 575,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "2026:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 580,
                        "src": "2018:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 574,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2018:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2017:16:6"
                  },
                  "returnParameters": {
                    "id": 579,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 578,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 580,
                        "src": "2057:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 577,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2057:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2056:9:6"
                  },
                  "scope": 595,
                  "src": "2000:66:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 581,
                    "nodeType": "StructuredDocumentation",
                    "src": "2072:229:6",
                    "text": "@notice Returns the current price of the token from the oracle.\n @dev Price is usually returned in 18 decimals for consistency.\n @param _token Address of the token.\n @return The latest price of the token."
                  },
                  "functionSelector": "d02641a0",
                  "id": 588,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTokenPrice",
                  "nameLocation": "2315:13:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 584,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 583,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "2337:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "2329:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 582,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2329:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2328:16:6"
                  },
                  "returnParameters": {
                    "id": 587,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 586,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "2368:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 585,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2368:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2367:9:6"
                  },
                  "scope": 595,
                  "src": "2306:71:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 589,
                    "nodeType": "StructuredDocumentation",
                    "src": "2383:236:6",
                    "text": "@notice Returns the number of decimals used for the scaled price.\n @dev This value is fixed to match the output of `_scalePythPrice`, which normalizes prices to 18 decimals.\n @return The number of decimals (always 18)."
                  },
                  "functionSelector": "f1a640f8",
                  "id": 594,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "PRICE_DECIMALS",
                  "nameLocation": "2633:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 590,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2647:2:6"
                  },
                  "returnParameters": {
                    "id": 593,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 592,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "2673:5:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 591,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2673:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2672:7:6"
                  },
                  "scope": 595,
                  "src": "2624:56:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 596,
              "src": "248:2434:6",
              "usedErrors": [
                554,
                557
              ],
              "usedEvents": [
                564
              ]
            }
          ],
          "src": "31:2652:6"
        },
        "id": 6
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"
        }
      },
      "@pythnetwork/pyth-sdk-solidity/IPyth.sol": {
        "IPyth": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "publishTime",
                  "type": "uint64"
                },
                {
                  "indexed": false,
                  "internalType": "int64",
                  "name": "price",
                  "type": "int64"
                },
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "conf",
                  "type": "uint64"
                }
              ],
              "name": "PriceFeedUpdate",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "age",
                  "type": "uint256"
                }
              ],
              "name": "getEmaPriceNoOlderThan",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "int64",
                      "name": "price",
                      "type": "int64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "conf",
                      "type": "uint64"
                    },
                    {
                      "internalType": "int32",
                      "name": "expo",
                      "type": "int32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "publishTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct PythStructs.Price",
                  "name": "price",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                }
              ],
              "name": "getEmaPriceUnsafe",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "int64",
                      "name": "price",
                      "type": "int64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "conf",
                      "type": "uint64"
                    },
                    {
                      "internalType": "int32",
                      "name": "expo",
                      "type": "int32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "publishTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct PythStructs.Price",
                  "name": "price",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "age",
                  "type": "uint256"
                }
              ],
              "name": "getPriceNoOlderThan",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "int64",
                      "name": "price",
                      "type": "int64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "conf",
                      "type": "uint64"
                    },
                    {
                      "internalType": "int32",
                      "name": "expo",
                      "type": "int32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "publishTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct PythStructs.Price",
                  "name": "price",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                }
              ],
              "name": "getPriceUnsafe",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "int64",
                      "name": "price",
                      "type": "int64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "conf",
                      "type": "uint64"
                    },
                    {
                      "internalType": "int32",
                      "name": "expo",
                      "type": "int32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "publishTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct PythStructs.Price",
                  "name": "price",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes[]",
                  "name": "updateData",
                  "type": "bytes[]"
                }
              ],
              "name": "getUpdateFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes[]",
                  "name": "updateData",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "priceIds",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint64",
                  "name": "minPublishTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "maxPublishTime",
                  "type": "uint64"
                }
              ],
              "name": "parsePriceFeedUpdates",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "id",
                      "type": "bytes32"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int64",
                          "name": "price",
                          "type": "int64"
                        },
                        {
                          "internalType": "uint64",
                          "name": "conf",
                          "type": "uint64"
                        },
                        {
                          "internalType": "int32",
                          "name": "expo",
                          "type": "int32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "publishTime",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct PythStructs.Price",
                      "name": "price",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int64",
                          "name": "price",
                          "type": "int64"
                        },
                        {
                          "internalType": "uint64",
                          "name": "conf",
                          "type": "uint64"
                        },
                        {
                          "internalType": "int32",
                          "name": "expo",
                          "type": "int32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "publishTime",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct PythStructs.Price",
                      "name": "emaPrice",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct PythStructs.PriceFeed[]",
                  "name": "priceFeeds",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes[]",
                  "name": "updateData",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "priceIds",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint64",
                  "name": "minPublishTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "maxPublishTime",
                  "type": "uint64"
                }
              ],
              "name": "parsePriceFeedUpdatesUnique",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "id",
                      "type": "bytes32"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int64",
                          "name": "price",
                          "type": "int64"
                        },
                        {
                          "internalType": "uint64",
                          "name": "conf",
                          "type": "uint64"
                        },
                        {
                          "internalType": "int32",
                          "name": "expo",
                          "type": "int32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "publishTime",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct PythStructs.Price",
                      "name": "price",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int64",
                          "name": "price",
                          "type": "int64"
                        },
                        {
                          "internalType": "uint64",
                          "name": "conf",
                          "type": "uint64"
                        },
                        {
                          "internalType": "int32",
                          "name": "expo",
                          "type": "int32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "publishTime",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct PythStructs.Price",
                      "name": "emaPrice",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct PythStructs.PriceFeed[]",
                  "name": "priceFeeds",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes[]",
                  "name": "updateData",
                  "type": "bytes[]"
                }
              ],
              "name": "updatePriceFeeds",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes[]",
                  "name": "updateData",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "priceIds",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint64[]",
                  "name": "publishTimes",
                  "type": "uint64[]"
                }
              ],
              "name": "updatePriceFeedsIfNecessary",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getEmaPriceNoOlderThan(bytes32,uint256)": "711a2e28",
              "getEmaPriceUnsafe(bytes32)": "9474f45b",
              "getPriceNoOlderThan(bytes32,uint256)": "a4ae35e0",
              "getPriceUnsafe(bytes32)": "96834ad3",
              "getUpdateFee(bytes[])": "d47eed45",
              "parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)": "4716e9c5",
              "parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)": "accca7f9",
              "updatePriceFeeds(bytes[])": "ef9e5e28",
              "updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])": "b9256d28"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"publishTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"}],\"name\":\"PriceFeedUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"getEmaPriceNoOlderThan\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getEmaPriceUnsafe\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"getPriceNoOlderThan\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getPriceUnsafe\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"getUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPublishTime\",\"type\":\"uint64\"}],\"name\":\"parsePriceFeedUpdates\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPublishTime\",\"type\":\"uint64\"}],\"name\":\"parsePriceFeedUpdatesUnique\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"updatePriceFeeds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64[]\",\"name\":\"publishTimes\",\"type\":\"uint64[]\"}],\"name\":\"updatePriceFeedsIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Pyth Data Association\",\"details\":\"Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\",\"events\":{\"PriceFeedUpdate(bytes32,uint64,int64,uint64)\":{\"details\":\"Emitted when the price feed with `id` has received a fresh update.\",\"params\":{\"conf\":\"Confidence interval of the given price update.\",\"id\":\"The Pyth Price Feed ID.\",\"price\":\"Price of the given price update.\",\"publishTime\":\"Publish time of the given price update.\"}}},\"kind\":\"dev\",\"methods\":{\"getEmaPriceNoOlderThan(bytes32,uint256)\":{\"details\":\"This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getEmaPriceUnsafe(bytes32)\":{\"details\":\"This function returns the same price as `getEmaPrice` in the case where the price is available. However, if the price is not recent this function returns the latest available price. The returned price can be from arbitrarily far in the past; this function makes no guarantees that the returned price is recent or useful for any particular application. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getPriceNoOlderThan(bytes32,uint256)\":{\"details\":\"This function is a sanity-checked version of `getPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getPriceUnsafe(bytes32)\":{\"details\":\"This function returns the most recent price update in this contract without any recency checks. This function is unsafe as the returned price update may be arbitrarily far in the past. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use `getPriceNoOlderThan`.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getUpdateFee(bytes[])\":{\"params\":{\"updateData\":\"Array of price update data.\"},\"returns\":{\"feeAmount\":\"The required fee in Wei.\"}},\"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range.\",\"params\":{\"maxPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range and uniqueness condition.\",\"params\":{\"maxPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"updatePriceFeeds(bytes[])\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid.\",\"params\":{\"updateData\":\"Array of price update data.\"}},\"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\":{\"details\":\"Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\",\"params\":{\"priceIds\":\"Array of price ids.\",\"publishTimes\":\"Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`\",\"updateData\":\"Array of price update data.\"}}},\"title\":\"Consume prices from the Pyth Network (https://pyth.network/).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getEmaPriceNoOlderThan(bytes32,uint256)\":{\"notice\":\"Returns the exponentially-weighted moving average price that is no older than `age` seconds of the current time.\"},\"getEmaPriceUnsafe(bytes32)\":{\"notice\":\"Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\"},\"getPriceNoOlderThan(bytes32,uint256)\":{\"notice\":\"Returns the price that is no older than `age` seconds of the current time.\"},\"getPriceUnsafe(bytes32)\":{\"notice\":\"Returns the price of a price feed without any sanity checks.\"},\"getUpdateFee(bytes[])\":{\"notice\":\"Returns the required fee to update an array of price updates.\"},\"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\":{\"notice\":\"Parse `updateData` and return price feeds of the given `priceIds` if they are all published within `minPublishTime` and `maxPublishTime`. You can use this method if you want to use a Pyth price at a fixed time and not the most recent price; otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they are more recent than the current stored prices. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array.\"},\"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\":{\"notice\":\"Similar to `parsePriceFeedUpdates` but ensures the updates returned are the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp, this method will return the first update. This method may store the price updates on-chain, if they are more recent than the current stored prices.\"},\"updatePriceFeeds(bytes[])\":{\"notice\":\"Update price feeds with given update messages. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. Prices will be updated if they are more recent than the current stored prices. The call will succeed even if the update is not the most recent.\"},\"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\":{\"notice\":\"Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have a newer or equal publish time than the given publish time, it will reject the transaction to save gas. Otherwise, it calls updatePriceFeeds method to update the prices.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":\"IPyth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":{\"keccak256\":\"0x217532ece69b8e472a6260b740c34aebfb5a299bbfed6392cf0458ed368be7ab\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02d1b71006ccdfd6402a2b72ea197babbd1b54c26a70ebb76a114f0ae8352f08\",\"dweb:/ipfs/QmbqfuvwriG3AEwYEwupUaQKgfxRYK6Qui99o6wQysPoP3\"]},\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0x7ca8e03315d4516d6833c425a52c43e8cacf2077492074d2d36ae5c17899c9c8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ad1c69d157eccb09ce248e1ec021f2e58b61dd36160f5be3973a7bea4a899f64\",\"dweb:/ipfs/QmW1yXsDrMsuQKxtZanSZXpyUW2QwnCKVoCjS5fC3NoSVY\"]},\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0xade221177dda98ebd194c363f264ceea125bde0e6a7a72f7b54da3ac60316894\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a404dbbc64183995326c345cae27601d37c783b3d9030c8dc0ab4943fa2bf1da\",\"dweb:/ipfs/QmfNFesQffYisafmJFbKHxVFSD8fY49X1z9f8N7qtfW8AX\"]}},\"version\":1}"
        }
      },
      "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol": {
        "IPythEvents": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "publishTime",
                  "type": "uint64"
                },
                {
                  "indexed": false,
                  "internalType": "int64",
                  "name": "price",
                  "type": "int64"
                },
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "conf",
                  "type": "uint64"
                }
              ],
              "name": "PriceFeedUpdate",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"publishTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"}],\"name\":\"PriceFeedUpdate\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This interface can be used for listening to the updates for off-chain and testing purposes.\",\"events\":{\"PriceFeedUpdate(bytes32,uint64,int64,uint64)\":{\"details\":\"Emitted when the price feed with `id` has received a fresh update.\",\"params\":{\"conf\":\"Confidence interval of the given price update.\",\"id\":\"The Pyth Price Feed ID.\",\"price\":\"Price of the given price update.\",\"publishTime\":\"Publish time of the given price update.\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"IPythEvents contains the events that Pyth contract emits.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":\"IPythEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0x7ca8e03315d4516d6833c425a52c43e8cacf2077492074d2d36ae5c17899c9c8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ad1c69d157eccb09ce248e1ec021f2e58b61dd36160f5be3973a7bea4a899f64\",\"dweb:/ipfs/QmW1yXsDrMsuQKxtZanSZXpyUW2QwnCKVoCjS5fC3NoSVY\"]}},\"version\":1}"
        }
      },
      "@pythnetwork/pyth-sdk-solidity/PythStructs.sol": {
        "PythStructs": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220d41c321b98bf4dfe21ac01b640aad68f648318b0ecfd443cd498459ad945a8a264736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SHR ORIGIN SHL SWAP9 0xBF 0x4D INVALID 0x21 0xAC ADD 0xB6 BLOCKHASH 0xAA 0xD6 DUP16 PUSH5 0x8318B0ECFD PREVRANDAO EXTCODECOPY 0xD4 SWAP9 GASLIMIT SWAP11 0xD9 GASLIMIT 0xA8 LOG2 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "64:1111:4:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600080fdfea2646970667358221220d41c321b98bf4dfe21ac01b640aad68f648318b0ecfd443cd498459ad945a8a264736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SHR ORIGIN SHL SWAP9 0xBF 0x4D INVALID 0x21 0xAC ADD 0xB6 BLOCKHASH 0xAA 0xD6 DUP16 PUSH5 0x8318B0ECFD PREVRANDAO EXTCODECOPY 0xD4 SWAP9 GASLIMIT SWAP11 0xD9 GASLIMIT 0xA8 LOG2 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "64:1111:4:-:0;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":\"PythStructs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0xade221177dda98ebd194c363f264ceea125bde0e6a7a72f7b54da3ac60316894\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a404dbbc64183995326c345cae27601d37c783b3d9030c8dc0ab4943fa2bf1da\",\"dweb:/ipfs/QmfNFesQffYisafmJFbKHxVFSD8fY49X1z9f8N7qtfW8AX\"]}},\"version\":1}"
        }
      },
      "contracts/PriceOracle.sol": {
        "PriceOracle": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "initialOwner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_pythOracle",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "_maxOracleDelay",
                  "type": "uint16"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "NegativePriceNotAllowed",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "OracleNotExist",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "oracleID",
                  "type": "bytes32"
                }
              ],
              "name": "OracleSet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "PRICE_DECIMALS",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "name": "getTokenPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxOracleDelay",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "name": "oracleID",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "_oracleID",
                  "type": "bytes32"
                }
              ],
              "name": "setOracleID",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_370": {
                  "entryPoint": null,
                  "id": 370,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_50": {
                  "entryPoint": null,
                  "id": 50,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_transferOwnership_146": {
                  "entryPoint": 129,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 209,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_addresst_uint16_fromMemory": {
                  "entryPoint": 237,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:852:7",
                    "nodeType": "YulBlock",
                    "src": "0:852:7",
                    "statements": [
                      {
                        "nativeSrc": "6:3:7",
                        "nodeType": "YulBlock",
                        "src": "6:3:7",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "74:117:7",
                          "nodeType": "YulBlock",
                          "src": "74:117:7",
                          "statements": [
                            {
                              "nativeSrc": "84:22:7",
                              "nodeType": "YulAssignment",
                              "src": "84:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "99:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "99:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "93:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "93:5:7"
                                },
                                "nativeSrc": "93:13:7",
                                "nodeType": "YulFunctionCall",
                                "src": "93:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "84:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "84:5:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "169:16:7",
                                "nodeType": "YulBlock",
                                "src": "169:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "178:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "178:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "181:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "181:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "171:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "171:6:7"
                                      },
                                      "nativeSrc": "171:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "171:12:7"
                                    },
                                    "nativeSrc": "171:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "171:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "128:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "128:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "139:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "139:5:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "154:3:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "154:3:7",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "159:1:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "159:1:7",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "150:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "150:3:7"
                                                },
                                                "nativeSrc": "150:11:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "150:11:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "163:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "163:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "146:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "146:3:7"
                                            },
                                            "nativeSrc": "146:19:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "146:19:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "135:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "135:3:7"
                                        },
                                        "nativeSrc": "135:31:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "135:31:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "125:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "125:2:7"
                                    },
                                    "nativeSrc": "125:42:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "125:42:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "118:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "118:6:7"
                                },
                                "nativeSrc": "118:50:7",
                                "nodeType": "YulFunctionCall",
                                "src": "118:50:7"
                              },
                              "nativeSrc": "115:70:7",
                              "nodeType": "YulIf",
                              "src": "115:70:7"
                            }
                          ]
                        },
                        "name": "abi_decode_address_fromMemory",
                        "nativeSrc": "14:177:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "53:6:7",
                            "nodeType": "YulTypedName",
                            "src": "53:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nativeSrc": "64:5:7",
                            "nodeType": "YulTypedName",
                            "src": "64:5:7",
                            "type": ""
                          }
                        ],
                        "src": "14:177:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "310:332:7",
                          "nodeType": "YulBlock",
                          "src": "310:332:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "356:16:7",
                                "nodeType": "YulBlock",
                                "src": "356:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "365:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "365:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "368:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "368:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "358:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "358:6:7"
                                      },
                                      "nativeSrc": "358:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "358:12:7"
                                    },
                                    "nativeSrc": "358:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "358:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "331:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "331:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "340:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "340:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "327:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "327:3:7"
                                    },
                                    "nativeSrc": "327:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "327:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "352:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "352:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "323:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "323:3:7"
                                },
                                "nativeSrc": "323:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "323:32:7"
                              },
                              "nativeSrc": "320:52:7",
                              "nodeType": "YulIf",
                              "src": "320:52:7"
                            },
                            {
                              "nativeSrc": "381:50:7",
                              "nodeType": "YulAssignment",
                              "src": "381:50:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "421:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "421:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_fromMemory",
                                  "nativeSrc": "391:29:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "391:29:7"
                                },
                                "nativeSrc": "391:40:7",
                                "nodeType": "YulFunctionCall",
                                "src": "391:40:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "381:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "381:6:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "440:59:7",
                              "nodeType": "YulAssignment",
                              "src": "440:59:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "484:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "484:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "495:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "495:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "480:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "480:3:7"
                                    },
                                    "nativeSrc": "480:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "480:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_fromMemory",
                                  "nativeSrc": "450:29:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "450:29:7"
                                },
                                "nativeSrc": "450:49:7",
                                "nodeType": "YulFunctionCall",
                                "src": "450:49:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "440:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "440:6:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "508:38:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "508:38:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "531:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "531:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "542:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "542:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "527:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "527:3:7"
                                    },
                                    "nativeSrc": "527:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "527:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "521:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "521:5:7"
                                },
                                "nativeSrc": "521:25:7",
                                "nodeType": "YulFunctionCall",
                                "src": "521:25:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "512:5:7",
                                  "nodeType": "YulTypedName",
                                  "src": "512:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "596:16:7",
                                "nodeType": "YulBlock",
                                "src": "596:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "605:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "605:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "608:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "608:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "598:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "598:6:7"
                                      },
                                      "nativeSrc": "598:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "598:12:7"
                                    },
                                    "nativeSrc": "598:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "598:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "568:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "568:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "579:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "579:5:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "586:6:7",
                                            "nodeType": "YulLiteral",
                                            "src": "586:6:7",
                                            "type": "",
                                            "value": "0xffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "575:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "575:3:7"
                                        },
                                        "nativeSrc": "575:18:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "575:18:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "565:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "565:2:7"
                                    },
                                    "nativeSrc": "565:29:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "565:29:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "558:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "558:6:7"
                                },
                                "nativeSrc": "558:37:7",
                                "nodeType": "YulFunctionCall",
                                "src": "558:37:7"
                              },
                              "nativeSrc": "555:57:7",
                              "nodeType": "YulIf",
                              "src": "555:57:7"
                            },
                            {
                              "nativeSrc": "621:15:7",
                              "nodeType": "YulAssignment",
                              "src": "621:15:7",
                              "value": {
                                "name": "value",
                                "nativeSrc": "631:5:7",
                                "nodeType": "YulIdentifier",
                                "src": "631:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "621:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "621:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint16_fromMemory",
                        "nativeSrc": "196:446:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "260:9:7",
                            "nodeType": "YulTypedName",
                            "src": "260:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "271:7:7",
                            "nodeType": "YulTypedName",
                            "src": "271:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "283:6:7",
                            "nodeType": "YulTypedName",
                            "src": "283:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "291:6:7",
                            "nodeType": "YulTypedName",
                            "src": "291:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "299:6:7",
                            "nodeType": "YulTypedName",
                            "src": "299:6:7",
                            "type": ""
                          }
                        ],
                        "src": "196:446:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "748:102:7",
                          "nodeType": "YulBlock",
                          "src": "748:102:7",
                          "statements": [
                            {
                              "nativeSrc": "758:26:7",
                              "nodeType": "YulAssignment",
                              "src": "758:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "770:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "770:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "781:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "781:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "766:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "766:3:7"
                                },
                                "nativeSrc": "766:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "766:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "758:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "758:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "800:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "800:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "815:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "815:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "831:3:7",
                                                "nodeType": "YulLiteral",
                                                "src": "831:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "836:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "836:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "827:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "827:3:7"
                                            },
                                            "nativeSrc": "827:11:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "827:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "840:1:7",
                                            "nodeType": "YulLiteral",
                                            "src": "840:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "823:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "823:3:7"
                                        },
                                        "nativeSrc": "823:19:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "823:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "811:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "811:3:7"
                                    },
                                    "nativeSrc": "811:32:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "811:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "793:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "793:6:7"
                                },
                                "nativeSrc": "793:51:7",
                                "nodeType": "YulFunctionCall",
                                "src": "793:51:7"
                              },
                              "nativeSrc": "793:51:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "793:51:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "647:203:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "717:9:7",
                            "nodeType": "YulTypedName",
                            "src": "717:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "728:6:7",
                            "nodeType": "YulTypedName",
                            "src": "728:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "739:4:7",
                            "nodeType": "YulTypedName",
                            "src": "739:4:7",
                            "type": ""
                          }
                        ],
                        "src": "647:203:7"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint16_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n        value2 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60c060405234801561001057600080fd5b506040516108ca3803806108ca83398101604081905261002f916100ed565b826001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006781610081565b5061ffff166080526001600160a01b031660a0525061013b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e857600080fd5b919050565b60008060006060848603121561010257600080fd5b61010b846100d1565b9250610119602085016100d1565b9150604084015161ffff8116811461013057600080fd5b809150509250925092565b60805160a05161076461016660003960006102770152600081816092015261025001526107646000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610120578063d02641a01461013b578063f1a640f81461014e578063f2fde38b1461016857600080fd5b806352f1edcc1461008d5780635b9dfcfa146100cc578063715018a6146100e1578063831cf43d146100e9575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff90911681526020015b60405180910390f35b6100df6100da36600461049a565b61017b565b005b6100df6101dc565b6101126100f73660046104c4565b6001600160a01b031660009081526001602052604090205490565b6040519081526020016100c3565b6000546040516001600160a01b0390911681526020016100c3565b6101126101493660046104c4565b6101f0565b610156601281565b60405160ff90911681526020016100c3565b6100df6101763660046104c4565b61030c565b61018361034a565b6001600160a01b03821660008181526001602052604090819020839055517f0371a930f54882f3e9296d66c96d41e22a3892c17f1ae0482b0761630010813f906101d09084815260200190565b60405180910390a25050565b6101e461034a565b6101ee6000610377565b565b6001600160a01b0381166000908152600160205260408120548061023757604051630baf9bfb60e01b81526001600160a01b03841660048201526024015b60405180910390fd5b60405163052571af60e51b81526004810182905261ffff7f00000000000000000000000000000000000000000000000000000000000000001660248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a4ae35e090604401608060405180830381865afa9250505080156102e2575060408051601f3d908101601f191682019092526102df91810190610510565b60015b6102ef5750600092915050565b610304816000015160070b82604001516103c7565b949350505050565b61031461034a565b6001600160a01b03811661033e57604051631e4fbdf760e01b81526000600482015260240161022e565b61034781610377565b50565b6000546001600160a01b031633146101ee5760405163118cdaa760e01b815233600482015260240161022e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083136103e957604051632919491b60e01b815260040160405180910390fd5b60008260030b13156104245763ffffffff82166104078160126105b9565b61041290600a6106b3565b61041c90856106bf565b915050610478565b600061042f836106e1565b63ffffffff16905061044160126106e1565b60030b8360030b1361046d57610458601282610704565b61046390600a6106b3565b61041c9085610717565b610458816012610704565b92915050565b80356001600160a01b038116811461049557600080fd5b919050565b600080604083850312156104ad57600080fd5b6104b68361047e565b946020939093013593505050565b6000602082840312156104d657600080fd5b6104df8261047e565b9392505050565b805167ffffffffffffffff8116811461049557600080fd5b8051600381900b811461049557600080fd5b6000608082840312801561052357600080fd5b600090506040516080810181811067ffffffffffffffff8211171561055657634e487b7160e01b83526041600452602483fd5b6040528351600781900b811461056a578283fd5b8152610578602085016104e6565b6020820152610589604085016104fe565b604082015260609384015193810193909352509092915050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610478576104786105a3565b6001815b6001841115610607578085048111156105eb576105eb6105a3565b60018416156105f957908102905b60019390931c9280026105d0565b935093915050565b60008261061e57506001610478565b8161062b57506000610478565b8160018114610641576002811461064b57610667565b6001915050610478565b60ff84111561065c5761065c6105a3565b50506001821b610478565b5060208310610133831016604e8410600b841016171561068a575081810a610478565b61069760001984846105cc565b80600019048211156106ab576106ab6105a3565b029392505050565b60006104df838361060f565b6000826106dc57634e487b7160e01b600052601260045260246000fd5b500490565b60008160030b637fffffff1981036106fb576106fb6105a3565b60000392915050565b81810381811115610478576104786105a3565b8082028115828204841417610478576104786105a356fea2646970667358221220e636d77712b896990d7dbb7c1a357f8947ae1ba179acfc5ad0f8d285fb0a645664736f6c634300081c0033",
              "opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x8CA CODESIZE SUB DUP1 PUSH2 0x8CA DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xED JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67 DUP2 PUSH2 0x81 JUMP JUMPDEST POP PUSH2 0xFFFF AND PUSH1 0x80 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 MSTORE POP PUSH2 0x13B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10B DUP5 PUSH2 0xD1 JUMP JUMPDEST SWAP3 POP PUSH2 0x119 PUSH1 0x20 DUP6 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x764 PUSH2 0x166 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x277 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0x92 ADD MSTORE PUSH2 0x250 ADD MSTORE PUSH2 0x764 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xD02641A0 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0xF1A640F8 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52F1EDCC EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x5B9DFCFA EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x831CF43D EQ PUSH2 0xE9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB4 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x17B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH2 0x1DC JUMP JUMPDEST PUSH2 0x112 PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x112 PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C4 JUMP JUMPDEST PUSH2 0x1F0 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C4 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH2 0x183 PUSH2 0x34A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0x371A930F54882F3E9296D66C96D41E22A3892C17F1AE0482B0761630010813F SWAP1 PUSH2 0x1D0 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x34A JUMP JUMPDEST PUSH2 0x1EE PUSH1 0x0 PUSH2 0x377 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x237 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBAF9BFB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x52571AF PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xFFFF PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA4AE35E0 SWAP1 PUSH1 0x44 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2E2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2DF SWAP2 DUP2 ADD SWAP1 PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2EF JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x304 DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x7 SIGNEXTEND DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x3C7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x314 PUSH2 0x34A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x33E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x22E JUMP JUMPDEST PUSH2 0x347 DUP2 PUSH2 0x377 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EE JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x22E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SGT PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2919491B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 SIGNEXTEND SGT ISZERO PUSH2 0x424 JUMPI PUSH4 0xFFFFFFFF DUP3 AND PUSH2 0x407 DUP2 PUSH1 0x12 PUSH2 0x5B9 JUMP JUMPDEST PUSH2 0x412 SWAP1 PUSH1 0xA PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x41C SWAP1 DUP6 PUSH2 0x6BF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x478 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F DUP4 PUSH2 0x6E1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH2 0x441 PUSH1 0x12 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x3 SIGNEXTEND DUP4 PUSH1 0x3 SIGNEXTEND SGT PUSH2 0x46D JUMPI PUSH2 0x458 PUSH1 0x12 DUP3 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x463 SWAP1 PUSH1 0xA PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x41C SWAP1 DUP6 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x458 DUP2 PUSH1 0x12 PUSH2 0x704 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B6 DUP4 PUSH2 0x47E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4DF DUP3 PUSH2 0x47E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x3 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT DUP1 ISZERO PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x556 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP4 MLOAD PUSH1 0x7 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x56A JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MSTORE PUSH2 0x578 PUSH1 0x20 DUP6 ADD PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x589 PUSH1 0x40 DUP6 ADD PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 SWAP4 DUP5 ADD MLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x478 JUMPI PUSH2 0x478 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x607 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x5EB JUMPI PUSH2 0x5EB PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x5F9 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x5D0 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x61E JUMPI POP PUSH1 0x1 PUSH2 0x478 JUMP JUMPDEST DUP2 PUSH2 0x62B JUMPI POP PUSH1 0x0 PUSH2 0x478 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x641 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x64B JUMPI PUSH2 0x667 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x478 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x65C JUMPI PUSH2 0x65C PUSH2 0x5A3 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x478 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x68A JUMPI POP DUP2 DUP2 EXP PUSH2 0x478 JUMP JUMPDEST PUSH2 0x697 PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x5CC JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x6AB JUMPI PUSH2 0x6AB PUSH2 0x5A3 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DF DUP4 DUP4 PUSH2 0x60F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x6DC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 SIGNEXTEND PUSH4 0x7FFFFFFF NOT DUP2 SUB PUSH2 0x6FB JUMPI PUSH2 0x6FB PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 SUB SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x478 JUMPI PUSH2 0x478 PUSH2 0x5A3 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x478 JUMPI PUSH2 0x478 PUSH2 0x5A3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 CALLDATASIZE 0xD7 PUSH24 0x12B896990D7DBB7C1A357F8947AE1BA179ACFC5AD0F8D285 0xFB EXP PUSH5 0x5664736F6C PUSH4 0x4300081C STOP CALLER ",
              "sourceMap": "326:3827:5:-:0;;;1578:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1665:12;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;793:51:7;766:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1689:32:5::1;;;::::0;-1:-1:-1;;;;;1731:31:5::1;;::::0;-1:-1:-1;326:3827:5;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:7:-;93:13;;-1:-1:-1;;;;;135:31:7;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:446::-;283:6;291;299;352:2;340:9;331:7;327:23;323:32;320:52;;;368:1;365;358:12;320:52;391:40;421:9;391:40;:::i;:::-;381:50;;450:49;495:2;484:9;480:18;450:49;:::i;:::-;440:59;;542:2;531:9;527:18;521:25;586:6;579:5;575:18;568:5;565:29;555:57;;608:1;605;598:12;555:57;631:5;621:15;;;196:446;;;;;:::o;647:203::-;326:3827:5;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@PRICE_DECIMALS_335": {
                  "entryPoint": null,
                  "id": 335,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_checkOwner_84": {
                  "entryPoint": 842,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_159": {
                  "entryPoint": null,
                  "id": 159,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_scalePythPrice_482": {
                  "entryPoint": 967,
                  "id": 482,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@_transferOwnership_146": {
                  "entryPoint": 887,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@getTokenPrice_532": {
                  "entryPoint": 496,
                  "id": 532,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@maxOracleDelay_337": {
                  "entryPoint": null,
                  "id": 337,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@oracleID_545": {
                  "entryPoint": null,
                  "id": 545,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@owner_67": {
                  "entryPoint": null,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@renounceOwnership_98": {
                  "entryPoint": 476,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@setOracleID_392": {
                  "entryPoint": 379,
                  "id": 392,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@transferOwnership_126": {
                  "entryPoint": 780,
                  "id": 126,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 1150,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_int32_fromMemory": {
                  "entryPoint": 1278,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 1220,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_bytes32": {
                  "entryPoint": 1178,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_struct$_Price_$308_memory_ptr_fromMemory": {
                  "entryPoint": 1296,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint64_fromMemory": {
                  "entryPoint": 1254,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32_t_uint16__to_t_bytes32_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 1465,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 1727,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_helper": {
                  "entryPoint": 1484,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 2
                },
                "checked_exp_t_uint256_t_uint256": {
                  "entryPoint": 1715,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_unsigned": {
                  "entryPoint": 1551,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 1815,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 1796,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "negate_t_int32": {
                  "entryPoint": 1761,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 1443,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:5586:7",
                    "nodeType": "YulBlock",
                    "src": "0:5586:7",
                    "statements": [
                      {
                        "nativeSrc": "6:3:7",
                        "nodeType": "YulBlock",
                        "src": "6:3:7",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "113:89:7",
                          "nodeType": "YulBlock",
                          "src": "113:89:7",
                          "statements": [
                            {
                              "nativeSrc": "123:26:7",
                              "nodeType": "YulAssignment",
                              "src": "123:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "135:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "135:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "146:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "146:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "131:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "131:3:7"
                                },
                                "nativeSrc": "131:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "131:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "123:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "123:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "165:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "165:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "180:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "180:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "188:6:7",
                                        "nodeType": "YulLiteral",
                                        "src": "188:6:7",
                                        "type": "",
                                        "value": "0xffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "176:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "176:3:7"
                                    },
                                    "nativeSrc": "176:19:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "176:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "158:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "158:6:7"
                                },
                                "nativeSrc": "158:38:7",
                                "nodeType": "YulFunctionCall",
                                "src": "158:38:7"
                              },
                              "nativeSrc": "158:38:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "158:38:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
                        "nativeSrc": "14:188:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "82:9:7",
                            "nodeType": "YulTypedName",
                            "src": "82:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "93:6:7",
                            "nodeType": "YulTypedName",
                            "src": "93:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "104:4:7",
                            "nodeType": "YulTypedName",
                            "src": "104:4:7",
                            "type": ""
                          }
                        ],
                        "src": "14:188:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "256:124:7",
                          "nodeType": "YulBlock",
                          "src": "256:124:7",
                          "statements": [
                            {
                              "nativeSrc": "266:29:7",
                              "nodeType": "YulAssignment",
                              "src": "266:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "288:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "288:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "275:12:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "275:12:7"
                                },
                                "nativeSrc": "275:20:7",
                                "nodeType": "YulFunctionCall",
                                "src": "275:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "266:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "266:5:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "358:16:7",
                                "nodeType": "YulBlock",
                                "src": "358:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "367:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "367:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "370:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "370:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "360:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "360:6:7"
                                      },
                                      "nativeSrc": "360:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "360:12:7"
                                    },
                                    "nativeSrc": "360:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "360:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "317:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "317:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "328:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "328:5:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "343:3:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "343:3:7",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "348:1:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "348:1:7",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "339:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "339:3:7"
                                                },
                                                "nativeSrc": "339:11:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "339:11:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "352:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "352:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "335:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "335:3:7"
                                            },
                                            "nativeSrc": "335:19:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "335:19:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "324:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "324:3:7"
                                        },
                                        "nativeSrc": "324:31:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "324:31:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "314:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "314:2:7"
                                    },
                                    "nativeSrc": "314:42:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "314:42:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "307:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "307:6:7"
                                },
                                "nativeSrc": "307:50:7",
                                "nodeType": "YulFunctionCall",
                                "src": "307:50:7"
                              },
                              "nativeSrc": "304:70:7",
                              "nodeType": "YulIf",
                              "src": "304:70:7"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nativeSrc": "207:173:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "235:6:7",
                            "nodeType": "YulTypedName",
                            "src": "235:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nativeSrc": "246:5:7",
                            "nodeType": "YulTypedName",
                            "src": "246:5:7",
                            "type": ""
                          }
                        ],
                        "src": "207:173:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "472:167:7",
                          "nodeType": "YulBlock",
                          "src": "472:167:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "518:16:7",
                                "nodeType": "YulBlock",
                                "src": "518:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "527:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "527:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "530:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "530:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "520:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "520:6:7"
                                      },
                                      "nativeSrc": "520:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "520:12:7"
                                    },
                                    "nativeSrc": "520:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "520:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "493:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "493:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "502:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "502:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "489:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "489:3:7"
                                    },
                                    "nativeSrc": "489:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "489:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "514:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "514:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "485:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "485:3:7"
                                },
                                "nativeSrc": "485:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "485:32:7"
                              },
                              "nativeSrc": "482:52:7",
                              "nodeType": "YulIf",
                              "src": "482:52:7"
                            },
                            {
                              "nativeSrc": "543:39:7",
                              "nodeType": "YulAssignment",
                              "src": "543:39:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "572:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "572:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "553:18:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "553:18:7"
                                },
                                "nativeSrc": "553:29:7",
                                "nodeType": "YulFunctionCall",
                                "src": "553:29:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "543:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "543:6:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "591:42:7",
                              "nodeType": "YulAssignment",
                              "src": "591:42:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "618:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "618:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "629:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "629:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "614:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "614:3:7"
                                    },
                                    "nativeSrc": "614:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "614:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "601:12:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "601:12:7"
                                },
                                "nativeSrc": "601:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "601:32:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "591:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "591:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_bytes32",
                        "nativeSrc": "385:254:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "430:9:7",
                            "nodeType": "YulTypedName",
                            "src": "430:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "441:7:7",
                            "nodeType": "YulTypedName",
                            "src": "441:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "453:6:7",
                            "nodeType": "YulTypedName",
                            "src": "453:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "461:6:7",
                            "nodeType": "YulTypedName",
                            "src": "461:6:7",
                            "type": ""
                          }
                        ],
                        "src": "385:254:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "714:116:7",
                          "nodeType": "YulBlock",
                          "src": "714:116:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "760:16:7",
                                "nodeType": "YulBlock",
                                "src": "760:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "769:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "769:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "772:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "772:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "762:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "762:6:7"
                                      },
                                      "nativeSrc": "762:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "762:12:7"
                                    },
                                    "nativeSrc": "762:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "762:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "735:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "735:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "744:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "744:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "731:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "731:3:7"
                                    },
                                    "nativeSrc": "731:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "731:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "756:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "756:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "727:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "727:3:7"
                                },
                                "nativeSrc": "727:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "727:32:7"
                              },
                              "nativeSrc": "724:52:7",
                              "nodeType": "YulIf",
                              "src": "724:52:7"
                            },
                            {
                              "nativeSrc": "785:39:7",
                              "nodeType": "YulAssignment",
                              "src": "785:39:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "814:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "814:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "795:18:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "795:18:7"
                                },
                                "nativeSrc": "795:29:7",
                                "nodeType": "YulFunctionCall",
                                "src": "795:29:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "785:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "785:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "644:186:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "680:9:7",
                            "nodeType": "YulTypedName",
                            "src": "680:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "691:7:7",
                            "nodeType": "YulTypedName",
                            "src": "691:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "703:6:7",
                            "nodeType": "YulTypedName",
                            "src": "703:6:7",
                            "type": ""
                          }
                        ],
                        "src": "644:186:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "936:76:7",
                          "nodeType": "YulBlock",
                          "src": "936:76:7",
                          "statements": [
                            {
                              "nativeSrc": "946:26:7",
                              "nodeType": "YulAssignment",
                              "src": "946:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "958:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "958:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "969:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "969:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "954:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "954:3:7"
                                },
                                "nativeSrc": "954:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "954:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "946:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "946:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "988:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "988:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "999:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "999:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "981:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "981:6:7"
                                },
                                "nativeSrc": "981:25:7",
                                "nodeType": "YulFunctionCall",
                                "src": "981:25:7"
                              },
                              "nativeSrc": "981:25:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "981:25:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nativeSrc": "835:177:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "905:9:7",
                            "nodeType": "YulTypedName",
                            "src": "905:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "916:6:7",
                            "nodeType": "YulTypedName",
                            "src": "916:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "927:4:7",
                            "nodeType": "YulTypedName",
                            "src": "927:4:7",
                            "type": ""
                          }
                        ],
                        "src": "835:177:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1118:102:7",
                          "nodeType": "YulBlock",
                          "src": "1118:102:7",
                          "statements": [
                            {
                              "nativeSrc": "1128:26:7",
                              "nodeType": "YulAssignment",
                              "src": "1128:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1140:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1140:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1151:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "1151:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1136:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1136:3:7"
                                },
                                "nativeSrc": "1136:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1136:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1128:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1128:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1170:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1170:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "1185:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1185:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1201:3:7",
                                                "nodeType": "YulLiteral",
                                                "src": "1201:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1206:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "1206:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "1197:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "1197:3:7"
                                            },
                                            "nativeSrc": "1197:11:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1197:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1210:1:7",
                                            "nodeType": "YulLiteral",
                                            "src": "1210:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "1193:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "1193:3:7"
                                        },
                                        "nativeSrc": "1193:19:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1193:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1181:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1181:3:7"
                                    },
                                    "nativeSrc": "1181:32:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1181:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1163:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1163:6:7"
                                },
                                "nativeSrc": "1163:51:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1163:51:7"
                              },
                              "nativeSrc": "1163:51:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1163:51:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "1017:203:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1087:9:7",
                            "nodeType": "YulTypedName",
                            "src": "1087:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1098:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1098:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1109:4:7",
                            "nodeType": "YulTypedName",
                            "src": "1109:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1017:203:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1326:76:7",
                          "nodeType": "YulBlock",
                          "src": "1326:76:7",
                          "statements": [
                            {
                              "nativeSrc": "1336:26:7",
                              "nodeType": "YulAssignment",
                              "src": "1336:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1348:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1348:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1359:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "1359:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1344:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1344:3:7"
                                },
                                "nativeSrc": "1344:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1344:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1336:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1336:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1378:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1378:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "1389:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1389:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1371:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1371:6:7"
                                },
                                "nativeSrc": "1371:25:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1371:25:7"
                              },
                              "nativeSrc": "1371:25:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1371:25:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "1225:177:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1295:9:7",
                            "nodeType": "YulTypedName",
                            "src": "1295:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1306:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1306:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1317:4:7",
                            "nodeType": "YulTypedName",
                            "src": "1317:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1225:177:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1504:87:7",
                          "nodeType": "YulBlock",
                          "src": "1504:87:7",
                          "statements": [
                            {
                              "nativeSrc": "1514:26:7",
                              "nodeType": "YulAssignment",
                              "src": "1514:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1526:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1526:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1537:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "1537:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1522:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1522:3:7"
                                },
                                "nativeSrc": "1522:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1522:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1514:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1514:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1556:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1556:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "1571:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1571:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1579:4:7",
                                        "nodeType": "YulLiteral",
                                        "src": "1579:4:7",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1567:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1567:3:7"
                                    },
                                    "nativeSrc": "1567:17:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1567:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1549:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1549:6:7"
                                },
                                "nativeSrc": "1549:36:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1549:36:7"
                              },
                              "nativeSrc": "1549:36:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1549:36:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nativeSrc": "1407:184:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1473:9:7",
                            "nodeType": "YulTypedName",
                            "src": "1473:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1484:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1484:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1495:4:7",
                            "nodeType": "YulTypedName",
                            "src": "1495:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1407:184:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1724:132:7",
                          "nodeType": "YulBlock",
                          "src": "1724:132:7",
                          "statements": [
                            {
                              "nativeSrc": "1734:26:7",
                              "nodeType": "YulAssignment",
                              "src": "1734:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1746:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1746:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1757:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "1757:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1742:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1742:3:7"
                                },
                                "nativeSrc": "1742:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1742:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1734:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1734:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1776:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1776:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "1787:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1787:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1769:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1769:6:7"
                                },
                                "nativeSrc": "1769:25:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1769:25:7"
                              },
                              "nativeSrc": "1769:25:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1769:25:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1814:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1814:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1825:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "1825:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1810:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1810:3:7"
                                    },
                                    "nativeSrc": "1810:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1810:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nativeSrc": "1834:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1834:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1842:6:7",
                                        "nodeType": "YulLiteral",
                                        "src": "1842:6:7",
                                        "type": "",
                                        "value": "0xffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1830:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1830:3:7"
                                    },
                                    "nativeSrc": "1830:19:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1830:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1803:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1803:6:7"
                                },
                                "nativeSrc": "1803:47:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1803:47:7"
                              },
                              "nativeSrc": "1803:47:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1803:47:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32_t_uint16__to_t_bytes32_t_uint256__fromStack_reversed",
                        "nativeSrc": "1596:260:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1685:9:7",
                            "nodeType": "YulTypedName",
                            "src": "1685:9:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1696:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1696:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1704:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1704:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1715:4:7",
                            "nodeType": "YulTypedName",
                            "src": "1715:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1596:260:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1920:116:7",
                          "nodeType": "YulBlock",
                          "src": "1920:116:7",
                          "statements": [
                            {
                              "nativeSrc": "1930:22:7",
                              "nodeType": "YulAssignment",
                              "src": "1930:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "1945:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1945:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "1939:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1939:5:7"
                                },
                                "nativeSrc": "1939:13:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1939:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1930:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1930:5:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2014:16:7",
                                "nodeType": "YulBlock",
                                "src": "2014:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2023:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2023:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2026:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2026:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2016:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2016:6:7"
                                      },
                                      "nativeSrc": "2016:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2016:12:7"
                                    },
                                    "nativeSrc": "2016:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2016:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "1974:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1974:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "1985:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "1985:5:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1992:18:7",
                                            "nodeType": "YulLiteral",
                                            "src": "1992:18:7",
                                            "type": "",
                                            "value": "0xffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "1981:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "1981:3:7"
                                        },
                                        "nativeSrc": "1981:30:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1981:30:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "1971:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1971:2:7"
                                    },
                                    "nativeSrc": "1971:41:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1971:41:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "1964:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1964:6:7"
                                },
                                "nativeSrc": "1964:49:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1964:49:7"
                              },
                              "nativeSrc": "1961:69:7",
                              "nodeType": "YulIf",
                              "src": "1961:69:7"
                            }
                          ]
                        },
                        "name": "abi_decode_uint64_fromMemory",
                        "nativeSrc": "1861:175:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "1899:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1899:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nativeSrc": "1910:5:7",
                            "nodeType": "YulTypedName",
                            "src": "1910:5:7",
                            "type": ""
                          }
                        ],
                        "src": "1861:175:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "2099:106:7",
                          "nodeType": "YulBlock",
                          "src": "2099:106:7",
                          "statements": [
                            {
                              "nativeSrc": "2109:22:7",
                              "nodeType": "YulAssignment",
                              "src": "2109:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "2124:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2124:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "2118:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2118:5:7"
                                },
                                "nativeSrc": "2118:13:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2118:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2109:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2109:5:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2183:16:7",
                                "nodeType": "YulBlock",
                                "src": "2183:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2192:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2192:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2195:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2195:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2185:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2185:6:7"
                                      },
                                      "nativeSrc": "2185:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2185:12:7"
                                    },
                                    "nativeSrc": "2185:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2185:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "2153:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2153:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "2171:1:7",
                                            "nodeType": "YulLiteral",
                                            "src": "2171:1:7",
                                            "type": "",
                                            "value": "3"
                                          },
                                          {
                                            "name": "value",
                                            "nativeSrc": "2174:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "2174:5:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "signextend",
                                          "nativeSrc": "2160:10:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "2160:10:7"
                                        },
                                        "nativeSrc": "2160:20:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2160:20:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "2150:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2150:2:7"
                                    },
                                    "nativeSrc": "2150:31:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2150:31:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "2143:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2143:6:7"
                                },
                                "nativeSrc": "2143:39:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2143:39:7"
                              },
                              "nativeSrc": "2140:59:7",
                              "nodeType": "YulIf",
                              "src": "2140:59:7"
                            }
                          ]
                        },
                        "name": "abi_decode_int32_fromMemory",
                        "nativeSrc": "2041:164:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "2078:6:7",
                            "nodeType": "YulTypedName",
                            "src": "2078:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nativeSrc": "2089:5:7",
                            "nodeType": "YulTypedName",
                            "src": "2089:5:7",
                            "type": ""
                          }
                        ],
                        "src": "2041:164:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "2313:866:7",
                          "nodeType": "YulBlock",
                          "src": "2313:866:7",
                          "statements": [
                            {
                              "nativeSrc": "2323:43:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2323:43:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2341:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2341:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2350:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2350:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2337:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2337:3:7"
                                    },
                                    "nativeSrc": "2337:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2337:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2362:3:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2362:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2333:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2333:3:7"
                                },
                                "nativeSrc": "2333:33:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2333:33:7"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nativeSrc": "2327:2:7",
                                  "nodeType": "YulTypedName",
                                  "src": "2327:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2381:16:7",
                                "nodeType": "YulBlock",
                                "src": "2381:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2390:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2390:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2393:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2393:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2383:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2383:6:7"
                                      },
                                      "nativeSrc": "2383:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2383:12:7"
                                    },
                                    "nativeSrc": "2383:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2383:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "name": "_1",
                                "nativeSrc": "2378:2:7",
                                "nodeType": "YulIdentifier",
                                "src": "2378:2:7"
                              },
                              "nativeSrc": "2375:22:7",
                              "nodeType": "YulIf",
                              "src": "2375:22:7"
                            },
                            {
                              "nativeSrc": "2406:7:7",
                              "nodeType": "YulAssignment",
                              "src": "2406:7:7",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "2412:1:7",
                                "nodeType": "YulLiteral",
                                "src": "2412:1:7",
                                "type": "",
                                "value": "0"
                              },
                              "variableNames": [
                                {
                                  "name": "_1",
                                  "nativeSrc": "2406:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2406:2:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2422:23:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2422:23:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2442:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2442:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "2436:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2436:5:7"
                                },
                                "nativeSrc": "2436:9:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2436:9:7"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nativeSrc": "2426:6:7",
                                  "nodeType": "YulTypedName",
                                  "src": "2426:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2454:34:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2454:34:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "2476:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2476:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2484:3:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2484:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2472:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2472:3:7"
                                },
                                "nativeSrc": "2472:16:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2472:16:7"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nativeSrc": "2458:10:7",
                                  "nodeType": "YulTypedName",
                                  "src": "2458:10:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2571:113:7",
                                "nodeType": "YulBlock",
                                "src": "2571:113:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "_1",
                                          "nativeSrc": "2592:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "2592:2:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "2600:3:7",
                                              "nodeType": "YulLiteral",
                                              "src": "2600:3:7",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "2605:10:7",
                                              "nodeType": "YulLiteral",
                                              "src": "2605:10:7",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "2596:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "2596:3:7"
                                          },
                                          "nativeSrc": "2596:20:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2596:20:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "2585:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2585:6:7"
                                      },
                                      "nativeSrc": "2585:32:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2585:32:7"
                                    },
                                    "nativeSrc": "2585:32:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2585:32:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2637:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2637:1:7",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2640:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2640:4:7",
                                          "type": "",
                                          "value": "0x41"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "2630:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2630:6:7"
                                      },
                                      "nativeSrc": "2630:15:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2630:15:7"
                                    },
                                    "nativeSrc": "2630:15:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2630:15:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "_1",
                                          "nativeSrc": "2665:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "2665:2:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2669:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2669:4:7",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2658:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2658:6:7"
                                      },
                                      "nativeSrc": "2658:16:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2658:16:7"
                                    },
                                    "nativeSrc": "2658:16:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2658:16:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "2506:10:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2506:10:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2518:18:7",
                                        "nodeType": "YulLiteral",
                                        "src": "2518:18:7",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nativeSrc": "2503:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2503:2:7"
                                    },
                                    "nativeSrc": "2503:34:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2503:34:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "2542:10:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2542:10:7"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "2554:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2554:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "2539:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2539:2:7"
                                    },
                                    "nativeSrc": "2539:22:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2539:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "2500:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2500:2:7"
                                },
                                "nativeSrc": "2500:62:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2500:62:7"
                              },
                              "nativeSrc": "2497:187:7",
                              "nodeType": "YulIf",
                              "src": "2497:187:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2700:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2700:2:7",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nativeSrc": "2704:10:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2704:10:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2693:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2693:6:7"
                                },
                                "nativeSrc": "2693:22:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2693:22:7"
                              },
                              "nativeSrc": "2693:22:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "2693:22:7"
                            },
                            {
                              "nativeSrc": "2724:15:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2724:15:7",
                              "value": {
                                "name": "_1",
                                "nativeSrc": "2737:2:7",
                                "nodeType": "YulIdentifier",
                                "src": "2737:2:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2728:5:7",
                                  "nodeType": "YulTypedName",
                                  "src": "2728:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2748:25:7",
                              "nodeType": "YulAssignment",
                              "src": "2748:25:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2763:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2763:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "2757:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2757:5:7"
                                },
                                "nativeSrc": "2757:16:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2757:16:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2748:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2748:5:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2825:18:7",
                                "nodeType": "YulBlock",
                                "src": "2825:18:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "_1",
                                          "nativeSrc": "2834:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "2834:2:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nativeSrc": "2838:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "2838:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2827:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2827:6:7"
                                      },
                                      "nativeSrc": "2827:14:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2827:14:7"
                                    },
                                    "nativeSrc": "2827:14:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2827:14:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "2795:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2795:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "2813:1:7",
                                            "nodeType": "YulLiteral",
                                            "src": "2813:1:7",
                                            "type": "",
                                            "value": "7"
                                          },
                                          {
                                            "name": "value",
                                            "nativeSrc": "2816:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "2816:5:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "signextend",
                                          "nativeSrc": "2802:10:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "2802:10:7"
                                        },
                                        "nativeSrc": "2802:20:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2802:20:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "2792:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2792:2:7"
                                    },
                                    "nativeSrc": "2792:31:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2792:31:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "2785:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2785:6:7"
                                },
                                "nativeSrc": "2785:39:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2785:39:7"
                              },
                              "nativeSrc": "2782:61:7",
                              "nodeType": "YulIf",
                              "src": "2782:61:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "2859:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2859:6:7"
                                  },
                                  {
                                    "name": "value",
                                    "nativeSrc": "2867:5:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2867:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2852:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2852:6:7"
                                },
                                "nativeSrc": "2852:21:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2852:21:7"
                              },
                              "nativeSrc": "2852:21:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "2852:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "2893:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2893:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2901:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "2901:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2889:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2889:3:7"
                                    },
                                    "nativeSrc": "2889:15:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2889:15:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "2939:9:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "2939:9:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "2950:2:7",
                                            "nodeType": "YulLiteral",
                                            "src": "2950:2:7",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "2935:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "2935:3:7"
                                        },
                                        "nativeSrc": "2935:18:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2935:18:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_uint64_fromMemory",
                                      "nativeSrc": "2906:28:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2906:28:7"
                                    },
                                    "nativeSrc": "2906:48:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2906:48:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2882:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2882:6:7"
                                },
                                "nativeSrc": "2882:73:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2882:73:7"
                              },
                              "nativeSrc": "2882:73:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "2882:73:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "2975:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2975:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2983:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "2983:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2971:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2971:3:7"
                                    },
                                    "nativeSrc": "2971:15:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2971:15:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "3020:9:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3020:9:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3031:2:7",
                                            "nodeType": "YulLiteral",
                                            "src": "3031:2:7",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "3016:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3016:3:7"
                                        },
                                        "nativeSrc": "3016:18:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3016:18:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_int32_fromMemory",
                                      "nativeSrc": "2988:27:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2988:27:7"
                                    },
                                    "nativeSrc": "2988:47:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2988:47:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2964:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2964:6:7"
                                },
                                "nativeSrc": "2964:72:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2964:72:7"
                              },
                              "nativeSrc": "2964:72:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "2964:72:7"
                            },
                            {
                              "nativeSrc": "3045:17:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3045:17:7",
                              "value": {
                                "name": "_1",
                                "nativeSrc": "3060:2:7",
                                "nodeType": "YulIdentifier",
                                "src": "3060:2:7"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nativeSrc": "3049:7:7",
                                  "nodeType": "YulTypedName",
                                  "src": "3049:7:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3071:36:7",
                              "nodeType": "YulAssignment",
                              "src": "3071:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3092:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3092:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3103:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "3103:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3088:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "3088:3:7"
                                    },
                                    "nativeSrc": "3088:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3088:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "3082:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3082:5:7"
                                },
                                "nativeSrc": "3082:25:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3082:25:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value_1",
                                  "nativeSrc": "3071:7:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3071:7:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "3127:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3127:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3135:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "3135:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3123:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "3123:3:7"
                                    },
                                    "nativeSrc": "3123:15:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3123:15:7"
                                  },
                                  {
                                    "name": "value_1",
                                    "nativeSrc": "3140:7:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3140:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3116:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3116:6:7"
                                },
                                "nativeSrc": "3116:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3116:32:7"
                              },
                              "nativeSrc": "3116:32:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "3116:32:7"
                            },
                            {
                              "nativeSrc": "3157:16:7",
                              "nodeType": "YulAssignment",
                              "src": "3157:16:7",
                              "value": {
                                "name": "memPtr",
                                "nativeSrc": "3167:6:7",
                                "nodeType": "YulIdentifier",
                                "src": "3167:6:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "3157:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3157:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_struct$_Price_$308_memory_ptr_fromMemory",
                        "nativeSrc": "2210:969:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2279:9:7",
                            "nodeType": "YulTypedName",
                            "src": "2279:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2290:7:7",
                            "nodeType": "YulTypedName",
                            "src": "2290:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2302:6:7",
                            "nodeType": "YulTypedName",
                            "src": "2302:6:7",
                            "type": ""
                          }
                        ],
                        "src": "2210:969:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "3216:95:7",
                          "nodeType": "YulBlock",
                          "src": "3216:95:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3233:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3233:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3240:3:7",
                                        "nodeType": "YulLiteral",
                                        "src": "3240:3:7",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3245:10:7",
                                        "nodeType": "YulLiteral",
                                        "src": "3245:10:7",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "3236:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "3236:3:7"
                                    },
                                    "nativeSrc": "3236:20:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3236:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3226:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3226:6:7"
                                },
                                "nativeSrc": "3226:31:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3226:31:7"
                              },
                              "nativeSrc": "3226:31:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "3226:31:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3273:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3273:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3276:4:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3276:4:7",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3266:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3266:6:7"
                                },
                                "nativeSrc": "3266:15:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3266:15:7"
                              },
                              "nativeSrc": "3266:15:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "3266:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3297:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3297:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3300:4:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3300:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "3290:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3290:6:7"
                                },
                                "nativeSrc": "3290:15:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3290:15:7"
                              },
                              "nativeSrc": "3290:15:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "3290:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nativeSrc": "3184:127:7",
                        "nodeType": "YulFunctionDefinition",
                        "src": "3184:127:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "3364:77:7",
                          "nodeType": "YulBlock",
                          "src": "3364:77:7",
                          "statements": [
                            {
                              "nativeSrc": "3374:16:7",
                              "nodeType": "YulAssignment",
                              "src": "3374:16:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "3385:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3385:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "3388:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3388:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3381:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3381:3:7"
                                },
                                "nativeSrc": "3381:9:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3381:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nativeSrc": "3374:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3374:3:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3413:22:7",
                                "nodeType": "YulBlock",
                                "src": "3413:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "3415:16:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3415:16:7"
                                      },
                                      "nativeSrc": "3415:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3415:18:7"
                                    },
                                    "nativeSrc": "3415:18:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3415:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "3405:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3405:1:7"
                                  },
                                  {
                                    "name": "sum",
                                    "nativeSrc": "3408:3:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3408:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3402:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3402:2:7"
                                },
                                "nativeSrc": "3402:10:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3402:10:7"
                              },
                              "nativeSrc": "3399:36:7",
                              "nodeType": "YulIf",
                              "src": "3399:36:7"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nativeSrc": "3316:125:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "3347:1:7",
                            "nodeType": "YulTypedName",
                            "src": "3347:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "3350:1:7",
                            "nodeType": "YulTypedName",
                            "src": "3350:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nativeSrc": "3356:3:7",
                            "nodeType": "YulTypedName",
                            "src": "3356:3:7",
                            "type": ""
                          }
                        ],
                        "src": "3316:125:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "3515:306:7",
                          "nodeType": "YulBlock",
                          "src": "3515:306:7",
                          "statements": [
                            {
                              "nativeSrc": "3525:10:7",
                              "nodeType": "YulAssignment",
                              "src": "3525:10:7",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3534:1:7",
                                "nodeType": "YulLiteral",
                                "src": "3534:1:7",
                                "type": "",
                                "value": "1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "3525:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3525:5:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3544:13:7",
                              "nodeType": "YulAssignment",
                              "src": "3544:13:7",
                              "value": {
                                "name": "_base",
                                "nativeSrc": "3552:5:7",
                                "nodeType": "YulIdentifier",
                                "src": "3552:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nativeSrc": "3544:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3544:4:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3602:213:7",
                                "nodeType": "YulBlock",
                                "src": "3602:213:7",
                                "statements": [
                                  {
                                    "body": {
                                      "nativeSrc": "3644:22:7",
                                      "nodeType": "YulBlock",
                                      "src": "3644:22:7",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nativeSrc": "3646:16:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3646:16:7"
                                            },
                                            "nativeSrc": "3646:18:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3646:18:7"
                                          },
                                          "nativeSrc": "3646:18:7",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "3646:18:7"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "3622:4:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3622:4:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "max",
                                              "nativeSrc": "3632:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3632:3:7"
                                            },
                                            {
                                              "name": "base",
                                              "nativeSrc": "3637:4:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3637:4:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nativeSrc": "3628:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3628:3:7"
                                          },
                                          "nativeSrc": "3628:14:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3628:14:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nativeSrc": "3619:2:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3619:2:7"
                                      },
                                      "nativeSrc": "3619:24:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3619:24:7"
                                    },
                                    "nativeSrc": "3616:50:7",
                                    "nodeType": "YulIf",
                                    "src": "3616:50:7"
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "3699:29:7",
                                      "nodeType": "YulBlock",
                                      "src": "3699:29:7",
                                      "statements": [
                                        {
                                          "nativeSrc": "3701:25:7",
                                          "nodeType": "YulAssignment",
                                          "src": "3701:25:7",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nativeSrc": "3714:5:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "3714:5:7"
                                              },
                                              {
                                                "name": "base",
                                                "nativeSrc": "3721:4:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "3721:4:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nativeSrc": "3710:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3710:3:7"
                                            },
                                            "nativeSrc": "3710:16:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3710:16:7"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nativeSrc": "3701:5:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3701:5:7"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "3686:8:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3686:8:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3696:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3696:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "3682:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3682:3:7"
                                      },
                                      "nativeSrc": "3682:16:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3682:16:7"
                                    },
                                    "nativeSrc": "3679:49:7",
                                    "nodeType": "YulIf",
                                    "src": "3679:49:7"
                                  },
                                  {
                                    "nativeSrc": "3741:23:7",
                                    "nodeType": "YulAssignment",
                                    "src": "3741:23:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "3753:4:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3753:4:7"
                                        },
                                        {
                                          "name": "base",
                                          "nativeSrc": "3759:4:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3759:4:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nativeSrc": "3749:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3749:3:7"
                                      },
                                      "nativeSrc": "3749:15:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3749:15:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nativeSrc": "3741:4:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3741:4:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3777:28:7",
                                    "nodeType": "YulAssignment",
                                    "src": "3777:28:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3793:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3793:1:7",
                                          "type": "",
                                          "value": "1"
                                        },
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "3796:8:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3796:8:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nativeSrc": "3789:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3789:3:7"
                                      },
                                      "nativeSrc": "3789:16:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3789:16:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nativeSrc": "3777:8:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3777:8:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "3577:8:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3577:8:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3587:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3587:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3574:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3574:2:7"
                                },
                                "nativeSrc": "3574:15:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3574:15:7"
                              },
                              "nativeSrc": "3566:249:7",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "3590:3:7",
                                "nodeType": "YulBlock",
                                "src": "3590:3:7",
                                "statements": []
                              },
                              "pre": {
                                "nativeSrc": "3570:3:7",
                                "nodeType": "YulBlock",
                                "src": "3570:3:7",
                                "statements": []
                              },
                              "src": "3566:249:7"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nativeSrc": "3446:375:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_base",
                            "nativeSrc": "3474:5:7",
                            "nodeType": "YulTypedName",
                            "src": "3474:5:7",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "3481:8:7",
                            "nodeType": "YulTypedName",
                            "src": "3481:8:7",
                            "type": ""
                          },
                          {
                            "name": "max",
                            "nativeSrc": "3491:3:7",
                            "nodeType": "YulTypedName",
                            "src": "3491:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "3499:5:7",
                            "nodeType": "YulTypedName",
                            "src": "3499:5:7",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nativeSrc": "3506:4:7",
                            "nodeType": "YulTypedName",
                            "src": "3506:4:7",
                            "type": ""
                          }
                        ],
                        "src": "3446:375:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "3885:843:7",
                          "nodeType": "YulBlock",
                          "src": "3885:843:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3923:52:7",
                                "nodeType": "YulBlock",
                                "src": "3923:52:7",
                                "statements": [
                                  {
                                    "nativeSrc": "3937:10:7",
                                    "nodeType": "YulAssignment",
                                    "src": "3937:10:7",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "3946:1:7",
                                      "nodeType": "YulLiteral",
                                      "src": "3946:1:7",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "3937:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3937:5:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3960:5:7",
                                    "nodeType": "YulLeave",
                                    "src": "3960:5:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "3905:8:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3905:8:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3898:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3898:6:7"
                                },
                                "nativeSrc": "3898:16:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3898:16:7"
                              },
                              "nativeSrc": "3895:80:7",
                              "nodeType": "YulIf",
                              "src": "3895:80:7"
                            },
                            {
                              "body": {
                                "nativeSrc": "4008:52:7",
                                "nodeType": "YulBlock",
                                "src": "4008:52:7",
                                "statements": [
                                  {
                                    "nativeSrc": "4022:10:7",
                                    "nodeType": "YulAssignment",
                                    "src": "4022:10:7",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "4031:1:7",
                                      "nodeType": "YulLiteral",
                                      "src": "4031:1:7",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "4022:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4022:5:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "4045:5:7",
                                    "nodeType": "YulLeave",
                                    "src": "4045:5:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "3994:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3994:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3987:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3987:6:7"
                                },
                                "nativeSrc": "3987:12:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3987:12:7"
                              },
                              "nativeSrc": "3984:76:7",
                              "nodeType": "YulIf",
                              "src": "3984:76:7"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "4096:52:7",
                                    "nodeType": "YulBlock",
                                    "src": "4096:52:7",
                                    "statements": [
                                      {
                                        "nativeSrc": "4110:10:7",
                                        "nodeType": "YulAssignment",
                                        "src": "4110:10:7",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "4119:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "4119:1:7",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "4110:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4110:5:7"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "4133:5:7",
                                        "nodeType": "YulLeave",
                                        "src": "4133:5:7"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "4089:59:7",
                                  "nodeType": "YulCase",
                                  "src": "4089:59:7",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "4094:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "4094:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "4164:167:7",
                                    "nodeType": "YulBlock",
                                    "src": "4164:167:7",
                                    "statements": [
                                      {
                                        "body": {
                                          "nativeSrc": "4199:22:7",
                                          "nodeType": "YulBlock",
                                          "src": "4199:22:7",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nativeSrc": "4201:16:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4201:16:7"
                                                },
                                                "nativeSrc": "4201:18:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "4201:18:7"
                                              },
                                              "nativeSrc": "4201:18:7",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "4201:18:7"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "4184:8:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "4184:8:7"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "4194:3:7",
                                              "nodeType": "YulLiteral",
                                              "src": "4194:3:7",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nativeSrc": "4181:2:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4181:2:7"
                                          },
                                          "nativeSrc": "4181:17:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "4181:17:7"
                                        },
                                        "nativeSrc": "4178:43:7",
                                        "nodeType": "YulIf",
                                        "src": "4178:43:7"
                                      },
                                      {
                                        "nativeSrc": "4234:25:7",
                                        "nodeType": "YulAssignment",
                                        "src": "4234:25:7",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "4247:8:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "4247:8:7"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "4257:1:7",
                                              "nodeType": "YulLiteral",
                                              "src": "4257:1:7",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "4243:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4243:3:7"
                                          },
                                          "nativeSrc": "4243:16:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "4243:16:7"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "4234:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4234:5:7"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "4272:11:7",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "4272:11:7",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "4282:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "4282:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "4276:2:7",
                                            "nodeType": "YulTypedName",
                                            "src": "4276:2:7",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "4296:7:7",
                                        "nodeType": "YulAssignment",
                                        "src": "4296:7:7",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "4302:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "4302:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "4296:2:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4296:2:7"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "4316:5:7",
                                        "nodeType": "YulLeave",
                                        "src": "4316:5:7"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "4157:174:7",
                                  "nodeType": "YulCase",
                                  "src": "4157:174:7",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "4162:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "4162:1:7",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nativeSrc": "4076:4:7",
                                "nodeType": "YulIdentifier",
                                "src": "4076:4:7"
                              },
                              "nativeSrc": "4069:262:7",
                              "nodeType": "YulSwitch",
                              "src": "4069:262:7"
                            },
                            {
                              "body": {
                                "nativeSrc": "4429:114:7",
                                "nodeType": "YulBlock",
                                "src": "4429:114:7",
                                "statements": [
                                  {
                                    "nativeSrc": "4443:28:7",
                                    "nodeType": "YulAssignment",
                                    "src": "4443:28:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "4456:4:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4456:4:7"
                                        },
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "4462:8:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4462:8:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nativeSrc": "4452:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4452:3:7"
                                      },
                                      "nativeSrc": "4452:19:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4452:19:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "4443:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4443:5:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "4484:11:7",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "4484:11:7",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "4494:1:7",
                                      "nodeType": "YulLiteral",
                                      "src": "4494:1:7",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nativeSrc": "4488:2:7",
                                        "nodeType": "YulTypedName",
                                        "src": "4488:2:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "4508:7:7",
                                    "nodeType": "YulAssignment",
                                    "src": "4508:7:7",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "4514:1:7",
                                      "nodeType": "YulLiteral",
                                      "src": "4514:1:7",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "_2",
                                        "nativeSrc": "4508:2:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4508:2:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "4528:5:7",
                                    "nodeType": "YulLeave",
                                    "src": "4528:5:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "4353:4:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4353:4:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4359:2:7",
                                            "nodeType": "YulLiteral",
                                            "src": "4359:2:7",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "4350:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4350:2:7"
                                        },
                                        "nativeSrc": "4350:12:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4350:12:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "4367:8:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4367:8:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4377:2:7",
                                            "nodeType": "YulLiteral",
                                            "src": "4377:2:7",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "4364:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4364:2:7"
                                        },
                                        "nativeSrc": "4364:16:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4364:16:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4346:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "4346:3:7"
                                    },
                                    "nativeSrc": "4346:35:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4346:35:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "4390:4:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4390:4:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4396:3:7",
                                            "nodeType": "YulLiteral",
                                            "src": "4396:3:7",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "4387:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4387:2:7"
                                        },
                                        "nativeSrc": "4387:13:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4387:13:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "4405:8:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4405:8:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4415:2:7",
                                            "nodeType": "YulLiteral",
                                            "src": "4415:2:7",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "4402:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4402:2:7"
                                        },
                                        "nativeSrc": "4402:16:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4402:16:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4383:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "4383:3:7"
                                    },
                                    "nativeSrc": "4383:36:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4383:36:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "4343:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4343:2:7"
                                },
                                "nativeSrc": "4343:77:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4343:77:7"
                              },
                              "nativeSrc": "4340:203:7",
                              "nodeType": "YulIf",
                              "src": "4340:203:7"
                            },
                            {
                              "nativeSrc": "4552:65:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4552:65:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "4594:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4594:4:7"
                                  },
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "4600:8:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4600:8:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4614:1:7",
                                        "nodeType": "YulLiteral",
                                        "src": "4614:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nativeSrc": "4610:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "4610:3:7"
                                    },
                                    "nativeSrc": "4610:6:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4610:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nativeSrc": "4575:18:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4575:18:7"
                                },
                                "nativeSrc": "4575:42:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4575:42:7"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nativeSrc": "4556:7:7",
                                  "nodeType": "YulTypedName",
                                  "src": "4556:7:7",
                                  "type": ""
                                },
                                {
                                  "name": "base_1",
                                  "nativeSrc": "4565:6:7",
                                  "nodeType": "YulTypedName",
                                  "src": "4565:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4662:22:7",
                                "nodeType": "YulBlock",
                                "src": "4662:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "4664:16:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4664:16:7"
                                      },
                                      "nativeSrc": "4664:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4664:18:7"
                                    },
                                    "nativeSrc": "4664:18:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4664:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "4632:7:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4632:7:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4649:1:7",
                                            "nodeType": "YulLiteral",
                                            "src": "4649:1:7",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "4645:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4645:3:7"
                                        },
                                        "nativeSrc": "4645:6:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4645:6:7"
                                      },
                                      {
                                        "name": "base_1",
                                        "nativeSrc": "4653:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4653:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nativeSrc": "4641:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "4641:3:7"
                                    },
                                    "nativeSrc": "4641:19:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4641:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "4629:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4629:2:7"
                                },
                                "nativeSrc": "4629:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4629:32:7"
                              },
                              "nativeSrc": "4626:58:7",
                              "nodeType": "YulIf",
                              "src": "4626:58:7"
                            },
                            {
                              "nativeSrc": "4693:29:7",
                              "nodeType": "YulAssignment",
                              "src": "4693:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "4706:7:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4706:7:7"
                                  },
                                  {
                                    "name": "base_1",
                                    "nativeSrc": "4715:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4715:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "4702:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4702:3:7"
                                },
                                "nativeSrc": "4702:20:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4702:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "4693:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4693:5:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nativeSrc": "3826:902:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "3856:4:7",
                            "nodeType": "YulTypedName",
                            "src": "3856:4:7",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "3862:8:7",
                            "nodeType": "YulTypedName",
                            "src": "3862:8:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "3875:5:7",
                            "nodeType": "YulTypedName",
                            "src": "3875:5:7",
                            "type": ""
                          }
                        ],
                        "src": "3826:902:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "4803:61:7",
                          "nodeType": "YulBlock",
                          "src": "4803:61:7",
                          "statements": [
                            {
                              "nativeSrc": "4813:45:7",
                              "nodeType": "YulAssignment",
                              "src": "4813:45:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "4843:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4843:4:7"
                                  },
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "4849:8:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4849:8:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nativeSrc": "4822:20:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4822:20:7"
                                },
                                "nativeSrc": "4822:36:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4822:36:7"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "4813:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4813:5:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint256",
                        "nativeSrc": "4733:131:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "4774:4:7",
                            "nodeType": "YulTypedName",
                            "src": "4774:4:7",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "4780:8:7",
                            "nodeType": "YulTypedName",
                            "src": "4780:8:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "4793:5:7",
                            "nodeType": "YulTypedName",
                            "src": "4793:5:7",
                            "type": ""
                          }
                        ],
                        "src": "4733:131:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "4915:171:7",
                          "nodeType": "YulBlock",
                          "src": "4915:171:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "4946:111:7",
                                "nodeType": "YulBlock",
                                "src": "4946:111:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4967:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "4967:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "4974:3:7",
                                              "nodeType": "YulLiteral",
                                              "src": "4974:3:7",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "4979:10:7",
                                              "nodeType": "YulLiteral",
                                              "src": "4979:10:7",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "4970:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4970:3:7"
                                          },
                                          "nativeSrc": "4970:20:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "4970:20:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "4960:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4960:6:7"
                                      },
                                      "nativeSrc": "4960:31:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4960:31:7"
                                    },
                                    "nativeSrc": "4960:31:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4960:31:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5011:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "5011:1:7",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5014:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "5014:4:7",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "5004:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "5004:6:7"
                                      },
                                      "nativeSrc": "5004:15:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5004:15:7"
                                    },
                                    "nativeSrc": "5004:15:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5004:15:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5039:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "5039:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5042:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "5042:4:7",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "5032:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "5032:6:7"
                                      },
                                      "nativeSrc": "5032:15:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5032:15:7"
                                    },
                                    "nativeSrc": "5032:15:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5032:15:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nativeSrc": "4935:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4935:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "4928:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4928:6:7"
                                },
                                "nativeSrc": "4928:9:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4928:9:7"
                              },
                              "nativeSrc": "4925:132:7",
                              "nodeType": "YulIf",
                              "src": "4925:132:7"
                            },
                            {
                              "nativeSrc": "5066:14:7",
                              "nodeType": "YulAssignment",
                              "src": "5066:14:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "5075:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5075:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "5078:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5078:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nativeSrc": "5071:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5071:3:7"
                                },
                                "nativeSrc": "5071:9:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5071:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nativeSrc": "5066:1:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5066:1:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nativeSrc": "4869:217:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "4900:1:7",
                            "nodeType": "YulTypedName",
                            "src": "4900:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "4903:1:7",
                            "nodeType": "YulTypedName",
                            "src": "4903:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nativeSrc": "4909:1:7",
                            "nodeType": "YulTypedName",
                            "src": "4909:1:7",
                            "type": ""
                          }
                        ],
                        "src": "4869:217:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "5133:145:7",
                          "nodeType": "YulBlock",
                          "src": "5133:145:7",
                          "statements": [
                            {
                              "nativeSrc": "5143:35:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "5143:35:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5169:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "5169:1:7",
                                    "type": "",
                                    "value": "3"
                                  },
                                  {
                                    "name": "value",
                                    "nativeSrc": "5172:5:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5172:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "signextend",
                                  "nativeSrc": "5158:10:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5158:10:7"
                                },
                                "nativeSrc": "5158:20:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5158:20:7"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nativeSrc": "5147:7:7",
                                  "nodeType": "YulTypedName",
                                  "src": "5147:7:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "5219:22:7",
                                "nodeType": "YulBlock",
                                "src": "5219:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "5221:16:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "5221:16:7"
                                      },
                                      "nativeSrc": "5221:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5221:18:7"
                                    },
                                    "nativeSrc": "5221:18:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5221:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nativeSrc": "5193:7:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5193:7:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5206:10:7",
                                        "nodeType": "YulLiteral",
                                        "src": "5206:10:7",
                                        "type": "",
                                        "value": "0x7fffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nativeSrc": "5202:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "5202:3:7"
                                    },
                                    "nativeSrc": "5202:15:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5202:15:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "5190:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5190:2:7"
                                },
                                "nativeSrc": "5190:28:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5190:28:7"
                              },
                              "nativeSrc": "5187:54:7",
                              "nodeType": "YulIf",
                              "src": "5187:54:7"
                            },
                            {
                              "nativeSrc": "5250:22:7",
                              "nodeType": "YulAssignment",
                              "src": "5250:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5261:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "5261:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "value_1",
                                    "nativeSrc": "5264:7:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5264:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "5257:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5257:3:7"
                                },
                                "nativeSrc": "5257:15:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5257:15:7"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nativeSrc": "5250:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5250:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "negate_t_int32",
                        "nativeSrc": "5091:187:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "5115:5:7",
                            "nodeType": "YulTypedName",
                            "src": "5115:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nativeSrc": "5125:3:7",
                            "nodeType": "YulTypedName",
                            "src": "5125:3:7",
                            "type": ""
                          }
                        ],
                        "src": "5091:187:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "5332:79:7",
                          "nodeType": "YulBlock",
                          "src": "5332:79:7",
                          "statements": [
                            {
                              "nativeSrc": "5342:17:7",
                              "nodeType": "YulAssignment",
                              "src": "5342:17:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "5354:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5354:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "5357:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5357:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "5350:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5350:3:7"
                                },
                                "nativeSrc": "5350:9:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5350:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nativeSrc": "5342:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5342:4:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "5383:22:7",
                                "nodeType": "YulBlock",
                                "src": "5383:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "5385:16:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "5385:16:7"
                                      },
                                      "nativeSrc": "5385:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5385:18:7"
                                    },
                                    "nativeSrc": "5385:18:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5385:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "diff",
                                    "nativeSrc": "5374:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5374:4:7"
                                  },
                                  {
                                    "name": "x",
                                    "nativeSrc": "5380:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5380:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "5371:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5371:2:7"
                                },
                                "nativeSrc": "5371:11:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5371:11:7"
                              },
                              "nativeSrc": "5368:37:7",
                              "nodeType": "YulIf",
                              "src": "5368:37:7"
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nativeSrc": "5283:128:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "5314:1:7",
                            "nodeType": "YulTypedName",
                            "src": "5314:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "5317:1:7",
                            "nodeType": "YulTypedName",
                            "src": "5317:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nativeSrc": "5323:4:7",
                            "nodeType": "YulTypedName",
                            "src": "5323:4:7",
                            "type": ""
                          }
                        ],
                        "src": "5283:128:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "5468:116:7",
                          "nodeType": "YulBlock",
                          "src": "5468:116:7",
                          "statements": [
                            {
                              "nativeSrc": "5478:20:7",
                              "nodeType": "YulAssignment",
                              "src": "5478:20:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "5493:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5493:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "5496:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5496:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "5489:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5489:3:7"
                                },
                                "nativeSrc": "5489:9:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5489:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nativeSrc": "5478:7:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5478:7:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "5556:22:7",
                                "nodeType": "YulBlock",
                                "src": "5556:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "5558:16:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "5558:16:7"
                                      },
                                      "nativeSrc": "5558:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5558:18:7"
                                    },
                                    "nativeSrc": "5558:18:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5558:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nativeSrc": "5527:1:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "5527:1:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "5520:6:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "5520:6:7"
                                        },
                                        "nativeSrc": "5520:9:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5520:9:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "y",
                                            "nativeSrc": "5534:1:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "5534:1:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "product",
                                                "nativeSrc": "5541:7:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "5541:7:7"
                                              },
                                              {
                                                "name": "x",
                                                "nativeSrc": "5550:1:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "5550:1:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nativeSrc": "5537:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "5537:3:7"
                                            },
                                            "nativeSrc": "5537:15:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5537:15:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "eq",
                                          "nativeSrc": "5531:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "5531:2:7"
                                        },
                                        "nativeSrc": "5531:22:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5531:22:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "or",
                                      "nativeSrc": "5517:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "5517:2:7"
                                    },
                                    "nativeSrc": "5517:37:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5517:37:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "5510:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5510:6:7"
                                },
                                "nativeSrc": "5510:45:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5510:45:7"
                              },
                              "nativeSrc": "5507:71:7",
                              "nodeType": "YulIf",
                              "src": "5507:71:7"
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nativeSrc": "5416:168:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "5447:1:7",
                            "nodeType": "YulTypedName",
                            "src": "5447:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "5450:1:7",
                            "nodeType": "YulTypedName",
                            "src": "5450:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nativeSrc": "5456:7:7",
                            "nodeType": "YulTypedName",
                            "src": "5456:7:7",
                            "type": ""
                          }
                        ],
                        "src": "5416:168:7"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint16__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffff))\n    }\n    function abi_decode_uint64_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_int32_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, signextend(3, value))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_Price_$308_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := slt(sub(dataEnd, headStart), 128)\n        if _1 { revert(0, 0) }\n        _1 := 0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 128)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(_1, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(_1, 0x24)\n        }\n        mstore(64, newFreePtr)\n        let value := _1\n        value := mload(headStart)\n        if iszero(eq(value, signextend(7, value))) { revert(_1, _1) }\n        mstore(memPtr, value)\n        mstore(add(memPtr, 32), abi_decode_uint64_fromMemory(add(headStart, 32)))\n        mstore(add(memPtr, 64), abi_decode_int32_fromMemory(add(headStart, 64)))\n        let value_1 := _1\n        value_1 := mload(add(headStart, 96))\n        mstore(add(memPtr, 96), value_1)\n        value0 := memPtr\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function negate_t_int32(value) -> ret\n    {\n        let value_1 := signextend(3, value)\n        if eq(value_1, not(0x7fffffff)) { panic_error_0x11() }\n        ret := sub(0, value_1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "337": [
                  {
                    "length": 32,
                    "start": 146
                  },
                  {
                    "length": 32,
                    "start": 592
                  }
                ],
                "341": [
                  {
                    "length": 32,
                    "start": 631
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610120578063d02641a01461013b578063f1a640f81461014e578063f2fde38b1461016857600080fd5b806352f1edcc1461008d5780635b9dfcfa146100cc578063715018a6146100e1578063831cf43d146100e9575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff90911681526020015b60405180910390f35b6100df6100da36600461049a565b61017b565b005b6100df6101dc565b6101126100f73660046104c4565b6001600160a01b031660009081526001602052604090205490565b6040519081526020016100c3565b6000546040516001600160a01b0390911681526020016100c3565b6101126101493660046104c4565b6101f0565b610156601281565b60405160ff90911681526020016100c3565b6100df6101763660046104c4565b61030c565b61018361034a565b6001600160a01b03821660008181526001602052604090819020839055517f0371a930f54882f3e9296d66c96d41e22a3892c17f1ae0482b0761630010813f906101d09084815260200190565b60405180910390a25050565b6101e461034a565b6101ee6000610377565b565b6001600160a01b0381166000908152600160205260408120548061023757604051630baf9bfb60e01b81526001600160a01b03841660048201526024015b60405180910390fd5b60405163052571af60e51b81526004810182905261ffff7f00000000000000000000000000000000000000000000000000000000000000001660248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a4ae35e090604401608060405180830381865afa9250505080156102e2575060408051601f3d908101601f191682019092526102df91810190610510565b60015b6102ef5750600092915050565b610304816000015160070b82604001516103c7565b949350505050565b61031461034a565b6001600160a01b03811661033e57604051631e4fbdf760e01b81526000600482015260240161022e565b61034781610377565b50565b6000546001600160a01b031633146101ee5760405163118cdaa760e01b815233600482015260240161022e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083136103e957604051632919491b60e01b815260040160405180910390fd5b60008260030b13156104245763ffffffff82166104078160126105b9565b61041290600a6106b3565b61041c90856106bf565b915050610478565b600061042f836106e1565b63ffffffff16905061044160126106e1565b60030b8360030b1361046d57610458601282610704565b61046390600a6106b3565b61041c9085610717565b610458816012610704565b92915050565b80356001600160a01b038116811461049557600080fd5b919050565b600080604083850312156104ad57600080fd5b6104b68361047e565b946020939093013593505050565b6000602082840312156104d657600080fd5b6104df8261047e565b9392505050565b805167ffffffffffffffff8116811461049557600080fd5b8051600381900b811461049557600080fd5b6000608082840312801561052357600080fd5b600090506040516080810181811067ffffffffffffffff8211171561055657634e487b7160e01b83526041600452602483fd5b6040528351600781900b811461056a578283fd5b8152610578602085016104e6565b6020820152610589604085016104fe565b604082015260609384015193810193909352509092915050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610478576104786105a3565b6001815b6001841115610607578085048111156105eb576105eb6105a3565b60018416156105f957908102905b60019390931c9280026105d0565b935093915050565b60008261061e57506001610478565b8161062b57506000610478565b8160018114610641576002811461064b57610667565b6001915050610478565b60ff84111561065c5761065c6105a3565b50506001821b610478565b5060208310610133831016604e8410600b841016171561068a575081810a610478565b61069760001984846105cc565b80600019048211156106ab576106ab6105a3565b029392505050565b60006104df838361060f565b6000826106dc57634e487b7160e01b600052601260045260246000fd5b500490565b60008160030b637fffffff1981036106fb576106fb6105a3565b60000392915050565b81810381811115610478576104786105a3565b8082028115828204841417610478576104786105a356fea2646970667358221220e636d77712b896990d7dbb7c1a357f8947ae1ba179acfc5ad0f8d285fb0a645664736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xD02641A0 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0xF1A640F8 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52F1EDCC EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x5B9DFCFA EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x831CF43D EQ PUSH2 0xE9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB4 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x17B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH2 0x1DC JUMP JUMPDEST PUSH2 0x112 PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x112 PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C4 JUMP JUMPDEST PUSH2 0x1F0 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C4 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH2 0x183 PUSH2 0x34A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0x371A930F54882F3E9296D66C96D41E22A3892C17F1AE0482B0761630010813F SWAP1 PUSH2 0x1D0 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x34A JUMP JUMPDEST PUSH2 0x1EE PUSH1 0x0 PUSH2 0x377 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x237 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBAF9BFB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x52571AF PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xFFFF PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA4AE35E0 SWAP1 PUSH1 0x44 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2E2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2DF SWAP2 DUP2 ADD SWAP1 PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2EF JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x304 DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x7 SIGNEXTEND DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x3C7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x314 PUSH2 0x34A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x33E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x22E JUMP JUMPDEST PUSH2 0x347 DUP2 PUSH2 0x377 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EE JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x22E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SGT PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2919491B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 SIGNEXTEND SGT ISZERO PUSH2 0x424 JUMPI PUSH4 0xFFFFFFFF DUP3 AND PUSH2 0x407 DUP2 PUSH1 0x12 PUSH2 0x5B9 JUMP JUMPDEST PUSH2 0x412 SWAP1 PUSH1 0xA PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x41C SWAP1 DUP6 PUSH2 0x6BF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x478 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F DUP4 PUSH2 0x6E1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH2 0x441 PUSH1 0x12 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x3 SIGNEXTEND DUP4 PUSH1 0x3 SIGNEXTEND SGT PUSH2 0x46D JUMPI PUSH2 0x458 PUSH1 0x12 DUP3 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x463 SWAP1 PUSH1 0xA PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x41C SWAP1 DUP6 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x458 DUP2 PUSH1 0x12 PUSH2 0x704 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B6 DUP4 PUSH2 0x47E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4DF DUP3 PUSH2 0x47E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x3 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT DUP1 ISZERO PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x556 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP4 MLOAD PUSH1 0x7 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x56A JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MSTORE PUSH2 0x578 PUSH1 0x20 DUP6 ADD PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x589 PUSH1 0x40 DUP6 ADD PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 SWAP4 DUP5 ADD MLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x478 JUMPI PUSH2 0x478 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x607 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x5EB JUMPI PUSH2 0x5EB PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x5F9 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x5D0 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x61E JUMPI POP PUSH1 0x1 PUSH2 0x478 JUMP JUMPDEST DUP2 PUSH2 0x62B JUMPI POP PUSH1 0x0 PUSH2 0x478 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x641 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x64B JUMPI PUSH2 0x667 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x478 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x65C JUMPI PUSH2 0x65C PUSH2 0x5A3 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x478 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x68A JUMPI POP DUP2 DUP2 EXP PUSH2 0x478 JUMP JUMPDEST PUSH2 0x697 PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x5CC JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x6AB JUMPI PUSH2 0x6AB PUSH2 0x5A3 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DF DUP4 DUP4 PUSH2 0x60F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x6DC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 SIGNEXTEND PUSH4 0x7FFFFFFF NOT DUP2 SUB PUSH2 0x6FB JUMPI PUSH2 0x6FB PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 SUB SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x478 JUMPI PUSH2 0x478 PUSH2 0x5A3 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x478 JUMPI PUSH2 0x478 PUSH2 0x5A3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 CALLDATASIZE 0xD7 PUSH24 0x12B896990D7DBB7C1A357F8947AE1BA179ACFC5AD0F8D285 0xFB EXP PUSH5 0x5664736F6C PUSH4 0x4300081C STOP CALLER ",
              "sourceMap": "326:3827:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;426:38;;;;;;;;188:6:7;176:19;;;158:38;;146:2;131:18;426:38:5;;;;;;;;2040:165;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;4044:107:5:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4127:17:5;4101:7;4127:17;;;:9;:17;;;;;;;4044:107;;;;981:25:7;;;969:2;954:18;4044:107:5;835:177:7;1638:85:0;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;1163:51:7;;1151:2;1136:18;1638:85:0;1017:203:7;3374:631:5;;;;;;:::i;:::-;;:::i;378:41::-;;417:2;378:41;;;;;1579:4:7;1567:17;;;1549:36;;1537:2;1522:18;378:41:5;1407:184:7;2543:215:0;;;;;;:::i;:::-;;:::i;2040:165:5:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2125:17:5;::::1;;::::0;;;:9:::1;:17;::::0;;;;;;:29;;;2170:28;::::1;::::0;::::1;::::0;2145:9;981:25:7;;969:2;954:18;;835:177;2170:28:5::1;;;;;;;;2040:165:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3374:631:5:-;-1:-1:-1;;;;;3475:17:5;;3436:7;3475:17;;;:9;:17;;;;;;;3503:83;;3553:22;;-1:-1:-1;;;3553:22:5;;-1:-1:-1;;;;;1181:32:7;;3553:22:5;;;1163:51:7;1136:18;;3553:22:5;;;;;;;;3503:83;3788:57;;-1:-1:-1;;;3788:57:5;;;;;1769:25:7;;;1842:6;3830:14:5;1830:19:7;1810:18;;;1803:47;3788:10:5;-1:-1:-1;;;;;3788:30:5;;;;1742:18:7;;3788:57:5;;;;;;;;;;;;;;;;;;-1:-1:-1;3788:57:5;;;;;;;;-1:-1:-1;;3788:57:5;;;;;;;;;;;;:::i;:::-;;;3784:215;;-1:-1:-1;3987:1:5;;3374:631;-1:-1:-1;;3374:631:5:o;3784:215::-;3908:40;3924:5;:11;;;3908:40;;3937:5;:10;;;3908:15;:40::i;:::-;3901:47;3374:631;-1:-1:-1;;;;3374:631:5:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1163:51:7::0;1136:18;;2672:31:0::1;1017:203:7::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;1163:51:7;1136:18;;1901:40:0;1017:203:7;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;2436:674:5:-;2512:7;2545:1;2535:6;:11;2531:74;;2569:25;;-1:-1:-1;;;2569:25:5;;;;;;;;;;;2531:74;2627:1;2619:5;:9;;;2615:489;;;2677:31;;;2755:24;2677:31;417:2;2755:24;:::i;:::-;2748:32;;:2;:32;:::i;:::-;2729:52;;2737:6;2729:52;:::i;:::-;2722:59;;;;;2615:489;2812:16;2838:6;2839:5;2838:6;:::i;:::-;2812:33;;;-1:-1:-1;2872:30:5;417:2;2872:30;:::i;:::-;2863:39;;:5;:39;;;2859:235;;2955:25;417:2;2955:8;:25;:::i;:::-;2948:33;;:2;:33;:::i;:::-;2929:53;;2937:6;2929:53;:::i;2859:235::-;3053:25;3070:8;417:2;3053:25;:::i;2615:489::-;2436:674;;;;:::o;207:173:7:-;275:20;;-1:-1:-1;;;;;324:31:7;;314:42;;304:70;;370:1;367;360:12;304:70;207:173;;;:::o;385:254::-;453:6;461;514:2;502:9;493:7;489:23;485:32;482:52;;;530:1;527;520:12;482:52;553:29;572:9;553:29;:::i;:::-;543:39;629:2;614:18;;;;601:32;;-1:-1:-1;;;385:254:7:o;644:186::-;703:6;756:2;744:9;735:7;731:23;727:32;724:52;;;772:1;769;762:12;724:52;795:29;814:9;795:29;:::i;:::-;785:39;644:186;-1:-1:-1;;;644:186:7:o;1861:175::-;1939:13;;1992:18;1981:30;;1971:41;;1961:69;;2026:1;2023;2016:12;2041:164;2118:13;;2171:1;2160:20;;;2150:31;;2140:59;;2195:1;2192;2185:12;2210:969;2302:6;2362:3;2350:9;2341:7;2337:23;2333:33;2378:2;2375:22;;;2393:1;2390;2383:12;2375:22;2412:1;2406:7;;2442:2;2436:9;2484:3;2476:6;2472:16;2554:6;2542:10;2539:22;2518:18;2506:10;2503:34;2500:62;2497:187;;;-1:-1:-1;;;2585:32:7;;2640:4;2637:1;2630:15;2669:4;2592:2;2658:16;2497:187;2700:2;2693:22;2757:16;;2813:1;2802:20;;;2792:31;;2782:61;;2838:2;2834;2827:14;2782:61;2852:21;;2906:48;2950:2;2935:18;;2906:48;:::i;:::-;2901:2;2893:6;2889:15;2882:73;2988:47;3031:2;3020:9;3016:18;2988:47;:::i;:::-;2983:2;2971:15;;2964:72;3103:2;3088:18;;;3082:25;3123:15;;;3116:32;;;;-1:-1:-1;2975:6:7;;2210:969;-1:-1:-1;;2210:969:7:o;3184:127::-;3245:10;3240:3;3236:20;3233:1;3226:31;3276:4;3273:1;3266:15;3300:4;3297:1;3290:15;3316:125;3381:9;;;3402:10;;;3399:36;;;3415:18;;:::i;3446:375::-;3534:1;3552:5;3566:249;3587:1;3577:8;3574:15;3566:249;;;3637:4;3632:3;3628:14;3622:4;3619:24;3616:50;;;3646:18;;:::i;:::-;3696:1;3686:8;3682:16;3679:49;;;3710:16;;;;3679:49;3793:1;3789:16;;;;;3749:15;;3566:249;;;3446:375;;;;;;:::o;3826:902::-;3875:5;3905:8;3895:80;;-1:-1:-1;3946:1:7;3960:5;;3895:80;3994:4;3984:76;;-1:-1:-1;4031:1:7;4045:5;;3984:76;4076:4;4094:1;4089:59;;;;4162:1;4157:174;;;;4069:262;;4089:59;4119:1;4110:10;;4133:5;;;4157:174;4194:3;4184:8;4181:17;4178:43;;;4201:18;;:::i;:::-;-1:-1:-1;;4257:1:7;4243:16;;4316:5;;4069:262;;4415:2;4405:8;4402:16;4396:3;4390:4;4387:13;4383:36;4377:2;4367:8;4364:16;4359:2;4353:4;4350:12;4346:35;4343:77;4340:203;;;-1:-1:-1;4452:19:7;;;4528:5;;4340:203;4575:42;-1:-1:-1;;4600:8:7;4594:4;4575:42;:::i;:::-;4653:6;4649:1;4645:6;4641:19;4632:7;4629:32;4626:58;;;4664:18;;:::i;:::-;4702:20;;3826:902;-1:-1:-1;;;3826:902:7:o;4733:131::-;4793:5;4822:36;4849:8;4843:4;4822:36;:::i;4869:217::-;4909:1;4935;4925:132;;4979:10;4974:3;4970:20;4967:1;4960:31;5014:4;5011:1;5004:15;5042:4;5039:1;5032:15;4925:132;-1:-1:-1;5071:9:7;;4869:217::o;5091:187::-;5125:3;5172:5;5169:1;5158:20;5206:10;5202:15;5193:7;5190:28;5187:54;;5221:18;;:::i;:::-;5261:1;5257:15;;5091:187;-1:-1:-1;;5091:187:7:o;5283:128::-;5350:9;;;5371:11;;;5368:37;;;5385:18;;:::i;5416:168::-;5489:9;;;5520;;5537:15;;;5531:22;;5517:37;5507:71;;5558:18;;:::i"
            },
            "methodIdentifiers": {
              "PRICE_DECIMALS()": "f1a640f8",
              "getTokenPrice(address)": "d02641a0",
              "maxOracleDelay()": "52f1edcc",
              "oracleID(address)": "831cf43d",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "setOracleID(address,bytes32)": "5b9dfcfa",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pythOracle\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_maxOracleDelay\",\"type\":\"uint16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NegativePriceNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"OracleNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"oracleID\",\"type\":\"bytes32\"}],\"name\":\"OracleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRICE_DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxOracleDelay\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"oracleID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_oracleID\",\"type\":\"bytes32\"}],\"name\":\"setOracleID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OracleNotExist(address)\":[{\"params\":{\"token\":\"Address of the token without an assigned oracle ID.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"OracleSet(address,bytes32)\":{\"params\":{\"oracleID\":\"The oracle feed ID associated with the token.\",\"token\":\"Address of the token for which the oracle ID was set.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the oracle contract and transfers ownership to the given owner address.\",\"params\":{\"_pythOracle\":\"Address of the deployed Pyth Oracle contract.\"}},\"getTokenPrice(address)\":{\"details\":\"Price is usually returned in 18 decimals for consistency.\",\"params\":{\"_token\":\"Address of the token.\"},\"returns\":{\"_0\":\"The latest price of the token.\"}},\"oracleID(address)\":{\"params\":{\"_token\":\"Address of the token.\"},\"returns\":{\"_0\":\"The oracle feed ID assigned to the token.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setOracleID(address,bytes32)\":{\"details\":\"Can only be called by authorized roles (owner).\",\"params\":{\"_oracleID\":\"Oracle feed ID from the price oracle provider.\",\"_token\":\"Address of the token.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"PRICE_DECIMALS\":{\"details\":\"This value is fixed to match the output of `_scalePythPrice`, which normalizes prices to 18 decimals.\",\"return\":\"The number of decimals (always 18).\",\"returns\":{\"_0\":\"The number of decimals (always 18).\"}},\"oracleIDs\":{\"details\":\"Used to resolve the oracle price feed for a specific token.\"},\"pythOracle\":{\"details\":\"Immutable after deployment.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"NegativePriceNotAllowed()\":[{\"notice\":\"Thrown when a negative price is returned by the oracle, which is invalid.\"}],\"OracleNotExist(address)\":[{\"notice\":\"Thrown when no oracle is set for the given token address.\"}]},\"events\":{\"OracleSet(address,bytes32)\":{\"notice\":\"Emitted when a new oracle ID is set for a token.\"}},\"kind\":\"user\",\"methods\":{\"PRICE_DECIMALS()\":{\"notice\":\"Returns the number of decimals used for the scaled price.\"},\"constructor\":{\"notice\":\"Deploys the contract and sets the Pyth Oracle and contract owner.\"},\"getTokenPrice(address)\":{\"notice\":\"Returns the current price of the token from the oracle.\"},\"oracleID(address)\":{\"notice\":\"Returns the oracle ID for a given token.\"},\"setOracleID(address,bytes32)\":{\"notice\":\"Sets the oracle ID for a specific token.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceOracle.sol\":\"PriceOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":{\"keccak256\":\"0x217532ece69b8e472a6260b740c34aebfb5a299bbfed6392cf0458ed368be7ab\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02d1b71006ccdfd6402a2b72ea197babbd1b54c26a70ebb76a114f0ae8352f08\",\"dweb:/ipfs/QmbqfuvwriG3AEwYEwupUaQKgfxRYK6Qui99o6wQysPoP3\"]},\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0x7ca8e03315d4516d6833c425a52c43e8cacf2077492074d2d36ae5c17899c9c8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ad1c69d157eccb09ce248e1ec021f2e58b61dd36160f5be3973a7bea4a899f64\",\"dweb:/ipfs/QmW1yXsDrMsuQKxtZanSZXpyUW2QwnCKVoCjS5fC3NoSVY\"]},\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0xade221177dda98ebd194c363f264ceea125bde0e6a7a72f7b54da3ac60316894\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a404dbbc64183995326c345cae27601d37c783b3d9030c8dc0ab4943fa2bf1da\",\"dweb:/ipfs/QmfNFesQffYisafmJFbKHxVFSD8fY49X1z9f8N7qtfW8AX\"]},\"contracts/PriceOracle.sol\":{\"keccak256\":\"0x8120cfa1a14143d52e3d58223f62244a34fbd46631518eaf20dea9f9d12fc943\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://489797b722080f511961fd545d86e78fdd57080efdbd0e0713d68e5cb8c503b5\",\"dweb:/ipfs/QmbU9KwaWhkVLDEoEoSX2oCnwS4oyrjYXd6ZvHsvwr2yiq\"]},\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x3b7719c3f01f9f9be03a1a23e6474b07588ffd4ea488efbf97b03e5683b021b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ef763398491597b64a8c855e1ec5a6206d9160fdb6308e282c49da3a2845d09\",\"dweb:/ipfs/QmU4tXxMVx9V5kpLMpUyRnGi8SHYUkEZEPsqhay4cpuJo4\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IPriceOracle.sol": {
        "IPriceOracle": {
          "abi": [
            {
              "inputs": [],
              "name": "NegativePriceNotAllowed",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "OracleNotExist",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "oracleID",
                  "type": "bytes32"
                }
              ],
              "name": "OracleSet",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "PRICE_DECIMALS",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "name": "getTokenPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "name": "oracleID",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "_oracleID",
                  "type": "bytes32"
                }
              ],
              "name": "setOracleID",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "PRICE_DECIMALS()": "f1a640f8",
              "getTokenPrice(address)": "d02641a0",
              "oracleID(address)": "831cf43d",
              "setOracleID(address,bytes32)": "5b9dfcfa"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NegativePriceNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"OracleNotExist\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"oracleID\",\"type\":\"bytes32\"}],\"name\":\"OracleSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRICE_DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"oracleID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_oracleID\",\"type\":\"bytes32\"}],\"name\":\"setOracleID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Defines functions and events for managing and accessing token price data.\",\"errors\":{\"OracleNotExist(address)\":[{\"params\":{\"token\":\"Address of the token without an assigned oracle ID.\"}}]},\"events\":{\"OracleSet(address,bytes32)\":{\"params\":{\"oracleID\":\"The oracle feed ID associated with the token.\",\"token\":\"Address of the token for which the oracle ID was set.\"}}},\"kind\":\"dev\",\"methods\":{\"PRICE_DECIMALS()\":{\"details\":\"This value is fixed to match the output of `_scalePythPrice`, which normalizes prices to 18 decimals.\",\"returns\":{\"_0\":\"The number of decimals (always 18).\"}},\"getTokenPrice(address)\":{\"details\":\"Price is usually returned in 18 decimals for consistency.\",\"params\":{\"_token\":\"Address of the token.\"},\"returns\":{\"_0\":\"The latest price of the token.\"}},\"oracleID(address)\":{\"params\":{\"_token\":\"Address of the token.\"},\"returns\":{\"_0\":\"The oracle feed ID assigned to the token.\"}},\"setOracleID(address,bytes32)\":{\"details\":\"Can only be called by authorized roles (owner).\",\"params\":{\"_oracleID\":\"Oracle feed ID from the price oracle provider.\",\"_token\":\"Address of the token.\"}}},\"title\":\"IPriceOracle\",\"version\":1},\"userdoc\":{\"errors\":{\"NegativePriceNotAllowed()\":[{\"notice\":\"Thrown when a negative price is returned by the oracle, which is invalid.\"}],\"OracleNotExist(address)\":[{\"notice\":\"Thrown when no oracle is set for the given token address.\"}]},\"events\":{\"OracleSet(address,bytes32)\":{\"notice\":\"Emitted when a new oracle ID is set for a token.\"}},\"kind\":\"user\",\"methods\":{\"PRICE_DECIMALS()\":{\"notice\":\"Returns the number of decimals used for the scaled price.\"},\"getTokenPrice(address)\":{\"notice\":\"Returns the current price of the token from the oracle.\"},\"oracleID(address)\":{\"notice\":\"Returns the oracle ID for a given token.\"},\"setOracleID(address,bytes32)\":{\"notice\":\"Sets the oracle ID for a specific token.\"}},\"notice\":\"Interface for a price oracle used to fetch token prices via oracle IDs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceOracle.sol\":\"IPriceOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x3b7719c3f01f9f9be03a1a23e6474b07588ffd4ea488efbf97b03e5683b021b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ef763398491597b64a8c855e1ec5a6206d9160fdb6308e282c49da3a2845d09\",\"dweb:/ipfs/QmU4tXxMVx9V5kpLMpUyRnGi8SHYUkEZEPsqhay4cpuJo4\"]}},\"version\":1}"
        }
      }
    }
  }
}